{
    "sourceFile": "frontend/src/layouts/NavPageLayout.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 41,
            "patches": [
                {
                    "date": 1722238265966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1722238273977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,143 @@\n+import {Outlet, useLocation} from \"react-router-dom\";\r\n+import {ProfileLeft} from \"../components/pages/ProfileLeft.jsx\";\r\n+import {SubHeader} from \"../components/pages/SubHeader.jsx\";\r\n+import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n+import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n+import {Notification} from \"../components/pages/Notification.jsx\";\r\n+import {useAuth} from \"../context/AuthProvider.jsx\";\r\n+import {SERVERLINK} from \"../constants/index.js\";\r\n+import {useApp} from \"../context/AppProvider.jsx\";\r\n+import {useEffect} from \"react\";\r\n+import {NAVIGATIONS} from \"../constants/home.js\";\r\n+import {Icon} from \"../styles/components.js\";\r\n+import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n+\r\n+const NavPageLayout = () => {\r\n+    const {personalInformation} = useAuth();\r\n+    const user = personalInformation;\r\n+\r\n+    const pathname = useLocation().pathname;\r\n+\r\n+    const {handleFriends, handleOfferSuggestion, suggestions} = useApp();\r\n+\r\n+    return (\r\n+        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n+            {/*Left subNav*/}\r\n+            <div className=\"fixed bottom-10 right-[20%]\">\r\n+                <Icon icon=\"bi bi-briefcase\"/>\r\n+            </div>\r\n+            <div\r\n+                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n+                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n+                             account={user?.accounttype}/>\r\n+                <div className=\"flex flex-col gap-3 w-full\">\r\n+                    <DynamicLeftContent currentLocation={pathname}/>\r\n+                </div>\r\n+\r\n+            </div>\r\n+\r\n+            {/*Center */}\r\n+            <div\r\n+                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n+                <Outlet/>\r\n+            </div>\r\n+\r\n+            {/*Right subNav*/}\r\n+            <div\r\n+                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n+                <div className=\"flex flex-col gap-4 w-full\">\r\n+                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\"/>\r\n+                    {\r\n+                        suggestions.length > 0 ? (\r\n+                            suggestions.map(suggestion =>\r\n+                                (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n+                                                  title={suggestion.title} depart={suggestion.depart}\r\n+                                                  destination={suggestion.dest}\r\n+                                                  scheduleddate={suggestion.sheduleddate}/>)\r\n+                            )\r\n+                        ) : (\r\n+                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n+                                de sauvegarde pour l'instant</p>\r\n+                        )\r\n+                    }\r\n+                </div>\r\n+                <div className=\"flex flex-col gap-6\">\r\n+                    <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\"/>\r\n+                        {\r\n+                            [1,2,3].map(item => (\r\n+                                <LittleOfferCard key={item}/>\r\n+                            ))\r\n+                        }\r\n+                </div>\r\n+            </div>\r\n+\r\n+        </section>\r\n+    )\r\n+}\r\n+export default NavPageLayout;\r\n+\r\n+\r\n+const DynamicLeftContent = ({currentLocation}) => {\r\n+    const {friends, users} = useApp();\r\n+\r\n+    switch (currentLocation) {\r\n+\r\n+        case NAVIGATIONS.home :\r\n+            return (\r\n+                <>\r\n+                <SubHeader name=\"Follower\" icon=\"bi bi-person\"/>\r\n+                <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                    {\r\n+                        friends.length > 0 ?\r\n+                            friends.map(friend => (\r\n+                                <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                                 name={friend.firstname + \" \" + friend.lastname}\r\n+                                                 image={SERVERLINK + \"/\" + friend.profileimage}\r\n+                                />\r\n+\r\n+                                    )) :\r\n+                                    <div>No friends</div>\r\n+                                    }\r\n+                                </div>\r\n+                        </>\r\n+                        )\r\n+\r\n+                        case NAVIGATIONS.friend :\r\n+                        return <>\r\n+                        <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\"/>\r\n+                        <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n+                    {\r\n+                        users.length > 0 ?\r\n+                        users.map(us => (\r\n+                        <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n+                     account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n+                     image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false}/>\r\n+                )) :\r\n+                <div>Pas d'amis</div>\r\n+                }\r\n+                </div>\r\n+        </>\r\n+\r\n+        default :\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Amis\" icon=\"bi bi-person\"/>\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                                     name={friend.firstname + \" \" + friend.lastname}\r\n+                                                     image={SERVERLINK + \"/\" + friend.profileimage}/>\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+        }\r\n+        }\r\n+\r\n+        const DynamicRightContent = () => {\r\n+\r\n+        }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722238282960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,143 @@\n+import {Outlet, useLocation} from \"react-router-dom\";\r\n+import {ProfileLeft} from \"../components/pages/ProfileLeft.jsx\";\r\n+import {SubHeader} from \"../components/pages/SubHeader.jsx\";\r\n+import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n+import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n+import {Notification} from \"../components/pages/Notification.jsx\";\r\n+import {useAuth} from \"../context/AuthProvider.jsx\";\r\n+import {SERVERLINK} from \"../constants/index.js\";\r\n+import {useApp} from \"../context/AppProvider.jsx\";\r\n+import {useEffect} from \"react\";\r\n+import {NAVIGATIONS} from \"../constants/home.js\";\r\n+import {Icon} from \"../styles/components.js\";\r\n+import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n+\r\n+const NavPageLayout = () => {\r\n+    const {personalInformation} = useAuth();\r\n+    const user = personalInformation;\r\n+\r\n+    const pathname = useLocation().pathname;\r\n+\r\n+    const {handleFriends, handleOfferSuggestion, suggestions} = useApp();\r\n+\r\n+    return (\r\n+        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n+            {/*Left subNav*/}\r\n+            <div className=\"fixed bottom-10 right-[20%]\">\r\n+                <Icon icon=\"bi bi-briefcase\"/>\r\n+            </div>\r\n+            <div\r\n+                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n+                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n+                             account={user?.accounttype}/>\r\n+                <div className=\"flex flex-col gap-3 w-full\">\r\n+                    <DynamicLeftContent currentLocation={pathname}/>\r\n+                </div>\r\n+\r\n+            </div>\r\n+\r\n+            {/*Center */}\r\n+            <div\r\n+                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n+                <Outlet/>\r\n+            </div>\r\n+\r\n+            {/*Right subNav*/}\r\n+            <div\r\n+                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n+                <div className=\"flex flex-col gap-4 w-full\">\r\n+                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\"/>\r\n+                    {\r\n+                        suggestions.length > 0 ? (\r\n+                            suggestions.map(suggestion =>\r\n+                                (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n+                                                  title={suggestion.title} depart={suggestion.depart}\r\n+                                                  destination={suggestion.dest}\r\n+                                                  scheduleddate={suggestion.sheduleddate}/>)\r\n+                            )\r\n+                        ) : (\r\n+                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n+                                de sauvegarde pour l'instant</p>\r\n+                        )\r\n+                    }\r\n+                </div>\r\n+                <div className=\"flex flex-col gap-6\">\r\n+                    <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\"/>\r\n+                        {\r\n+                            [1,2,3].map(item => (\r\n+                                <LittleOfferCard key={item}/>\r\n+                            ))\r\n+                        }\r\n+                </div>\r\n+            </div>\r\n+\r\n+        </section>\r\n+    )\r\n+}\r\n+export default NavPageLayout;\r\n+\r\n+\r\n+const DynamicLeftContent = ({currentLocation}) => {\r\n+    const {friends, users} = useApp();\r\n+\r\n+    switch (currentLocation) {\r\n+\r\n+        case NAVIGATIONS.home :\r\n+            return (\r\n+                <>\r\n+                <SubHeader name=\"Folower\" icon=\"bi bi-person\"/>\r\n+                <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                    {\r\n+                        friends.length > 0 ?\r\n+                            friends.map(friend => (\r\n+                                <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                                 name={friend.firstname + \" \" + friend.lastname}\r\n+                                                 image={SERVERLINK + \"/\" + friend.profileimage}\r\n+                                />\r\n+\r\n+                                    )) :\r\n+                                    <div>No friends</div>\r\n+                                    }\r\n+                                </div>\r\n+                        </>\r\n+                        )\r\n+\r\n+                        case NAVIGATIONS.friend :\r\n+                        return <>\r\n+                        <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\"/>\r\n+                        <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n+                    {\r\n+                        users.length > 0 ?\r\n+                        users.map(us => (\r\n+                        <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n+                     account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n+                     image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false}/>\r\n+                )) :\r\n+                <div>Pas d'amis</div>\r\n+                }\r\n+                </div>\r\n+        </>\r\n+\r\n+        default :\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Amis\" icon=\"bi bi-person\"/>\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                                     name={friend.firstname + \" \" + friend.lastname}\r\n+                                                     image={SERVERLINK + \"/\" + friend.profileimage}/>\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+        }\r\n+        }\r\n+\r\n+        const DynamicRightContent = () => {\r\n+\r\n+        }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722238290107,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n \r\n         case NAVIGATIONS.home :\r\n             return (\r\n                 <>\r\n-                <SubHeader name=\"Folower\" icon=\"bi bi-person\"/>\r\n+                <SubHeader name=\"Followed\" icon=\"bi bi-person\"/>\r\n                 <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n                     {\r\n                         friends.length > 0 ?\r\n                             friends.map(friend => (\r\n@@ -139,291 +139,5 @@\n         }\r\n \r\n         const DynamicRightContent = () => {\r\n \r\n-        }\n-import {Outlet, useLocation} from \"react-router-dom\";\r\n-import {ProfileLeft} from \"../components/pages/ProfileLeft.jsx\";\r\n-import {SubHeader} from \"../components/pages/SubHeader.jsx\";\r\n-import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n-import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n-import {Notification} from \"../components/pages/Notification.jsx\";\r\n-import {useAuth} from \"../context/AuthProvider.jsx\";\r\n-import {SERVERLINK} from \"../constants/index.js\";\r\n-import {useApp} from \"../context/AppProvider.jsx\";\r\n-import {useEffect} from \"react\";\r\n-import {NAVIGATIONS} from \"../constants/home.js\";\r\n-import {Icon} from \"../styles/components.js\";\r\n-import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n-\r\n-const NavPageLayout = () => {\r\n-    const {personalInformation} = useAuth();\r\n-    const user = personalInformation;\r\n-\r\n-    const pathname = useLocation().pathname;\r\n-\r\n-    const {handleFriends, handleOfferSuggestion, suggestions} = useApp();\r\n-\r\n-    return (\r\n-        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n-            {/*Left subNav*/}\r\n-            <div className=\"fixed bottom-10 right-[20%]\">\r\n-                <Icon icon=\"bi bi-briefcase\"/>\r\n-            </div>\r\n-            <div\r\n-                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n-                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n-                             account={user?.accounttype}/>\r\n-                <div className=\"flex flex-col gap-3 w-full\">\r\n-                    <DynamicLeftContent currentLocation={pathname}/>\r\n-                </div>\r\n-\r\n-            </div>\r\n-\r\n-            {/*Center */}\r\n-            <div\r\n-                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n-                <Outlet/>\r\n-            </div>\r\n-\r\n-            {/*Right subNav*/}\r\n-            <div\r\n-                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n-                <div className=\"flex flex-col gap-4 w-full\">\r\n-                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\"/>\r\n-                    {\r\n-                        suggestions.length > 0 ? (\r\n-                            suggestions.map(suggestion =>\r\n-                                (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n-                                                  title={suggestion.title} depart={suggestion.depart}\r\n-                                                  destination={suggestion.dest}\r\n-                                                  scheduleddate={suggestion.sheduleddate}/>)\r\n-                            )\r\n-                        ) : (\r\n-                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n-                                de sauvegarde pour l'instant</p>\r\n-                        )\r\n-                    }\r\n-                </div>\r\n-                <div className=\"flex flex-col gap-6\">\r\n-                    <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\"/>\r\n-                        {\r\n-                            [1,2,3].map(item => (\r\n-                                <LittleOfferCard key={item}/>\r\n-                            ))\r\n-                        }\r\n-                </div>\r\n-            </div>\r\n-\r\n-        </section>\r\n-    )\r\n-}\r\n-export default NavPageLayout;\r\n-\r\n-\r\n-const DynamicLeftContent = ({currentLocation}) => {\r\n-    const {friends, users} = useApp();\r\n-\r\n-    switch (currentLocation) {\r\n-\r\n-        case NAVIGATIONS.home :\r\n-            return (\r\n-                <>\r\n-                <SubHeader name=\"Follower\" icon=\"bi bi-person\"/>\r\n-                <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                    {\r\n-                        friends.length > 0 ?\r\n-                            friends.map(friend => (\r\n-                                <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                                 name={friend.firstname + \" \" + friend.lastname}\r\n-                                                 image={SERVERLINK + \"/\" + friend.profileimage}\r\n-                                />\r\n-\r\n-                                    )) :\r\n-                                    <div>No friends</div>\r\n-                                    }\r\n-                                </div>\r\n-                        </>\r\n-                        )\r\n-\r\n-                        case NAVIGATIONS.friend :\r\n-                        return <>\r\n-                        <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\"/>\r\n-                        <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n-                    {\r\n-                        users.length > 0 ?\r\n-                        users.map(us => (\r\n-                        <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n-                     account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n-                     image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false}/>\r\n-                )) :\r\n-                <div>Pas d'amis</div>\r\n-                }\r\n-                </div>\r\n-        </>\r\n-\r\n-        default :\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Amis\" icon=\"bi bi-person\"/>\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                                     name={friend.firstname + \" \" + friend.lastname}\r\n-                                                     image={SERVERLINK + \"/\" + friend.profileimage}/>\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-        }\r\n-        }\r\n-\r\n-        const DynamicRightContent = () => {\r\n-\r\n-        }\n-import {Outlet, useLocation} from \"react-router-dom\";\r\n-import {ProfileLeft} from \"../components/pages/ProfileLeft.jsx\";\r\n-import {SubHeader} from \"../components/pages/SubHeader.jsx\";\r\n-import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n-import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n-import {Notification} from \"../components/pages/Notification.jsx\";\r\n-import {useAuth} from \"../context/AuthProvider.jsx\";\r\n-import {SERVERLINK} from \"../constants/index.js\";\r\n-import {useApp} from \"../context/AppProvider.jsx\";\r\n-import {useEffect} from \"react\";\r\n-import {NAVIGATIONS} from \"../constants/home.js\";\r\n-import {Icon} from \"../styles/components.js\";\r\n-import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n-\r\n-const NavPageLayout = () => {\r\n-    const {personalInformation} = useAuth();\r\n-    const user = personalInformation;\r\n-\r\n-    const pathname = useLocation().pathname;\r\n-\r\n-    const {handleFriends, handleOfferSuggestion, suggestions} = useApp();\r\n-\r\n-    return (\r\n-        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n-            {/*Left subNav*/}\r\n-            <div className=\"fixed bottom-10 right-[20%]\">\r\n-                <Icon icon=\"bi bi-briefcase\"/>\r\n-            </div>\r\n-            <div\r\n-                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n-                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n-                             account={user?.accounttype}/>\r\n-                <div className=\"flex flex-col gap-3 w-full\">\r\n-                    <DynamicLeftContent currentLocation={pathname}/>\r\n-                </div>\r\n-\r\n-            </div>\r\n-\r\n-            {/*Center */}\r\n-            <div\r\n-                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n-                <Outlet/>\r\n-            </div>\r\n-\r\n-            {/*Right subNav*/}\r\n-            <div\r\n-                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n-                <div className=\"flex flex-col gap-4 w-full\">\r\n-                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\"/>\r\n-                    {\r\n-                        suggestions.length > 0 ? (\r\n-                            suggestions.map(suggestion =>\r\n-                                (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n-                                                  title={suggestion.title} depart={suggestion.depart}\r\n-                                                  destination={suggestion.dest}\r\n-                                                  scheduleddate={suggestion.sheduleddate}/>)\r\n-                            )\r\n-                        ) : (\r\n-                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n-                                de sauvegarde pour l'instant</p>\r\n-                        )\r\n-                    }\r\n-                </div>\r\n-                <div className=\"flex flex-col gap-6\">\r\n-                    <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\"/>\r\n-                        {\r\n-                            [1,2,3].map(item => (\r\n-                                <LittleOfferCard key={item}/>\r\n-                            ))\r\n-                        }\r\n-                </div>\r\n-            </div>\r\n-\r\n-        </section>\r\n-    )\r\n-}\r\n-export default NavPageLayout;\r\n-\r\n-\r\n-const DynamicLeftContent = ({currentLocation}) => {\r\n-    const {friends, users} = useApp();\r\n-\r\n-    switch (currentLocation) {\r\n-\r\n-        case NAVIGATIONS.home :\r\n-            return (\r\n-                <>\r\n-                <SubHeader name=\"Follo\" icon=\"bi bi-person\"/>\r\n-                <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                    {\r\n-                        friends.length > 0 ?\r\n-                            friends.map(friend => (\r\n-                                <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                                 name={friend.firstname + \" \" + friend.lastname}\r\n-                                                 image={SERVERLINK + \"/\" + friend.profileimage}\r\n-                                />\r\n-\r\n-                                    )) :\r\n-                                    <div>No friends</div>\r\n-                                    }\r\n-                                </div>\r\n-                        </>\r\n-                        )\r\n-\r\n-                        case NAVIGATIONS.friend :\r\n-                        return <>\r\n-                        <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\"/>\r\n-                        <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n-                    {\r\n-                        users.length > 0 ?\r\n-                        users.map(us => (\r\n-                        <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n-                     account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n-                     image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false}/>\r\n-                )) :\r\n-                <div>Pas d'amis</div>\r\n-                }\r\n-                </div>\r\n-        </>\r\n-\r\n-        default :\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Amis\" icon=\"bi bi-person\"/>\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                                     name={friend.firstname + \" \" + friend.lastname}\r\n-                                                     image={SERVERLINK + \"/\" + friend.profileimage}/>\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-        }\r\n-        }\r\n-\r\n-        const DynamicRightContent = () => {\r\n-\r\n         }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722238301770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,143 @@\n+import {Outlet, useLocation} from \"react-router-dom\";\r\n+import {ProfileLeft} from \"../components/pages/ProfileLeft.jsx\";\r\n+import {SubHeader} from \"../components/pages/SubHeader.jsx\";\r\n+import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n+import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n+import {Notification} from \"../components/pages/Notification.jsx\";\r\n+import {useAuth} from \"../context/AuthProvider.jsx\";\r\n+import {SERVERLINK} from \"../constants/index.js\";\r\n+import {useApp} from \"../context/AppProvider.jsx\";\r\n+import {useEffect} from \"react\";\r\n+import {NAVIGATIONS} from \"../constants/home.js\";\r\n+import {Icon} from \"../styles/components.js\";\r\n+import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n+\r\n+const NavPageLayout = () => {\r\n+    const {personalInformation} = useAuth();\r\n+    const user = personalInformation;\r\n+\r\n+    const pathname = useLocation().pathname;\r\n+\r\n+    const {handleFriends, handleOfferSuggestion, suggestions} = useApp();\r\n+\r\n+    return (\r\n+        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n+            {/*Left subNav*/}\r\n+            <div className=\"fixed bottom-10 right-[20%]\">\r\n+                <Icon icon=\"bi bi-briefcase\"/>\r\n+            </div>\r\n+            <div\r\n+                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n+                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n+                             account={user?.accounttype}/>\r\n+                <div className=\"flex flex-col gap-3 w-full\">\r\n+                    <DynamicLeftContent currentLocation={pathname}/>\r\n+                </div>\r\n+\r\n+            </div>\r\n+\r\n+            {/*Center */}\r\n+            <div\r\n+                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n+                <Outlet/>\r\n+            </div>\r\n+\r\n+            {/*Right subNav*/}\r\n+            <div\r\n+                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n+                <div className=\"flex flex-col gap-4 w-full\">\r\n+                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\"/>\r\n+                    {\r\n+                        suggestions.length > 0 ? (\r\n+                            suggestions.map(suggestion =>\r\n+                                (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n+                                                  title={suggestion.title} depart={suggestion.depart}\r\n+                                                  destination={suggestion.dest}\r\n+                                                  scheduleddate={suggestion.sheduleddate}/>)\r\n+                            )\r\n+                        ) : (\r\n+                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n+                                de sauvegarde pour l'instant</p>\r\n+                        )\r\n+                    }\r\n+                </div>\r\n+                <div className=\"flex flex-col gap-6\">\r\n+                    <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\"/>\r\n+                        {\r\n+                            [1,2,3].map(item => (\r\n+                                <LittleOfferCard key={item}/>\r\n+                            ))\r\n+                        }\r\n+                </div>\r\n+            </div>\r\n+\r\n+        </section>\r\n+    )\r\n+}\r\n+export default NavPageLayout;\r\n+\r\n+\r\n+const DynamicLeftContent = ({currentLocation}) => {\r\n+    const {friends, users} = useApp();\r\n+\r\n+    switch (currentLocation) {\r\n+\r\n+        case NAVIGATIONS.home :\r\n+            return (\r\n+                <>\r\n+                <SubHeader name=\"Followed People\" icon=\"bi bi-person\"/>\r\n+                <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                    {\r\n+                        friends.length > 0 ?\r\n+                            friends.map(friend => (\r\n+                                <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                                 name={friend.firstname + \" \" + friend.lastname}\r\n+                                                 image={SERVERLINK + \"/\" + friend.profileimage}\r\n+                                />\r\n+\r\n+                                    )) :\r\n+                                    <div>No friends</div>\r\n+                                    }\r\n+                                </div>\r\n+                        </>\r\n+                        )\r\n+\r\n+                        case NAVIGATIONS.friend :\r\n+                        return <>\r\n+                        <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\"/>\r\n+                        <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n+                    {\r\n+                        users.length > 0 ?\r\n+                        users.map(us => (\r\n+                        <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n+                     account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n+                     image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false}/>\r\n+                )) :\r\n+                <div>Pas d'amis</div>\r\n+                }\r\n+                </div>\r\n+        </>\r\n+\r\n+        default :\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Amis\" icon=\"bi bi-person\"/>\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                                     name={friend.firstname + \" \" + friend.lastname}\r\n+                                                     image={SERVERLINK + \"/\" + friend.profileimage}/>\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+        }\r\n+        }\r\n+\r\n+        const DynamicRightContent = () => {\r\n+\r\n+        }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722244466194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,148 +139,5 @@\n         }\r\n \r\n         const DynamicRightContent = () => {\r\n \r\n-        }\n-import {Outlet, useLocation} from \"react-router-dom\";\r\n-import {ProfileLeft} from \"../components/pages/ProfileLeft.jsx\";\r\n-import {SubHeader} from \"../components/pages/SubHeader.jsx\";\r\n-import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n-import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n-import {Notification} from \"../components/pages/Notification.jsx\";\r\n-import {useAuth} from \"../context/AuthProvider.jsx\";\r\n-import {SERVERLINK} from \"../constants/index.js\";\r\n-import {useApp} from \"../context/AppProvider.jsx\";\r\n-import {useEffect} from \"react\";\r\n-import {NAVIGATIONS} from \"../constants/home.js\";\r\n-import {Icon} from \"../styles/components.js\";\r\n-import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n-\r\n-const NavPageLayout = () => {\r\n-    const {personalInformation} = useAuth();\r\n-    const user = personalInformation;\r\n-\r\n-    const pathname = useLocation().pathname;\r\n-\r\n-    const {handleFriends, handleOfferSuggestion, suggestions} = useApp();\r\n-\r\n-    return (\r\n-        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n-            {/*Left subNav*/}\r\n-            <div className=\"fixed bottom-10 right-[20%]\">\r\n-                <Icon icon=\"bi bi-briefcase\"/>\r\n-            </div>\r\n-            <div\r\n-                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n-                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n-                             account={user?.accounttype}/>\r\n-                <div className=\"flex flex-col gap-3 w-full\">\r\n-                    <DynamicLeftContent currentLocation={pathname}/>\r\n-                </div>\r\n-\r\n-            </div>\r\n-\r\n-            {/*Center */}\r\n-            <div\r\n-                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n-                <Outlet/>\r\n-            </div>\r\n-\r\n-            {/*Right subNav*/}\r\n-            <div\r\n-                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n-                <div className=\"flex flex-col gap-4 w-full\">\r\n-                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\"/>\r\n-                    {\r\n-                        suggestions.length > 0 ? (\r\n-                            suggestions.map(suggestion =>\r\n-                                (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n-                                                  title={suggestion.title} depart={suggestion.depart}\r\n-                                                  destination={suggestion.dest}\r\n-                                                  scheduleddate={suggestion.sheduleddate}/>)\r\n-                            )\r\n-                        ) : (\r\n-                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n-                                de sauvegarde pour l'instant</p>\r\n-                        )\r\n-                    }\r\n-                </div>\r\n-                <div className=\"flex flex-col gap-6\">\r\n-                    <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\"/>\r\n-                        {\r\n-                            [1,2,3].map(item => (\r\n-                                <LittleOfferCard key={item}/>\r\n-                            ))\r\n-                        }\r\n-                </div>\r\n-            </div>\r\n-\r\n-        </section>\r\n-    )\r\n-}\r\n-export default NavPageLayout;\r\n-\r\n-\r\n-const DynamicLeftContent = ({currentLocation}) => {\r\n-    const {friends, users} = useApp();\r\n-\r\n-    switch (currentLocation) {\r\n-\r\n-        case NAVIGATIONS.home :\r\n-            return (\r\n-                <>\r\n-                <SubHeader name=\"Followed\" icon=\"bi bi-person\"/>\r\n-                <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                    {\r\n-                        friends.length > 0 ?\r\n-                            friends.map(friend => (\r\n-                                <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                                 name={friend.firstname + \" \" + friend.lastname}\r\n-                                                 image={SERVERLINK + \"/\" + friend.profileimage}\r\n-                                />\r\n-\r\n-                                    )) :\r\n-                                    <div>No friends</div>\r\n-                                    }\r\n-                                </div>\r\n-                        </>\r\n-                        )\r\n-\r\n-                        case NAVIGATIONS.friend :\r\n-                        return <>\r\n-                        <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\"/>\r\n-                        <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n-                    {\r\n-                        users.length > 0 ?\r\n-                        users.map(us => (\r\n-                        <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n-                     account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n-                     image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false}/>\r\n-                )) :\r\n-                <div>Pas d'amis</div>\r\n-                }\r\n-                </div>\r\n-        </>\r\n-\r\n-        default :\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Amis\" icon=\"bi bi-person\"/>\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                                     name={friend.firstname + \" \" + friend.lastname}\r\n-                                                     image={SERVERLINK + \"/\" + friend.profileimage}/>\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-        }\r\n-        }\r\n-\r\n-        const DynamicRightContent = () => {\r\n-\r\n         }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722244474518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,143 @@\n+import {Outlet, useLocation} from \"react-router-dom\";\r\n+import {ProfileLeft} from \"../components/pages/ProfileLeft.jsx\";\r\n+import {SubHeader} from \"../components/pages/SubHeader.jsx\";\r\n+import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n+import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n+import {Notification} from \"../components/pages/Notification.jsx\";\r\n+import {useAuth} from \"../context/AuthProvider.jsx\";\r\n+import {SERVERLINK} from \"../constants/index.js\";\r\n+import {useApp} from \"../context/AppProvider.jsx\";\r\n+import {useEffect} from \"react\";\r\n+import {NAVIGATIONS} from \"../constants/home.js\";\r\n+import {Icon} from \"../styles/components.js\";\r\n+import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n+\r\n+const NavPageLayout = () => {\r\n+    const {personalInformation} = useAuth();\r\n+    const user = personalInformation;\r\n+\r\n+    const pathname = useLocation().pathname;\r\n+\r\n+    const {handleFriends, handleOfferSuggestion, suggestions} = useApp();\r\n+\r\n+    return (\r\n+        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n+            {/*Left subNav*/}\r\n+            <div className=\"fixed bottom-10 right-[20%]\">\r\n+                <Icon icon=\"bi bi-briefcase\"/>\r\n+            </div>\r\n+            <div\r\n+                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n+                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n+                             account={user?.accounttype}/>\r\n+                <div className=\"flex flex-col gap-3 w-full\">\r\n+                    <DynamicLeftContent currentLocation={pathname}/>\r\n+                </div>\r\n+\r\n+            </div>\r\n+\r\n+            {/*Center */}\r\n+            <div\r\n+                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n+                <Outlet/>\r\n+            </div>\r\n+\r\n+            {/*Right subNav*/}\r\n+            <div\r\n+                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n+                <div className=\"flex flex-col gap-4 w-full\">\r\n+                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\"/>\r\n+                    {\r\n+                        suggestions.length > 0 ? (\r\n+                            suggestions.map(suggestion =>\r\n+                                (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n+                                                  title={suggestion.title} depart={suggestion.depart}\r\n+                                                  destination={suggestion.dest}\r\n+                                                  scheduleddate={suggestion.sheduleddate}/>)\r\n+                            )\r\n+                        ) : (\r\n+                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n+                                de sauvegarde pour l'instant</p>\r\n+                        )\r\n+                    }\r\n+                </div>\r\n+                <div className=\"flex flex-col gap-6\">\r\n+                    <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\"/>\r\n+                        {\r\n+                            [1,2,3].map(item => (\r\n+                                <LittleOfferCard key={item}/>\r\n+                            ))\r\n+                        }\r\n+                </div>\r\n+            </div>\r\n+\r\n+        </section>\r\n+    )\r\n+}\r\n+export default NavPageLayout;\r\n+\r\n+\r\n+const DynamicLeftContent = ({currentLocation}) => {\r\n+    const {friends, users} = useApp();\r\n+\r\n+    switch (currentLocation) {\r\n+\r\n+        case NAVIGATIONS.home :\r\n+            return (\r\n+                <>\r\n+                <SubHeader name=\"Followed People\" icon=\"bi bi-person\"/>\r\n+                <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                    {\r\n+                        friends.length > 0 ?\r\n+                            friends.map(friend => (\r\n+                                <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                                 name={friend.firstname + \" \" + friend.lastname}\r\n+                                                 image={SERVERLINK + \"/\" + friend.profileimage}\r\n+                                />\r\n+\r\n+                                    )) :\r\n+                                    <div>No friends</div>\r\n+                                    }\r\n+                                </div>\r\n+                        </>\r\n+                        )\r\n+\r\n+                        case NAVIGATIONS.friend :\r\n+                        return <>\r\n+                        <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\"/>\r\n+                        <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n+                    {\r\n+                        users.length > 0 ?\r\n+                        users.map(us => (\r\n+                        <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n+                     account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n+                     image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false}/>\r\n+                )) :\r\n+                <div>Pas d'amis</div>\r\n+                }\r\n+                </div>\r\n+        </>\r\n+\r\n+        default :\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Amis\" icon=\"bi bi-person\"/>\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                                     name={friend.firstname + \" \" + friend.lastname}\r\n+                                                     image={SERVERLINK + \"/\" + friend.profileimage}/>\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+        }\r\n+        }\r\n+\r\n+        const DynamicRightContent = () => {\r\n+\r\n+        }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722244506349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,145 @@\n+import {Outlet, useLocation} from \"react-router-dom\";\r\n+import {ProfileLeft} from \"../components/pages/ProfileLeft.jsx\";\r\n+import {SubHeader} from \"../components/pages/SubHeader.jsx\";\r\n+import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n+import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n+import {Notification} from \"../components/pages/Notification.jsx\";\r\n+import {useAuth} from \"../context/AuthProvider.jsx\";\r\n+import {SERVERLINK} from \"../constants/index.js\";\r\n+import {useApp} from \"../context/AppProvider.jsx\";\r\n+import {useEffect} from \"react\";\r\n+import {NAVIGATIONS} from \"../constants/home.js\";\r\n+import {Icon} from \"../styles/components.js\";\r\n+import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n+\r\n+const NavPageLayout = () => {\r\n+    const {personalInformation} = useAuth();\r\n+    const user = personalInformation;\r\n+\r\n+    const pathname = useLocation().pathname;\r\n+\r\n+    const {handleFriends, handleOfferSuggestion, suggestions} = useApp();\r\n+\r\n+    useE\r\n+\r\n+    return (\r\n+        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n+            {/*Left subNav*/}\r\n+            <div className=\"fixed bottom-10 right-[20%]\">\r\n+                <Icon icon=\"bi bi-briefcase\"/>\r\n+            </div>\r\n+            <div\r\n+                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n+                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n+                             account={user?.accounttype}/>\r\n+                <div className=\"flex flex-col gap-3 w-full\">\r\n+                    <DynamicLeftContent currentLocation={pathname}/>\r\n+                </div>\r\n+\r\n+            </div>\r\n+\r\n+            {/*Center */}\r\n+            <div\r\n+                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n+                <Outlet/>\r\n+            </div>\r\n+\r\n+            {/*Right subNav*/}\r\n+            <div\r\n+                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n+                <div className=\"flex flex-col gap-4 w-full\">\r\n+                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\"/>\r\n+                    {\r\n+                        suggestions.length > 0 ? (\r\n+                            suggestions.map(suggestion =>\r\n+                                (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n+                                                  title={suggestion.title} depart={suggestion.depart}\r\n+                                                  destination={suggestion.dest}\r\n+                                                  scheduleddate={suggestion.sheduleddate}/>)\r\n+                            )\r\n+                        ) : (\r\n+                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n+                                de sauvegarde pour l'instant</p>\r\n+                        )\r\n+                    }\r\n+                </div>\r\n+                <div className=\"flex flex-col gap-6\">\r\n+                    <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\"/>\r\n+                        {\r\n+                            [1,2,3].map(item => (\r\n+                                <LittleOfferCard key={item}/>\r\n+                            ))\r\n+                        }\r\n+                </div>\r\n+            </div>\r\n+\r\n+        </section>\r\n+    )\r\n+}\r\n+export default NavPageLayout;\r\n+\r\n+\r\n+const DynamicLeftContent = ({currentLocation}) => {\r\n+    const {friends, users} = useApp();\r\n+\r\n+    switch (currentLocation) {\r\n+\r\n+        case NAVIGATIONS.home :\r\n+            return (\r\n+                <>\r\n+                <SubHeader name=\"Followed People\" icon=\"bi bi-person\"/>\r\n+                <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                    {\r\n+                        friends.length > 0 ?\r\n+                            friends.map(friend => (\r\n+                                <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                                 name={friend.firstname + \" \" + friend.lastname}\r\n+                                                 image={SERVERLINK + \"/\" + friend.profileimage}\r\n+                                />\r\n+\r\n+                                    )) :\r\n+                                    <div>No friends</div>\r\n+                                    }\r\n+                                </div>\r\n+                        </>\r\n+                        )\r\n+\r\n+                        case NAVIGATIONS.friend :\r\n+                        return <>\r\n+                        <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\"/>\r\n+                        <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n+                    {\r\n+                        users.length > 0 ?\r\n+                        users.map(us => (\r\n+                        <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n+                     account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n+                     image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false}/>\r\n+                )) :\r\n+                <div>Pas d amis</div>\r\n+                }\r\n+                </div>\r\n+        </>\r\n+\r\n+        default :\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Amis\" icon=\"bi bi-person\"/>\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                                     name={friend.firstname + \" \" + friend.lastname}\r\n+                                                     image={SERVERLINK + \"/\" + friend.profileimage}/>\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+        }\r\n+        }\r\n+\r\n+        const DynamicRightContent = () => {\r\n+\r\n+        }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722244511936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,147 @@\n+import {Outlet, useLocation} from \"react-router-dom\";\r\n+import {ProfileLeft} from \"../components/pages/ProfileLeft.jsx\";\r\n+import {SubHeader} from \"../components/pages/SubHeader.jsx\";\r\n+import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n+import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n+import {Notification} from \"../components/pages/Notification.jsx\";\r\n+import {useAuth} from \"../context/AuthProvider.jsx\";\r\n+import {SERVERLINK} from \"../constants/index.js\";\r\n+import {useApp} from \"../context/AppProvider.jsx\";\r\n+import {useEffect} from \"react\";\r\n+import {NAVIGATIONS} from \"../constants/home.js\";\r\n+import {Icon} from \"../styles/components.js\";\r\n+import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n+\r\n+const NavPageLayout = () => {\r\n+    const {personalInformation} = useAuth();\r\n+    const user = personalInformation;\r\n+\r\n+    const pathname = useLocation().pathname;\r\n+\r\n+    const {handleFriends, handleOfferSuggestion, suggestions} = useApp();\r\n+\r\n+    useEffect(() => {\r\n+        \r\n+    })\r\n+\r\n+    return (\r\n+        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n+            {/*Left subNav*/}\r\n+            <div className=\"fixed bottom-10 right-[20%]\">\r\n+                <Icon icon=\"bi bi-briefcase\"/>\r\n+            </div>\r\n+            <div\r\n+                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n+                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n+                             account={user?.accounttype}/>\r\n+                <div className=\"flex flex-col gap-3 w-full\">\r\n+                    <DynamicLeftContent currentLocation={pathname}/>\r\n+                </div>\r\n+\r\n+            </div>\r\n+\r\n+            {/*Center */}\r\n+            <div\r\n+                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n+                <Outlet/>\r\n+            </div>\r\n+\r\n+            {/*Right subNav*/}\r\n+            <div\r\n+                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n+                <div className=\"flex flex-col gap-4 w-full\">\r\n+                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\"/>\r\n+                    {\r\n+                        suggestions.length > 0 ? (\r\n+                            suggestions.map(suggestion =>\r\n+                                (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n+                                                  title={suggestion.title} depart={suggestion.depart}\r\n+                                                  destination={suggestion.dest}\r\n+                                                  scheduleddate={suggestion.sheduleddate}/>)\r\n+                            )\r\n+                        ) : (\r\n+                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n+                                de sauvegarde pour l'instant</p>\r\n+                        )\r\n+                    }\r\n+                </div>\r\n+                <div className=\"flex flex-col gap-6\">\r\n+                    <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\"/>\r\n+                        {\r\n+                            [1,2,3].map(item => (\r\n+                                <LittleOfferCard key={item}/>\r\n+                            ))\r\n+                        }\r\n+                </div>\r\n+            </div>\r\n+\r\n+        </section>\r\n+    )\r\n+}\r\n+export default NavPageLayout;\r\n+\r\n+\r\n+const DynamicLeftContent = ({currentLocation}) => {\r\n+    const {friends, users} = useApp();\r\n+\r\n+    switch (currentLocation) {\r\n+\r\n+        case NAVIGATIONS.home :\r\n+            return (\r\n+                <>\r\n+                <SubHeader name=\"Followed People\" icon=\"bi bi-person\"/>\r\n+                <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                    {\r\n+                        friends.length > 0 ?\r\n+                            friends.map(friend => (\r\n+                                <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                                 name={friend.firstname + \" \" + friend.lastname}\r\n+                                                 image={SERVERLINK + \"/\" + friend.profileimage}\r\n+                                />\r\n+\r\n+                                    )) :\r\n+                                    <div>No friends</div>\r\n+                                    }\r\n+                                </div>\r\n+                        </>\r\n+                        )\r\n+\r\n+                        case NAVIGATIONS.friend :\r\n+                        return <>\r\n+                        <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\"/>\r\n+                        <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n+                    {\r\n+                        users.length > 0 ?\r\n+                        users.map(us => (\r\n+                        <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n+                     account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n+                     image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false}/>\r\n+                )) :\r\n+                <div>Pas d amis</div>\r\n+                }\r\n+                </div>\r\n+        </>\r\n+\r\n+        default :\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Amis\" icon=\"bi bi-person\"/>\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                                     name={friend.firstname + \" \" + friend.lastname}\r\n+                                                     image={SERVERLINK + \"/\" + friend.profileimage}/>\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+        }\r\n+        }\r\n+\r\n+        const DynamicRightContent = () => {\r\n+\r\n+        }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722244517524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n \r\n     const {handleFriends, handleOfferSuggestion, suggestions} = useApp();\r\n \r\n     useEffect(() => {\r\n-        \r\n+        handleOfferSuggestion()\r\n     })\r\n \r\n     return (\r\n         <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n@@ -143,436 +143,5 @@\n         }\r\n \r\n         const DynamicRightContent = () => {\r\n \r\n-        }\n-import {Outlet, useLocation} from \"react-router-dom\";\r\n-import {ProfileLeft} from \"../components/pages/ProfileLeft.jsx\";\r\n-import {SubHeader} from \"../components/pages/SubHeader.jsx\";\r\n-import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n-import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n-import {Notification} from \"../components/pages/Notification.jsx\";\r\n-import {useAuth} from \"../context/AuthProvider.jsx\";\r\n-import {SERVERLINK} from \"../constants/index.js\";\r\n-import {useApp} from \"../context/AppProvider.jsx\";\r\n-import {useEffect} from \"react\";\r\n-import {NAVIGATIONS} from \"../constants/home.js\";\r\n-import {Icon} from \"../styles/components.js\";\r\n-import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n-\r\n-const NavPageLayout = () => {\r\n-    const {personalInformation} = useAuth();\r\n-    const user = personalInformation;\r\n-\r\n-    const pathname = useLocation().pathname;\r\n-\r\n-    const {handleFriends, handleOfferSuggestion, suggestions} = useApp();\r\n-\r\n-    useE\r\n-\r\n-    return (\r\n-        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n-            {/*Left subNav*/}\r\n-            <div className=\"fixed bottom-10 right-[20%]\">\r\n-                <Icon icon=\"bi bi-briefcase\"/>\r\n-            </div>\r\n-            <div\r\n-                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n-                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n-                             account={user?.accounttype}/>\r\n-                <div className=\"flex flex-col gap-3 w-full\">\r\n-                    <DynamicLeftContent currentLocation={pathname}/>\r\n-                </div>\r\n-\r\n-            </div>\r\n-\r\n-            {/*Center */}\r\n-            <div\r\n-                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n-                <Outlet/>\r\n-            </div>\r\n-\r\n-            {/*Right subNav*/}\r\n-            <div\r\n-                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n-                <div className=\"flex flex-col gap-4 w-full\">\r\n-                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\"/>\r\n-                    {\r\n-                        suggestions.length > 0 ? (\r\n-                            suggestions.map(suggestion =>\r\n-                                (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n-                                                  title={suggestion.title} depart={suggestion.depart}\r\n-                                                  destination={suggestion.dest}\r\n-                                                  scheduleddate={suggestion.sheduleddate}/>)\r\n-                            )\r\n-                        ) : (\r\n-                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n-                                de sauvegarde pour l'instant</p>\r\n-                        )\r\n-                    }\r\n-                </div>\r\n-                <div className=\"flex flex-col gap-6\">\r\n-                    <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\"/>\r\n-                        {\r\n-                            [1,2,3].map(item => (\r\n-                                <LittleOfferCard key={item}/>\r\n-                            ))\r\n-                        }\r\n-                </div>\r\n-            </div>\r\n-\r\n-        </section>\r\n-    )\r\n-}\r\n-export default NavPageLayout;\r\n-\r\n-\r\n-const DynamicLeftContent = ({currentLocation}) => {\r\n-    const {friends, users} = useApp();\r\n-\r\n-    switch (currentLocation) {\r\n-\r\n-        case NAVIGATIONS.home :\r\n-            return (\r\n-                <>\r\n-                <SubHeader name=\"Followed People\" icon=\"bi bi-person\"/>\r\n-                <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                    {\r\n-                        friends.length > 0 ?\r\n-                            friends.map(friend => (\r\n-                                <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                                 name={friend.firstname + \" \" + friend.lastname}\r\n-                                                 image={SERVERLINK + \"/\" + friend.profileimage}\r\n-                                />\r\n-\r\n-                                    )) :\r\n-                                    <div>No friends</div>\r\n-                                    }\r\n-                                </div>\r\n-                        </>\r\n-                        )\r\n-\r\n-                        case NAVIGATIONS.friend :\r\n-                        return <>\r\n-                        <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\"/>\r\n-                        <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n-                    {\r\n-                        users.length > 0 ?\r\n-                        users.map(us => (\r\n-                        <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n-                     account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n-                     image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false}/>\r\n-                )) :\r\n-                <div>Pas d amis</div>\r\n-                }\r\n-                </div>\r\n-        </>\r\n-\r\n-        default :\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Amis\" icon=\"bi bi-person\"/>\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                                     name={friend.firstname + \" \" + friend.lastname}\r\n-                                                     image={SERVERLINK + \"/\" + friend.profileimage}/>\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-        }\r\n-        }\r\n-\r\n-        const DynamicRightContent = () => {\r\n-\r\n-        }\n-import {Outlet, useLocation} from \"react-router-dom\";\r\n-import {ProfileLeft} from \"../components/pages/ProfileLeft.jsx\";\r\n-import {SubHeader} from \"../components/pages/SubHeader.jsx\";\r\n-import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n-import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n-import {Notification} from \"../components/pages/Notification.jsx\";\r\n-import {useAuth} from \"../context/AuthProvider.jsx\";\r\n-import {SERVERLINK} from \"../constants/index.js\";\r\n-import {useApp} from \"../context/AppProvider.jsx\";\r\n-import {useEffect} from \"react\";\r\n-import {NAVIGATIONS} from \"../constants/home.js\";\r\n-import {Icon} from \"../styles/components.js\";\r\n-import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n-\r\n-const NavPageLayout = () => {\r\n-    const {personalInformation} = useAuth();\r\n-    const user = personalInformation;\r\n-\r\n-    const pathname = useLocation().pathname;\r\n-\r\n-    const {handleFriends, handleOfferSuggestion, suggestions} = useApp();\r\n-\r\n-    return (\r\n-        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n-            {/*Left subNav*/}\r\n-            <div className=\"fixed bottom-10 right-[20%]\">\r\n-                <Icon icon=\"bi bi-briefcase\"/>\r\n-            </div>\r\n-            <div\r\n-                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n-                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n-                             account={user?.accounttype}/>\r\n-                <div className=\"flex flex-col gap-3 w-full\">\r\n-                    <DynamicLeftContent currentLocation={pathname}/>\r\n-                </div>\r\n-\r\n-            </div>\r\n-\r\n-            {/*Center */}\r\n-            <div\r\n-                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n-                <Outlet/>\r\n-            </div>\r\n-\r\n-            {/*Right subNav*/}\r\n-            <div\r\n-                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n-                <div className=\"flex flex-col gap-4 w-full\">\r\n-                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\"/>\r\n-                    {\r\n-                        suggestions.length > 0 ? (\r\n-                            suggestions.map(suggestion =>\r\n-                                (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n-                                                  title={suggestion.title} depart={suggestion.depart}\r\n-                                                  destination={suggestion.dest}\r\n-                                                  scheduleddate={suggestion.sheduleddate}/>)\r\n-                            )\r\n-                        ) : (\r\n-                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n-                                de sauvegarde pour l'instant</p>\r\n-                        )\r\n-                    }\r\n-                </div>\r\n-                <div className=\"flex flex-col gap-6\">\r\n-                    <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\"/>\r\n-                        {\r\n-                            [1,2,3].map(item => (\r\n-                                <LittleOfferCard key={item}/>\r\n-                            ))\r\n-                        }\r\n-                </div>\r\n-            </div>\r\n-\r\n-        </section>\r\n-    )\r\n-}\r\n-export default NavPageLayout;\r\n-\r\n-\r\n-const DynamicLeftContent = ({currentLocation}) => {\r\n-    const {friends, users} = useApp();\r\n-\r\n-    switch (currentLocation) {\r\n-\r\n-        case NAVIGATIONS.home :\r\n-            return (\r\n-                <>\r\n-                <SubHeader name=\"Followed People\" icon=\"bi bi-person\"/>\r\n-                <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                    {\r\n-                        friends.length > 0 ?\r\n-                            friends.map(friend => (\r\n-                                <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                                 name={friend.firstname + \" \" + friend.lastname}\r\n-                                                 image={SERVERLINK + \"/\" + friend.profileimage}\r\n-                                />\r\n-\r\n-                                    )) :\r\n-                                    <div>No friends</div>\r\n-                                    }\r\n-                                </div>\r\n-                        </>\r\n-                        )\r\n-\r\n-                        case NAVIGATIONS.friend :\r\n-                        return <>\r\n-                        <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\"/>\r\n-                        <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n-                    {\r\n-                        users.length > 0 ?\r\n-                        users.map(us => (\r\n-                        <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n-                     account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n-                     image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false}/>\r\n-                )) :\r\n-                <div>Pas d'amis</div>\r\n-                }\r\n-                </div>\r\n-        </>\r\n-\r\n-        default :\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Amis\" icon=\"bi bi-person\"/>\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                                     name={friend.firstname + \" \" + friend.lastname}\r\n-                                                     image={SERVERLINK + \"/\" + friend.profileimage}/>\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-        }\r\n-        }\r\n-\r\n-        const DynamicRightContent = () => {\r\n-\r\n-        }\n-import {Outlet, useLocation} from \"react-router-dom\";\r\n-import {ProfileLeft} from \"../components/pages/ProfileLeft.jsx\";\r\n-import {SubHeader} from \"../components/pages/SubHeader.jsx\";\r\n-import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n-import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n-import {Notification} from \"../components/pages/Notification.jsx\";\r\n-import {useAuth} from \"../context/AuthProvider.jsx\";\r\n-import {SERVERLINK} from \"../constants/index.js\";\r\n-import {useApp} from \"../context/AppProvider.jsx\";\r\n-import {useEffect} from \"react\";\r\n-import {NAVIGATIONS} from \"../constants/home.js\";\r\n-import {Icon} from \"../styles/components.js\";\r\n-import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n-\r\n-const NavPageLayout = () => {\r\n-    const {personalInformation} = useAuth();\r\n-    const user = personalInformation;\r\n-\r\n-    const pathname = useLocation().pathname;\r\n-\r\n-    const {handleFriends, handleOfferSuggestion, suggestions} = useApp();\r\n-\r\n-    return (\r\n-        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n-            {/*Left subNav*/}\r\n-            <div className=\"fixed bottom-10 right-[20%]\">\r\n-                <Icon icon=\"bi bi-briefcase\"/>\r\n-            </div>\r\n-            <div\r\n-                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n-                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n-                             account={user?.accounttype}/>\r\n-                <div className=\"flex flex-col gap-3 w-full\">\r\n-                    <DynamicLeftContent currentLocation={pathname}/>\r\n-                </div>\r\n-\r\n-            </div>\r\n-\r\n-            {/*Center */}\r\n-            <div\r\n-                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n-                <Outlet/>\r\n-            </div>\r\n-\r\n-            {/*Right subNav*/}\r\n-            <div\r\n-                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n-                <div className=\"flex flex-col gap-4 w-full\">\r\n-                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\"/>\r\n-                    {\r\n-                        suggestions.length > 0 ? (\r\n-                            suggestions.map(suggestion =>\r\n-                                (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n-                                                  title={suggestion.title} depart={suggestion.depart}\r\n-                                                  destination={suggestion.dest}\r\n-                                                  scheduleddate={suggestion.sheduleddate}/>)\r\n-                            )\r\n-                        ) : (\r\n-                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n-                                de sauvegarde pour l'instant</p>\r\n-                        )\r\n-                    }\r\n-                </div>\r\n-                <div className=\"flex flex-col gap-6\">\r\n-                    <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\"/>\r\n-                        {\r\n-                            [1,2,3].map(item => (\r\n-                                <LittleOfferCard key={item}/>\r\n-                            ))\r\n-                        }\r\n-                </div>\r\n-            </div>\r\n-\r\n-        </section>\r\n-    )\r\n-}\r\n-export default NavPageLayout;\r\n-\r\n-\r\n-const DynamicLeftContent = ({currentLocation}) => {\r\n-    const {friends, users} = useApp();\r\n-\r\n-    switch (currentLocation) {\r\n-\r\n-        case NAVIGATIONS.home :\r\n-            return (\r\n-                <>\r\n-                <SubHeader name=\"Followed People\" icon=\"bi bi-person\"/>\r\n-                <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                    {\r\n-                        friends.length > 0 ?\r\n-                            friends.map(friend => (\r\n-                                <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                                 name={friend.firstname + \" \" + friend.lastname}\r\n-                                                 image={SERVERLINK + \"/\" + friend.profileimage}\r\n-                                />\r\n-\r\n-                                    )) :\r\n-                                    <div>No friends</div>\r\n-                                    }\r\n-                                </div>\r\n-                        </>\r\n-                        )\r\n-\r\n-                        case NAVIGATIONS.friend :\r\n-                        return <>\r\n-                        <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\"/>\r\n-                        <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n-                    {\r\n-                        users.length > 0 ?\r\n-                        users.map(us => (\r\n-                        <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n-                     account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n-                     image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false}/>\r\n-                )) :\r\n-                <div>Pas d'amis</div>\r\n-                }\r\n-                </div>\r\n-        </>\r\n-\r\n-        default :\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Amis\" icon=\"bi bi-person\"/>\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                                     name={friend.firstname + \" \" + friend.lastname}\r\n-                                                     image={SERVERLINK + \"/\" + friend.profileimage}/>\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-        }\r\n-        }\r\n-\r\n-        const DynamicRightContent = () => {\r\n-\r\n         }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722244640871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n \r\n     const {handleFriends, handleOfferSuggestion, suggestions} = useApp();\r\n \r\n     useEffect(() => {\r\n-        handleOfferSuggestion()\r\n+        handleOfferSuggestion();\r\n     })\r\n \r\n     return (\r\n         <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n@@ -66,10 +66,10 @@\n                     }\r\n                 </div>\r\n                 <div className=\"flex flex-col gap-6\">\r\n                     <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\"/>\r\n-                        {\r\n-                            [1,2,3].map(item => (\r\n+                        {suggestions.length > 0 ? (\r\n+                            suggestions.map(suggestion => (\r\n                                 <LittleOfferCard key={item}/>\r\n                             ))\r\n                         }\r\n                 </div>\r\n"
                },
                {
                    "date": 1722244647082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,8 +70,10 @@\n                         {suggestions.length > 0 ? (\r\n                             suggestions.map(suggestion => (\r\n                                 <LittleOfferCard key={item}/>\r\n                             ))\r\n+                            :\r\n+                            \r\n                         }\r\n                 </div>\r\n             </div>\r\n \r\n"
                },
                {
                    "date": 1722244652710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,14 +66,14 @@\n                     }\r\n                 </div>\r\n                 <div className=\"flex flex-col gap-6\">\r\n                     <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\"/>\r\n-                        {suggestions.length > 0 ? (\r\n+                        { suggestions.length > 0 ? (\r\n                             suggestions.map(suggestion => (\r\n                                 <LittleOfferCard key={item}/>\r\n                             ))\r\n                             :\r\n-                            \r\n+\r\n                         }\r\n                 </div>\r\n             </div>\r\n \r\n"
                },
                {
                    "date": 1722244660710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n                             suggestions.map(suggestion => (\r\n                                 <LittleOfferCard key={item}/>\r\n                             ))\r\n                             :\r\n-\r\n+                            \r\n                         }\r\n                 </div>\r\n             </div>\r\n \r\n"
                },
                {
                    "date": 1722244687637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,152 @@\n+import {Outlet, useLocation} from \"react-router-dom\";\r\n+import {ProfileLeft} from \"../components/pages/ProfileLeft.jsx\";\r\n+import {SubHeader} from \"../components/pages/SubHeader.jsx\";\r\n+import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n+import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n+import {Notification} from \"../components/pages/Notification.jsx\";\r\n+import {useAuth} from \"../context/AuthProvider.jsx\";\r\n+import {SERVERLINK} from \"../constants/index.js\";\r\n+import {useApp} from \"../context/AppProvider.jsx\";\r\n+import {useEffect} from \"react\";\r\n+import {NAVIGATIONS} from \"../constants/home.js\";\r\n+import {Icon} from \"../styles/components.js\";\r\n+import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n+\r\n+const NavPageLayout = () => {\r\n+    const {personalInformation} = useAuth();\r\n+    const user = personalInformation;\r\n+\r\n+    const pathname = useLocation().pathname;\r\n+\r\n+    const {handleFriends, handleOfferSuggestion, suggestions} = useApp();\r\n+\r\n+    useEffect(() => {\r\n+        handleOfferSuggestion();\r\n+    })\r\n+\r\n+    return (\r\n+        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n+            {/*Left subNav*/}\r\n+            <div className=\"fixed bottom-10 right-[20%]\">\r\n+                <Icon icon=\"bi bi-briefcase\"/>\r\n+            </div>\r\n+            <div\r\n+                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n+                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n+                             account={user?.accounttype}/>\r\n+                <div className=\"flex flex-col gap-3 w-full\">\r\n+                    <DynamicLeftContent currentLocation={pathname}/>\r\n+                </div>\r\n+\r\n+            </div>\r\n+\r\n+            {/*Center */}\r\n+            <div\r\n+                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n+                <Outlet/>\r\n+            </div>\r\n+\r\n+            {/*Right subNav*/}\r\n+            <div\r\n+                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n+                <div className=\"flex flex-col gap-4 w-full\">\r\n+                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\"/>\r\n+                    {\r\n+                        suggestions.length > 0 ? (\r\n+                            suggestions.map(suggestion =>\r\n+                                (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n+                                                  title={suggestion.title} depart={suggestion.depart}\r\n+                                                  destination={suggestion.dest}\r\n+                                                  scheduleddate={suggestion.sheduleddate}/>)\r\n+                            )\r\n+                        ) : (\r\n+                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n+                                de sauvegarde pour l'instant</p>\r\n+                        )\r\n+                    }\r\n+                </div>\r\n+                <div className=\"flex flex-col gap-6\">\r\n+                    <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\"/>\r\n+                        { suggestions.length > 0 ? (\r\n+                            suggestions.map(suggestion => (\r\n+                                <LittleOfferCard key={item}/>\r\n+                            ))\r\n+                        )\r\n+                            :\r\n+                            <div>\r\n+\r\n+                            </div>\r\n+                        }\r\n+                </div>\r\n+            </div>\r\n+\r\n+        </section>\r\n+    )\r\n+}\r\n+export default NavPageLayout;\r\n+\r\n+\r\n+const DynamicLeftContent = ({currentLocation}) => {\r\n+    const {friends, users} = useApp();\r\n+\r\n+    switch (currentLocation) {\r\n+\r\n+        case NAVIGATIONS.home :\r\n+            return (\r\n+                <>\r\n+                <SubHeader name=\"Followed People\" icon=\"bi bi-person\"/>\r\n+                <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                    {\r\n+                        friends.length > 0 ?\r\n+                            friends.map(friend => (\r\n+                                <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                                 name={friend.firstname + \" \" + friend.lastname}\r\n+                                                 image={SERVERLINK + \"/\" + friend.profileimage}\r\n+                                />\r\n+\r\n+                                    )) :\r\n+                                    <div>No friends</div>\r\n+                                    }\r\n+                                </div>\r\n+                        </>\r\n+                        )\r\n+\r\n+                        case NAVIGATIONS.friend :\r\n+                        return <>\r\n+                        <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\"/>\r\n+                        <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n+                    {\r\n+                        users.length > 0 ?\r\n+                        users.map(us => (\r\n+                        <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n+                     account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n+                     image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false}/>\r\n+                )) :\r\n+                <div>Pas d amis</div>\r\n+                }\r\n+                </div>\r\n+        </>\r\n+\r\n+        default :\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Amis\" icon=\"bi bi-person\"/>\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                                     name={friend.firstname + \" \" + friend.lastname}\r\n+                                                     image={SERVERLINK + \"/\" + friend.profileimage}/>\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+        }\r\n+        }\r\n+\r\n+        const DynamicRightContent = () => {\r\n+\r\n+        }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722244700062,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,152 @@\n+import { Outlet, useLocation } from \"react-router-dom\";\r\n+import { ProfileLeft } from \"../components/pages/ProfileLeft.jsx\";\r\n+import { SubHeader } from \"../components/pages/SubHeader.jsx\";\r\n+import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n+import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n+import { Notification } from \"../components/pages/Notification.jsx\";\r\n+import { useAuth } from \"../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../constants/index.js\";\r\n+import { useApp } from \"../context/AppProvider.jsx\";\r\n+import { useEffect } from \"react\";\r\n+import { NAVIGATIONS } from \"../constants/home.js\";\r\n+import { Icon } from \"../styles/components.js\";\r\n+import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n+\r\n+const NavPageLayout = () => {\r\n+    const { personalInformation } = useAuth();\r\n+    const user = personalInformation;\r\n+\r\n+    const pathname = useLocation().pathname;\r\n+\r\n+    const { handleFriends, handleOfferSuggestion, suggestions } = useApp();\r\n+\r\n+    useEffect(() => {\r\n+        handleOfferSuggestion();\r\n+    })\r\n+\r\n+    return (\r\n+        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n+            {/*Left subNav*/}\r\n+            <div className=\"fixed bottom-10 right-[20%]\">\r\n+                <Icon icon=\"bi bi-briefcase\" />\r\n+            </div>\r\n+            <div\r\n+                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n+                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n+                    account={user?.accounttype} />\r\n+                <div className=\"flex flex-col gap-3 w-full\">\r\n+                    <DynamicLeftContent currentLocation={pathname} />\r\n+                </div>\r\n+\r\n+            </div>\r\n+\r\n+            {/*Center */}\r\n+            <div\r\n+                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n+                <Outlet />\r\n+            </div>\r\n+\r\n+            {/*Right subNav*/}\r\n+            <div\r\n+                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n+                <div className=\"flex flex-col gap-4 w-full\">\r\n+                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\" />\r\n+                    {\r\n+                        suggestions.length > 0 ? (\r\n+                            suggestions.map(suggestion =>\r\n+                            (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n+                                title={suggestion.title} depart={suggestion.depart}\r\n+                                destination={suggestion.dest}\r\n+                                scheduleddate={suggestion.sheduleddate} />)\r\n+                            )\r\n+                        ) : (\r\n+                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n+                                de sauvegarde pour l'instant</p>\r\n+                        )\r\n+                    }\r\n+                </div>\r\n+                <div className=\"flex flex-col gap-6\">\r\n+                    <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\" />\r\n+                    {suggestions.length > 0 ? (\r\n+                        suggestions.map(suggestion => (\r\n+                            <LittleOfferCard key={item} />\r\n+                        ))\r\n+                    )\r\n+                        :\r\n+                        <div>\r\n+                            Pas D'offre\r\n+                        </div>\r\n+                    }\r\n+                </div>\r\n+            </div>\r\n+\r\n+        </section>\r\n+    )\r\n+}\r\n+export default NavPageLayout;\r\n+\r\n+\r\n+const DynamicLeftContent = ({ currentLocation }) => {\r\n+    const { friends, users } = useApp();\r\n+\r\n+    switch (currentLocation) {\r\n+\r\n+        case NAVIGATIONS.home:\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Followed People\" icon=\"bi bi-person\" />\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                        name={friend.firstname + \" \" + friend.lastname}\r\n+                                        image={SERVERLINK + \"/\" + friend.profileimage}\r\n+                                    />\r\n+\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+\r\n+        case NAVIGATIONS.friend:\r\n+            return <>\r\n+                <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\" />\r\n+                <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n+                    {\r\n+                        users.length > 0 ?\r\n+                            users.map(us => (\r\n+                                <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n+                                    account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n+                                    image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false} />\r\n+                            )) :\r\n+                            <div>Pas d amis</div>\r\n+                    }\r\n+                </div>\r\n+            </>\r\n+\r\n+        default:\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Amis\" icon=\"bi bi-person\" />\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                        name={friend.firstname + \" \" + friend.lastname}\r\n+                                        image={SERVERLINK + \"/\" + friend.profileimage} />\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+    }\r\n+}\r\n+\r\n+const DynamicRightContent = () => {\r\n+\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722244712075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,152 @@\n+import { Outlet, useLocation } from \"react-router-dom\";\r\n+import { ProfileLeft } from \"../components/pages/ProfileLeft.jsx\";\r\n+import { SubHeader } from \"../components/pages/SubHeader.jsx\";\r\n+import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n+import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n+import { Notification } from \"../components/pages/Notification.jsx\";\r\n+import { useAuth } from \"../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../constants/index.js\";\r\n+import { useApp } from \"../context/AppProvider.jsx\";\r\n+import { useEffect } from \"react\";\r\n+import { NAVIGATIONS } from \"../constants/home.js\";\r\n+import { Icon } from \"../styles/components.js\";\r\n+import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n+\r\n+const NavPageLayout = () => {\r\n+    const { personalInformation } = useAuth();\r\n+    const user = personalInformation;\r\n+\r\n+    const pathname = useLocation().pathname;\r\n+\r\n+    const { handleFriends, handleOfferSuggestion, suggestions } = useApp();\r\n+\r\n+    useEffect(() => {\r\n+        handleOfferSuggestion();\r\n+    })\r\n+\r\n+    return (\r\n+        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n+            {/*Left subNav*/}\r\n+            <div className=\"fixed bottom-10 right-[20%]\">\r\n+                <Icon icon=\"bi bi-briefcase\" />\r\n+            </div>\r\n+            <div\r\n+                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n+                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n+                    account={user?.accounttype} />\r\n+                <div className=\"flex flex-col gap-3 w-full\">\r\n+                    <DynamicLeftContent currentLocation={pathname} />\r\n+                </div>\r\n+\r\n+            </div>\r\n+\r\n+            {/*Center */}\r\n+            <div\r\n+                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n+                <Outlet />\r\n+            </div>\r\n+\r\n+            {/*Right subNav*/}\r\n+            <div\r\n+                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n+                <div className=\"flex flex-col gap-4 w-full\">\r\n+                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\" />\r\n+                    {\r\n+                        suggestions.length > 0 ? (\r\n+                            suggestions.map(suggestion =>\r\n+                            (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n+                                title={suggestion.title} depart={suggestion.depart}\r\n+                                destination={suggestion.dest}\r\n+                                scheduleddate={suggestion.sheduleddate} />)\r\n+                            )\r\n+                        ) : (\r\n+                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n+                                de sauvegarde pour l'instant</p>\r\n+                        )\r\n+                    }\r\n+                </div>\r\n+                <div className=\"flex flex-col gap-6\">\r\n+                    <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\" />\r\n+                    {suggestions.length > 0 ? (\r\n+                        suggestions.map(suggestion => (\r\n+                            <LittleOfferCard key={sugg} />\r\n+                        ))\r\n+                    )\r\n+                        :\r\n+                        <div>\r\n+                            Pas D'offre\r\n+                        </div>\r\n+                    }\r\n+                </div>\r\n+            </div>\r\n+\r\n+        </section>\r\n+    )\r\n+}\r\n+export default NavPageLayout;\r\n+\r\n+\r\n+const DynamicLeftContent = ({ currentLocation }) => {\r\n+    const { friends, users } = useApp();\r\n+\r\n+    switch (currentLocation) {\r\n+\r\n+        case NAVIGATIONS.home:\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Followed People\" icon=\"bi bi-person\" />\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                        name={friend.firstname + \" \" + friend.lastname}\r\n+                                        image={SERVERLINK + \"/\" + friend.profileimage}\r\n+                                    />\r\n+\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+\r\n+        case NAVIGATIONS.friend:\r\n+            return <>\r\n+                <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\" />\r\n+                <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n+                    {\r\n+                        users.length > 0 ?\r\n+                            users.map(us => (\r\n+                                <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n+                                    account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n+                                    image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false} />\r\n+                            )) :\r\n+                            <div>Pas d amis</div>\r\n+                    }\r\n+                </div>\r\n+            </>\r\n+\r\n+        default:\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Amis\" icon=\"bi bi-person\" />\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                        name={friend.firstname + \" \" + friend.lastname}\r\n+                                        image={SERVERLINK + \"/\" + friend.profileimage} />\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+    }\r\n+}\r\n+\r\n+const DynamicRightContent = () => {\r\n+\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722244718391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n                 <div className=\"flex flex-col gap-6\">\r\n                     <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\" />\r\n                     {suggestions.length > 0 ? (\r\n                         suggestions.map(suggestion => (\r\n-                            <LittleOfferCard key={sugg} />\r\n+                            <LittleOfferCard key={suggestion.offerid} />\r\n                         ))\r\n                     )\r\n                         :\r\n                         <div>\r\n@@ -148,458 +148,5 @@\n }\r\n \r\n const DynamicRightContent = () => {\r\n \r\n-}\n-import { Outlet, useLocation } from \"react-router-dom\";\r\n-import { ProfileLeft } from \"../components/pages/ProfileLeft.jsx\";\r\n-import { SubHeader } from \"../components/pages/SubHeader.jsx\";\r\n-import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n-import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n-import { Notification } from \"../components/pages/Notification.jsx\";\r\n-import { useAuth } from \"../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../constants/index.js\";\r\n-import { useApp } from \"../context/AppProvider.jsx\";\r\n-import { useEffect } from \"react\";\r\n-import { NAVIGATIONS } from \"../constants/home.js\";\r\n-import { Icon } from \"../styles/components.js\";\r\n-import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n-\r\n-const NavPageLayout = () => {\r\n-    const { personalInformation } = useAuth();\r\n-    const user = personalInformation;\r\n-\r\n-    const pathname = useLocation().pathname;\r\n-\r\n-    const { handleFriends, handleOfferSuggestion, suggestions } = useApp();\r\n-\r\n-    useEffect(() => {\r\n-        handleOfferSuggestion();\r\n-    })\r\n-\r\n-    return (\r\n-        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n-            {/*Left subNav*/}\r\n-            <div className=\"fixed bottom-10 right-[20%]\">\r\n-                <Icon icon=\"bi bi-briefcase\" />\r\n-            </div>\r\n-            <div\r\n-                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n-                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n-                    account={user?.accounttype} />\r\n-                <div className=\"flex flex-col gap-3 w-full\">\r\n-                    <DynamicLeftContent currentLocation={pathname} />\r\n-                </div>\r\n-\r\n-            </div>\r\n-\r\n-            {/*Center */}\r\n-            <div\r\n-                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n-                <Outlet />\r\n-            </div>\r\n-\r\n-            {/*Right subNav*/}\r\n-            <div\r\n-                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n-                <div className=\"flex flex-col gap-4 w-full\">\r\n-                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\" />\r\n-                    {\r\n-                        suggestions.length > 0 ? (\r\n-                            suggestions.map(suggestion =>\r\n-                            (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n-                                title={suggestion.title} depart={suggestion.depart}\r\n-                                destination={suggestion.dest}\r\n-                                scheduleddate={suggestion.sheduleddate} />)\r\n-                            )\r\n-                        ) : (\r\n-                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n-                                de sauvegarde pour l'instant</p>\r\n-                        )\r\n-                    }\r\n-                </div>\r\n-                <div className=\"flex flex-col gap-6\">\r\n-                    <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\" />\r\n-                    {suggestions.length > 0 ? (\r\n-                        suggestions.map(suggestion => (\r\n-                            <LittleOfferCard key={item} />\r\n-                        ))\r\n-                    )\r\n-                        :\r\n-                        <div>\r\n-                            Pas D'offre\r\n-                        </div>\r\n-                    }\r\n-                </div>\r\n-            </div>\r\n-\r\n-        </section>\r\n-    )\r\n-}\r\n-export default NavPageLayout;\r\n-\r\n-\r\n-const DynamicLeftContent = ({ currentLocation }) => {\r\n-    const { friends, users } = useApp();\r\n-\r\n-    switch (currentLocation) {\r\n-\r\n-        case NAVIGATIONS.home:\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Followed People\" icon=\"bi bi-person\" />\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                        name={friend.firstname + \" \" + friend.lastname}\r\n-                                        image={SERVERLINK + \"/\" + friend.profileimage}\r\n-                                    />\r\n-\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-\r\n-        case NAVIGATIONS.friend:\r\n-            return <>\r\n-                <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\" />\r\n-                <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n-                    {\r\n-                        users.length > 0 ?\r\n-                            users.map(us => (\r\n-                                <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n-                                    account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n-                                    image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false} />\r\n-                            )) :\r\n-                            <div>Pas d amis</div>\r\n-                    }\r\n-                </div>\r\n-            </>\r\n-\r\n-        default:\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Amis\" icon=\"bi bi-person\" />\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                        name={friend.firstname + \" \" + friend.lastname}\r\n-                                        image={SERVERLINK + \"/\" + friend.profileimage} />\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-    }\r\n-}\r\n-\r\n-const DynamicRightContent = () => {\r\n-\r\n-}\n-import {Outlet, useLocation} from \"react-router-dom\";\r\n-import {ProfileLeft} from \"../components/pages/ProfileLeft.jsx\";\r\n-import {SubHeader} from \"../components/pages/SubHeader.jsx\";\r\n-import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n-import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n-import {Notification} from \"../components/pages/Notification.jsx\";\r\n-import {useAuth} from \"../context/AuthProvider.jsx\";\r\n-import {SERVERLINK} from \"../constants/index.js\";\r\n-import {useApp} from \"../context/AppProvider.jsx\";\r\n-import {useEffect} from \"react\";\r\n-import {NAVIGATIONS} from \"../constants/home.js\";\r\n-import {Icon} from \"../styles/components.js\";\r\n-import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n-\r\n-const NavPageLayout = () => {\r\n-    const {personalInformation} = useAuth();\r\n-    const user = personalInformation;\r\n-\r\n-    const pathname = useLocation().pathname;\r\n-\r\n-    const {handleFriends, handleOfferSuggestion, suggestions} = useApp();\r\n-\r\n-    useEffect(() => {\r\n-        handleOfferSuggestion();\r\n-    })\r\n-\r\n-    return (\r\n-        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n-            {/*Left subNav*/}\r\n-            <div className=\"fixed bottom-10 right-[20%]\">\r\n-                <Icon icon=\"bi bi-briefcase\"/>\r\n-            </div>\r\n-            <div\r\n-                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n-                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n-                             account={user?.accounttype}/>\r\n-                <div className=\"flex flex-col gap-3 w-full\">\r\n-                    <DynamicLeftContent currentLocation={pathname}/>\r\n-                </div>\r\n-\r\n-            </div>\r\n-\r\n-            {/*Center */}\r\n-            <div\r\n-                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n-                <Outlet/>\r\n-            </div>\r\n-\r\n-            {/*Right subNav*/}\r\n-            <div\r\n-                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n-                <div className=\"flex flex-col gap-4 w-full\">\r\n-                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\"/>\r\n-                    {\r\n-                        suggestions.length > 0 ? (\r\n-                            suggestions.map(suggestion =>\r\n-                                (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n-                                                  title={suggestion.title} depart={suggestion.depart}\r\n-                                                  destination={suggestion.dest}\r\n-                                                  scheduleddate={suggestion.sheduleddate}/>)\r\n-                            )\r\n-                        ) : (\r\n-                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n-                                de sauvegarde pour l'instant</p>\r\n-                        )\r\n-                    }\r\n-                </div>\r\n-                <div className=\"flex flex-col gap-6\">\r\n-                    <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\"/>\r\n-                        { suggestions.length > 0 ? (\r\n-                            suggestions.map(suggestion => (\r\n-                                <LittleOfferCard key={item}/>\r\n-                            ))\r\n-                        )\r\n-                            :\r\n-                            <div>\r\n-\r\n-                            </div>\r\n-                        }\r\n-                </div>\r\n-            </div>\r\n-\r\n-        </section>\r\n-    )\r\n-}\r\n-export default NavPageLayout;\r\n-\r\n-\r\n-const DynamicLeftContent = ({currentLocation}) => {\r\n-    const {friends, users} = useApp();\r\n-\r\n-    switch (currentLocation) {\r\n-\r\n-        case NAVIGATIONS.home :\r\n-            return (\r\n-                <>\r\n-                <SubHeader name=\"Followed People\" icon=\"bi bi-person\"/>\r\n-                <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                    {\r\n-                        friends.length > 0 ?\r\n-                            friends.map(friend => (\r\n-                                <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                                 name={friend.firstname + \" \" + friend.lastname}\r\n-                                                 image={SERVERLINK + \"/\" + friend.profileimage}\r\n-                                />\r\n-\r\n-                                    )) :\r\n-                                    <div>No friends</div>\r\n-                                    }\r\n-                                </div>\r\n-                        </>\r\n-                        )\r\n-\r\n-                        case NAVIGATIONS.friend :\r\n-                        return <>\r\n-                        <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\"/>\r\n-                        <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n-                    {\r\n-                        users.length > 0 ?\r\n-                        users.map(us => (\r\n-                        <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n-                     account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n-                     image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false}/>\r\n-                )) :\r\n-                <div>Pas d amis</div>\r\n-                }\r\n-                </div>\r\n-        </>\r\n-\r\n-        default :\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Amis\" icon=\"bi bi-person\"/>\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                                     name={friend.firstname + \" \" + friend.lastname}\r\n-                                                     image={SERVERLINK + \"/\" + friend.profileimage}/>\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-        }\r\n-        }\r\n-\r\n-        const DynamicRightContent = () => {\r\n-\r\n-        }\n-import {Outlet, useLocation} from \"react-router-dom\";\r\n-import {ProfileLeft} from \"../components/pages/ProfileLeft.jsx\";\r\n-import {SubHeader} from \"../components/pages/SubHeader.jsx\";\r\n-import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n-import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n-import {Notification} from \"../components/pages/Notification.jsx\";\r\n-import {useAuth} from \"../context/AuthProvider.jsx\";\r\n-import {SERVERLINK} from \"../constants/index.js\";\r\n-import {useApp} from \"../context/AppProvider.jsx\";\r\n-import {useEffect} from \"react\";\r\n-import {NAVIGATIONS} from \"../constants/home.js\";\r\n-import {Icon} from \"../styles/components.js\";\r\n-import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n-\r\n-const NavPageLayout = () => {\r\n-    const {personalInformation} = useAuth();\r\n-    const user = personalInformation;\r\n-\r\n-    const pathname = useLocation().pathname;\r\n-\r\n-    const {handleFriends, handleOfferSuggestion, suggestions} = useApp();\r\n-\r\n-    useEffect(() => {\r\n-        handleOfferSuggestion();\r\n-    })\r\n-\r\n-    return (\r\n-        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n-            {/*Left subNav*/}\r\n-            <div className=\"fixed bottom-10 right-[20%]\">\r\n-                <Icon icon=\"bi bi-briefcase\"/>\r\n-            </div>\r\n-            <div\r\n-                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n-                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n-                             account={user?.accounttype}/>\r\n-                <div className=\"flex flex-col gap-3 w-full\">\r\n-                    <DynamicLeftContent currentLocation={pathname}/>\r\n-                </div>\r\n-\r\n-            </div>\r\n-\r\n-            {/*Center */}\r\n-            <div\r\n-                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n-                <Outlet/>\r\n-            </div>\r\n-\r\n-            {/*Right subNav*/}\r\n-            <div\r\n-                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n-                <div className=\"flex flex-col gap-4 w-full\">\r\n-                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\"/>\r\n-                    {\r\n-                        suggestions.length > 0 ? (\r\n-                            suggestions.map(suggestion =>\r\n-                                (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n-                                                  title={suggestion.title} depart={suggestion.depart}\r\n-                                                  destination={suggestion.dest}\r\n-                                                  scheduleddate={suggestion.sheduleddate}/>)\r\n-                            )\r\n-                        ) : (\r\n-                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n-                                de sauvegarde pour l'instant</p>\r\n-                        )\r\n-                    }\r\n-                </div>\r\n-                <div className=\"flex flex-col gap-6\">\r\n-                    <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\"/>\r\n-                        { suggestions.length > 0 ? (\r\n-                            suggestions.map(suggestion => (\r\n-                                <LittleOfferCard key={item}/>\r\n-                            ))\r\n-                            :\r\n-                            \r\n-                        }\r\n-                </div>\r\n-            </div>\r\n-\r\n-        </section>\r\n-    )\r\n-}\r\n-export default NavPageLayout;\r\n-\r\n-\r\n-const DynamicLeftContent = ({currentLocation}) => {\r\n-    const {friends, users} = useApp();\r\n-\r\n-    switch (currentLocation) {\r\n-\r\n-        case NAVIGATIONS.home :\r\n-            return (\r\n-                <>\r\n-                <SubHeader name=\"Followed People\" icon=\"bi bi-person\"/>\r\n-                <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                    {\r\n-                        friends.length > 0 ?\r\n-                            friends.map(friend => (\r\n-                                <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                                 name={friend.firstname + \" \" + friend.lastname}\r\n-                                                 image={SERVERLINK + \"/\" + friend.profileimage}\r\n-                                />\r\n-\r\n-                                    )) :\r\n-                                    <div>No friends</div>\r\n-                                    }\r\n-                                </div>\r\n-                        </>\r\n-                        )\r\n-\r\n-                        case NAVIGATIONS.friend :\r\n-                        return <>\r\n-                        <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\"/>\r\n-                        <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n-                    {\r\n-                        users.length > 0 ?\r\n-                        users.map(us => (\r\n-                        <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n-                     account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n-                     image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false}/>\r\n-                )) :\r\n-                <div>Pas d amis</div>\r\n-                }\r\n-                </div>\r\n-        </>\r\n-\r\n-        default :\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Amis\" icon=\"bi bi-person\"/>\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                                     name={friend.firstname + \" \" + friend.lastname}\r\n-                                                     image={SERVERLINK + \"/\" + friend.profileimage}/>\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-        }\r\n-        }\r\n-\r\n-        const DynamicRightContent = () => {\r\n-\r\n-        }\n\\ No newline at end of file\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722244726212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n                 <div className=\"flex flex-col gap-6\">\r\n                     <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\" />\r\n                     {suggestions.length > 0 ? (\r\n                         suggestions.map(suggestion => (\r\n-                            <LittleOfferCard key={suggestion.offerid} />\r\n+                            <LittleOfferCard key={suggestion.offerid} sug/>\r\n                         ))\r\n                     )\r\n                         :\r\n                         <div>\r\n"
                },
                {
                    "date": 1722244733790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,152 @@\n+import { Outlet, useLocation } from \"react-router-dom\";\r\n+import { ProfileLeft } from \"../components/pages/ProfileLeft.jsx\";\r\n+import { SubHeader } from \"../components/pages/SubHeader.jsx\";\r\n+import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n+import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n+import { Notification } from \"../components/pages/Notification.jsx\";\r\n+import { useAuth } from \"../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../constants/index.js\";\r\n+import { useApp } from \"../context/AppProvider.jsx\";\r\n+import { useEffect } from \"react\";\r\n+import { NAVIGATIONS } from \"../constants/home.js\";\r\n+import { Icon } from \"../styles/components.js\";\r\n+import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n+\r\n+const NavPageLayout = () => {\r\n+    const { personalInformation } = useAuth();\r\n+    const user = personalInformation;\r\n+\r\n+    const pathname = useLocation().pathname;\r\n+\r\n+    const { handleFriends, handleOfferSuggestion, suggestions } = useApp();\r\n+\r\n+    useEffect(() => {\r\n+        handleOfferSuggestion();\r\n+    })\r\n+\r\n+    return (\r\n+        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n+            {/*Left subNav*/}\r\n+            <div className=\"fixed bottom-10 right-[20%]\">\r\n+                <Icon icon=\"bi bi-briefcase\" />\r\n+            </div>\r\n+            <div\r\n+                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n+                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n+                    account={user?.accounttype} />\r\n+                <div className=\"flex flex-col gap-3 w-full\">\r\n+                    <DynamicLeftContent currentLocation={pathname} />\r\n+                </div>\r\n+\r\n+            </div>\r\n+\r\n+            {/*Center */}\r\n+            <div\r\n+                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n+                <Outlet />\r\n+            </div>\r\n+\r\n+            {/*Right subNav*/}\r\n+            <div\r\n+                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n+                <div className=\"flex flex-col gap-4 w-full\">\r\n+                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\" />\r\n+                    {\r\n+                        suggestions.length > 0 ? (\r\n+                            suggestions.map(suggestion =>\r\n+                            (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n+                                title={suggestion.title} depart={suggestion.depart}\r\n+                                destination={suggestion.dest}\r\n+                                scheduleddate={suggestion.sheduleddate} />)\r\n+                            )\r\n+                        ) : (\r\n+                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n+                                de sauvegarde pour l'instant</p>\r\n+                        )\r\n+                    }\r\n+                </div>\r\n+                <div className=\"flex flex-col gap-6\">\r\n+                    <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\" />\r\n+                    {suggestions.length > 0 ? (\r\n+                        suggestions.map(suggestion => (\r\n+                            <LittleOfferCard key={suggestion.offerid} sug={suggestion}/>\r\n+                        ))\r\n+                    )\r\n+                        :\r\n+                        <div>\r\n+                            Pas D'offre\r\n+                        </div>\r\n+                    }\r\n+                </div>\r\n+            </div>\r\n+\r\n+        </section>\r\n+    )\r\n+}\r\n+export default NavPageLayout;\r\n+\r\n+\r\n+const DynamicLeftContent = ({ currentLocation }) => {\r\n+    const { friends, users } = useApp();\r\n+\r\n+    switch (currentLocation) {\r\n+\r\n+        case NAVIGATIONS.home:\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Followed People\" icon=\"bi bi-person\" />\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                        name={friend.firstname + \" \" + friend.lastname}\r\n+                                        image={SERVERLINK + \"/\" + friend.profileimage}\r\n+                                    />\r\n+\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+\r\n+        case NAVIGATIONS.friend:\r\n+            return <>\r\n+                <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\" />\r\n+                <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n+                    {\r\n+                        users.length > 0 ?\r\n+                            users.map(us => (\r\n+                                <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n+                                    account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n+                                    image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false} />\r\n+                            )) :\r\n+                            <div>Pas d amis</div>\r\n+                    }\r\n+                </div>\r\n+            </>\r\n+\r\n+        default:\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Amis\" icon=\"bi bi-person\" />\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                        name={friend.firstname + \" \" + friend.lastname}\r\n+                                        image={SERVERLINK + \"/\" + friend.profileimage} />\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+    }\r\n+}\r\n+\r\n+const DynamicRightContent = () => {\r\n+\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722245603436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n     const { handleFriends, handleOfferSuggestion, suggestions } = useApp();\r\n \r\n     useEffect(() => {\r\n         handleOfferSuggestion();\r\n-    })\r\n+    }, [])\r\n \r\n     return (\r\n         <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n             {/*Left subNav*/}\r\n@@ -148,157 +148,5 @@\n }\r\n \r\n const DynamicRightContent = () => {\r\n \r\n-}\n-import { Outlet, useLocation } from \"react-router-dom\";\r\n-import { ProfileLeft } from \"../components/pages/ProfileLeft.jsx\";\r\n-import { SubHeader } from \"../components/pages/SubHeader.jsx\";\r\n-import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n-import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n-import { Notification } from \"../components/pages/Notification.jsx\";\r\n-import { useAuth } from \"../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../constants/index.js\";\r\n-import { useApp } from \"../context/AppProvider.jsx\";\r\n-import { useEffect } from \"react\";\r\n-import { NAVIGATIONS } from \"../constants/home.js\";\r\n-import { Icon } from \"../styles/components.js\";\r\n-import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n-\r\n-const NavPageLayout = () => {\r\n-    const { personalInformation } = useAuth();\r\n-    const user = personalInformation;\r\n-\r\n-    const pathname = useLocation().pathname;\r\n-\r\n-    const { handleFriends, handleOfferSuggestion, suggestions } = useApp();\r\n-\r\n-    useEffect(() => {\r\n-        handleOfferSuggestion();\r\n-    })\r\n-\r\n-    return (\r\n-        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n-            {/*Left subNav*/}\r\n-            <div className=\"fixed bottom-10 right-[20%]\">\r\n-                <Icon icon=\"bi bi-briefcase\" />\r\n-            </div>\r\n-            <div\r\n-                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n-                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n-                    account={user?.accounttype} />\r\n-                <div className=\"flex flex-col gap-3 w-full\">\r\n-                    <DynamicLeftContent currentLocation={pathname} />\r\n-                </div>\r\n-\r\n-            </div>\r\n-\r\n-            {/*Center */}\r\n-            <div\r\n-                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n-                <Outlet />\r\n-            </div>\r\n-\r\n-            {/*Right subNav*/}\r\n-            <div\r\n-                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n-                <div className=\"flex flex-col gap-4 w-full\">\r\n-                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\" />\r\n-                    {\r\n-                        suggestions.length > 0 ? (\r\n-                            suggestions.map(suggestion =>\r\n-                            (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n-                                title={suggestion.title} depart={suggestion.depart}\r\n-                                destination={suggestion.dest}\r\n-                                scheduleddate={suggestion.sheduleddate} />)\r\n-                            )\r\n-                        ) : (\r\n-                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n-                                de sauvegarde pour l'instant</p>\r\n-                        )\r\n-                    }\r\n-                </div>\r\n-                <div className=\"flex flex-col gap-6\">\r\n-                    <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\" />\r\n-                    {suggestions.length > 0 ? (\r\n-                        suggestions.map(suggestion => (\r\n-                            <LittleOfferCard key={suggestion.offerid} sug/>\r\n-                        ))\r\n-                    )\r\n-                        :\r\n-                        <div>\r\n-                            Pas D'offre\r\n-                        </div>\r\n-                    }\r\n-                </div>\r\n-            </div>\r\n-\r\n-        </section>\r\n-    )\r\n-}\r\n-export default NavPageLayout;\r\n-\r\n-\r\n-const DynamicLeftContent = ({ currentLocation }) => {\r\n-    const { friends, users } = useApp();\r\n-\r\n-    switch (currentLocation) {\r\n-\r\n-        case NAVIGATIONS.home:\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Followed People\" icon=\"bi bi-person\" />\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                        name={friend.firstname + \" \" + friend.lastname}\r\n-                                        image={SERVERLINK + \"/\" + friend.profileimage}\r\n-                                    />\r\n-\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-\r\n-        case NAVIGATIONS.friend:\r\n-            return <>\r\n-                <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\" />\r\n-                <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n-                    {\r\n-                        users.length > 0 ?\r\n-                            users.map(us => (\r\n-                                <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n-                                    account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n-                                    image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false} />\r\n-                            )) :\r\n-                            <div>Pas d amis</div>\r\n-                    }\r\n-                </div>\r\n-            </>\r\n-\r\n-        default:\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Amis\" icon=\"bi bi-person\" />\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                        name={friend.firstname + \" \" + friend.lastname}\r\n-                                        image={SERVERLINK + \"/\" + friend.profileimage} />\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-    }\r\n-}\r\n-\r\n-const DynamicRightContent = () => {\r\n-\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722246631509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n                         ))\r\n                     )\r\n                         :\r\n                         <div>\r\n-                            Pas D'offre\r\n+                            No offers\r\n                         </div>\r\n                     }\r\n                 </div>\r\n             </div>\r\n"
                },
                {
                    "date": 1722246631578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,152 @@\n+import { Outlet, useLocation } from \"react-router-dom\";\r\n+import { ProfileLeft } from \"../components/pages/ProfileLeft.jsx\";\r\n+import { SubHeader } from \"../components/pages/SubHeader.jsx\";\r\n+import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n+import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n+import { Notification } from \"../components/pages/Notification.jsx\";\r\n+import { useAuth } from \"../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../constants/index.js\";\r\n+import { useApp } from \"../context/AppProvider.jsx\";\r\n+import { useEffect } from \"react\";\r\n+import { NAVIGATIONS } from \"../constants/home.js\";\r\n+import { Icon } from \"../styles/components.js\";\r\n+import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n+\r\n+const NavPageLayout = () => {\r\n+    const { personalInformation } = useAuth();\r\n+    const user = personalInformation;\r\n+\r\n+    const pathname = useLocation().pathname;\r\n+\r\n+    const { handleFriends, handleOfferSuggestion, suggestions } = useApp();\r\n+\r\n+    useEffect(() => {\r\n+        handleOfferSuggestion();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n+            {/*Left subNav*/}\r\n+            <div className=\"fixed bottom-10 right-[20%]\">\r\n+                <Icon icon=\"bi bi-briefcase\" />\r\n+            </div>\r\n+            <div\r\n+                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n+                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n+                    account={user?.accounttype} />\r\n+                <div className=\"flex flex-col gap-3 w-full\">\r\n+                    <DynamicLeftContent currentLocation={pathname} />\r\n+                </div>\r\n+\r\n+            </div>\r\n+\r\n+            {/*Center */}\r\n+            <div\r\n+                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n+                <Outlet />\r\n+            </div>\r\n+\r\n+            {/*Right subNav*/}\r\n+            <div\r\n+                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n+                <div className=\"flex flex-col gap-4 w-full\">\r\n+                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\" />\r\n+                    {\r\n+                        suggestions.length > 0 ? (\r\n+                            suggestions.map(suggestion =>\r\n+                            (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n+                                title={suggestion.title} depart={suggestion.depart}\r\n+                                destination={suggestion.dest}\r\n+                                scheduleddate={suggestion.sheduleddate} />)\r\n+                            )\r\n+                        ) : (\r\n+                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n+                                de sauvegarde pour l'instant</p>\r\n+                        )\r\n+                    }\r\n+                </div>\r\n+                <div className=\"flex flex-col gap-6\">\r\n+                    <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\" />\r\n+                    {suggestions.length > 0 ? (\r\n+                        suggestions.map(suggestion => (\r\n+                            <LittleOfferCard key={suggestion.offerid} sug={suggestion}/>\r\n+                        ))\r\n+                    )\r\n+                        :\r\n+                        <div>\r\n+                            No offers\r\n+                        </div>\r\n+                    }\r\n+                </div>\r\n+            </div>\r\n+\r\n+        </section>\r\n+    )\r\n+}\r\n+export default NavPageLayout;\r\n+\r\n+\r\n+const DynamicLeftContent = ({ currentLocation }) => {\r\n+    const { friends, users } = useApp();\r\n+\r\n+    switch (currentLocation) {\r\n+\r\n+        case NAVIGATIONS.home:\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Followed People\" icon=\"bi bi-person\" />\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                        name={friend.firstname + \" \" + friend.lastname}\r\n+                                        image={SERVERLINK + \"/\" + friend.profileimage}\r\n+                                    />\r\n+\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+\r\n+        case NAVIGATIONS.friend:\r\n+            return <>\r\n+                <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\" />\r\n+                <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n+                    {\r\n+                        users.length > 0 ?\r\n+                            users.map(us => (\r\n+                                <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n+                                    account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n+                                    image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false} />\r\n+                            )) :\r\n+                            <div>Pas d amis</div>\r\n+                    }\r\n+                </div>\r\n+            </>\r\n+\r\n+        default:\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Amis\" icon=\"bi bi-person\" />\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                        name={friend.firstname + \" \" + friend.lastname}\r\n+                                        image={SERVERLINK + \"/\" + friend.profileimage} />\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+    }\r\n+}\r\n+\r\n+const DynamicRightContent = () => {\r\n+\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722269682372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n                         )\r\n                     }\r\n                 </div>\r\n                 <div className=\"flex flex-col gap-6\">\r\n-                    <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\" />\r\n+                    <SubHeader name=\"Suggestions d'offres\" icon=\"bi bi-robot\" />\r\n                     {suggestions.length > 0 ? (\r\n                         suggestions.map(suggestion => (\r\n                             <LittleOfferCard key={suggestion.offerid} sug={suggestion}/>\r\n                         ))\r\n@@ -148,157 +148,5 @@\n }\r\n \r\n const DynamicRightContent = () => {\r\n \r\n-}\n-import { Outlet, useLocation } from \"react-router-dom\";\r\n-import { ProfileLeft } from \"../components/pages/ProfileLeft.jsx\";\r\n-import { SubHeader } from \"../components/pages/SubHeader.jsx\";\r\n-import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n-import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n-import { Notification } from \"../components/pages/Notification.jsx\";\r\n-import { useAuth } from \"../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../constants/index.js\";\r\n-import { useApp } from \"../context/AppProvider.jsx\";\r\n-import { useEffect } from \"react\";\r\n-import { NAVIGATIONS } from \"../constants/home.js\";\r\n-import { Icon } from \"../styles/components.js\";\r\n-import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n-\r\n-const NavPageLayout = () => {\r\n-    const { personalInformation } = useAuth();\r\n-    const user = personalInformation;\r\n-\r\n-    const pathname = useLocation().pathname;\r\n-\r\n-    const { handleFriends, handleOfferSuggestion, suggestions } = useApp();\r\n-\r\n-    useEffect(() => {\r\n-        handleOfferSuggestion();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n-            {/*Left subNav*/}\r\n-            <div className=\"fixed bottom-10 right-[20%]\">\r\n-                <Icon icon=\"bi bi-briefcase\" />\r\n-            </div>\r\n-            <div\r\n-                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n-                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n-                    account={user?.accounttype} />\r\n-                <div className=\"flex flex-col gap-3 w-full\">\r\n-                    <DynamicLeftContent currentLocation={pathname} />\r\n-                </div>\r\n-\r\n-            </div>\r\n-\r\n-            {/*Center */}\r\n-            <div\r\n-                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n-                <Outlet />\r\n-            </div>\r\n-\r\n-            {/*Right subNav*/}\r\n-            <div\r\n-                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n-                <div className=\"flex flex-col gap-4 w-full\">\r\n-                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\" />\r\n-                    {\r\n-                        suggestions.length > 0 ? (\r\n-                            suggestions.map(suggestion =>\r\n-                            (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n-                                title={suggestion.title} depart={suggestion.depart}\r\n-                                destination={suggestion.dest}\r\n-                                scheduleddate={suggestion.sheduleddate} />)\r\n-                            )\r\n-                        ) : (\r\n-                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n-                                de sauvegarde pour l'instant</p>\r\n-                        )\r\n-                    }\r\n-                </div>\r\n-                <div className=\"flex flex-col gap-6\">\r\n-                    <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\" />\r\n-                    {suggestions.length > 0 ? (\r\n-                        suggestions.map(suggestion => (\r\n-                            <LittleOfferCard key={suggestion.offerid} sug={suggestion}/>\r\n-                        ))\r\n-                    )\r\n-                        :\r\n-                        <div>\r\n-                            No offers\r\n-                        </div>\r\n-                    }\r\n-                </div>\r\n-            </div>\r\n-\r\n-        </section>\r\n-    )\r\n-}\r\n-export default NavPageLayout;\r\n-\r\n-\r\n-const DynamicLeftContent = ({ currentLocation }) => {\r\n-    const { friends, users } = useApp();\r\n-\r\n-    switch (currentLocation) {\r\n-\r\n-        case NAVIGATIONS.home:\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Followed People\" icon=\"bi bi-person\" />\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                        name={friend.firstname + \" \" + friend.lastname}\r\n-                                        image={SERVERLINK + \"/\" + friend.profileimage}\r\n-                                    />\r\n-\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-\r\n-        case NAVIGATIONS.friend:\r\n-            return <>\r\n-                <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\" />\r\n-                <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n-                    {\r\n-                        users.length > 0 ?\r\n-                            users.map(us => (\r\n-                                <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n-                                    account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n-                                    image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false} />\r\n-                            )) :\r\n-                            <div>Pas d amis</div>\r\n-                    }\r\n-                </div>\r\n-            </>\r\n-\r\n-        default:\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Amis\" icon=\"bi bi-person\" />\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                        name={friend.firstname + \" \" + friend.lastname}\r\n-                                        image={SERVERLINK + \"/\" + friend.profileimage} />\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-    }\r\n-}\r\n-\r\n-const DynamicRightContent = () => {\r\n-\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722269733840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,12 @@\n     const { handleFriends, handleOfferSuggestion, suggestions } = useApp();\r\n \r\n     useEffect(() => {\r\n         handleOfferSuggestion();\r\n+        useEffect(() => {\r\n+            handleOffersSaved()\r\n+            handleOffersForUser();\r\n+        }, [])\r\n     }, [])\r\n \r\n     return (\r\n         <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n"
                },
                {
                    "date": 1722269740240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,12 +21,10 @@\n     const { handleFriends, handleOfferSuggestion, suggestions } = useApp();\r\n \r\n     useEffect(() => {\r\n         handleOfferSuggestion();\r\n-        useEffect(() => {\r\n-            handleOffersSaved()\r\n-            handleOffersForUser();\r\n-        }, [])\r\n+        handleOffersSaved()\r\n+        handleOffersForUser();\r\n     }, [])\r\n \r\n     return (\r\n         <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n"
                },
                {
                    "date": 1722269752219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,154 @@\n+import { Outlet, useLocation } from \"react-router-dom\";\r\n+import { ProfileLeft } from \"../components/pages/ProfileLeft.jsx\";\r\n+import { SubHeader } from \"../components/pages/SubHeader.jsx\";\r\n+import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n+import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n+import { Notification } from \"../components/pages/Notification.jsx\";\r\n+import { useAuth } from \"../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../constants/index.js\";\r\n+import { useApp } from \"../context/AppProvider.jsx\";\r\n+import { useEffect } from \"react\";\r\n+import { NAVIGATIONS } from \"../constants/home.js\";\r\n+import { Icon } from \"../styles/components.js\";\r\n+import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n+\r\n+const NavPageLayout = () => {\r\n+    const { personalInformation } = useAuth();\r\n+    const user = personalInformation;\r\n+\r\n+    const pathname = useLocation().pathname;\r\n+\r\n+    const { handleFriends, handleOfferSuggestion, suggestions, hand;e } = useApp();\r\n+\r\n+    useEffect(() => {\r\n+        handleOfferSuggestion();\r\n+        handleOffersSaved()\r\n+        handleOffersForUser();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n+            {/*Left subNav*/}\r\n+            <div className=\"fixed bottom-10 right-[20%]\">\r\n+                <Icon icon=\"bi bi-briefcase\" />\r\n+            </div>\r\n+            <div\r\n+                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n+                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n+                    account={user?.accounttype} />\r\n+                <div className=\"flex flex-col gap-3 w-full\">\r\n+                    <DynamicLeftContent currentLocation={pathname} />\r\n+                </div>\r\n+\r\n+            </div>\r\n+\r\n+            {/*Center */}\r\n+            <div\r\n+                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n+                <Outlet />\r\n+            </div>\r\n+\r\n+            {/*Right subNav*/}\r\n+            <div\r\n+                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n+                <div className=\"flex flex-col gap-4 w-full\">\r\n+                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\" />\r\n+                    {\r\n+                        suggestions.length > 0 ? (\r\n+                            suggestions.map(suggestion =>\r\n+                            (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n+                                title={suggestion.title} depart={suggestion.depart}\r\n+                                destination={suggestion.dest}\r\n+                                scheduleddate={suggestion.sheduleddate} />)\r\n+                            )\r\n+                        ) : (\r\n+                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n+                                de sauvegarde pour l'instant</p>\r\n+                        )\r\n+                    }\r\n+                </div>\r\n+                <div className=\"flex flex-col gap-6\">\r\n+                    <SubHeader name=\"Suggestions d'offres\" icon=\"bi bi-robot\" />\r\n+                    {suggestions.length > 0 ? (\r\n+                        suggestions.map(suggestion => (\r\n+                            <LittleOfferCard key={suggestion.offerid} sug={suggestion}/>\r\n+                        ))\r\n+                    )\r\n+                        :\r\n+                        <div>\r\n+                            No offers\r\n+                        </div>\r\n+                    }\r\n+                </div>\r\n+            </div>\r\n+\r\n+        </section>\r\n+    )\r\n+}\r\n+export default NavPageLayout;\r\n+\r\n+\r\n+const DynamicLeftContent = ({ currentLocation }) => {\r\n+    const { friends, users } = useApp();\r\n+\r\n+    switch (currentLocation) {\r\n+\r\n+        case NAVIGATIONS.home:\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Followed People\" icon=\"bi bi-person\" />\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                        name={friend.firstname + \" \" + friend.lastname}\r\n+                                        image={SERVERLINK + \"/\" + friend.profileimage}\r\n+                                    />\r\n+\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+\r\n+        case NAVIGATIONS.friend:\r\n+            return <>\r\n+                <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\" />\r\n+                <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n+                    {\r\n+                        users.length > 0 ?\r\n+                            users.map(us => (\r\n+                                <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n+                                    account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n+                                    image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false} />\r\n+                            )) :\r\n+                            <div>Pas d amis</div>\r\n+                    }\r\n+                </div>\r\n+            </>\r\n+\r\n+        default:\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Amis\" icon=\"bi bi-person\" />\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                        name={friend.firstname + \" \" + friend.lastname}\r\n+                                        image={SERVERLINK + \"/\" + friend.profileimage} />\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+    }\r\n+}\r\n+\r\n+const DynamicRightContent = () => {\r\n+\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722269760585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,154 @@\n+import { Outlet, useLocation } from \"react-router-dom\";\r\n+import { ProfileLeft } from \"../components/pages/ProfileLeft.jsx\";\r\n+import { SubHeader } from \"../components/pages/SubHeader.jsx\";\r\n+import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n+import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n+import { Notification } from \"../components/pages/Notification.jsx\";\r\n+import { useAuth } from \"../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../constants/index.js\";\r\n+import { useApp } from \"../context/AppProvider.jsx\";\r\n+import { useEffect } from \"react\";\r\n+import { NAVIGATIONS } from \"../constants/home.js\";\r\n+import { Icon } from \"../styles/components.js\";\r\n+import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n+\r\n+const NavPageLayout = () => {\r\n+    const { personalInformation } = useAuth();\r\n+    const user = personalInformation;\r\n+\r\n+    const pathname = useLocation().pathname;\r\n+\r\n+    const { handleFriends, handleOfferSuggestion, suggestions, handleOffersSaved, ha } = useApp();\r\n+\r\n+    useEffect(() => {\r\n+        handleOfferSuggestion();\r\n+        handleOffersSaved()\r\n+        handleOffersForUser();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n+            {/*Left subNav*/}\r\n+            <div className=\"fixed bottom-10 right-[20%]\">\r\n+                <Icon icon=\"bi bi-briefcase\" />\r\n+            </div>\r\n+            <div\r\n+                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n+                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n+                    account={user?.accounttype} />\r\n+                <div className=\"flex flex-col gap-3 w-full\">\r\n+                    <DynamicLeftContent currentLocation={pathname} />\r\n+                </div>\r\n+\r\n+            </div>\r\n+\r\n+            {/*Center */}\r\n+            <div\r\n+                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n+                <Outlet />\r\n+            </div>\r\n+\r\n+            {/*Right subNav*/}\r\n+            <div\r\n+                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n+                <div className=\"flex flex-col gap-4 w-full\">\r\n+                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\" />\r\n+                    {\r\n+                        suggestions.length > 0 ? (\r\n+                            suggestions.map(suggestion =>\r\n+                            (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n+                                title={suggestion.title} depart={suggestion.depart}\r\n+                                destination={suggestion.dest}\r\n+                                scheduleddate={suggestion.sheduleddate} />)\r\n+                            )\r\n+                        ) : (\r\n+                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n+                                de sauvegarde pour l'instant</p>\r\n+                        )\r\n+                    }\r\n+                </div>\r\n+                <div className=\"flex flex-col gap-6\">\r\n+                    <SubHeader name=\"Suggestions d'offres\" icon=\"bi bi-robot\" />\r\n+                    {suggestions.length > 0 ? (\r\n+                        suggestions.map(suggestion => (\r\n+                            <LittleOfferCard key={suggestion.offerid} sug={suggestion}/>\r\n+                        ))\r\n+                    )\r\n+                        :\r\n+                        <div>\r\n+                            No offers\r\n+                        </div>\r\n+                    }\r\n+                </div>\r\n+            </div>\r\n+\r\n+        </section>\r\n+    )\r\n+}\r\n+export default NavPageLayout;\r\n+\r\n+\r\n+const DynamicLeftContent = ({ currentLocation }) => {\r\n+    const { friends, users } = useApp();\r\n+\r\n+    switch (currentLocation) {\r\n+\r\n+        case NAVIGATIONS.home:\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Followed People\" icon=\"bi bi-person\" />\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                        name={friend.firstname + \" \" + friend.lastname}\r\n+                                        image={SERVERLINK + \"/\" + friend.profileimage}\r\n+                                    />\r\n+\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+\r\n+        case NAVIGATIONS.friend:\r\n+            return <>\r\n+                <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\" />\r\n+                <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n+                    {\r\n+                        users.length > 0 ?\r\n+                            users.map(us => (\r\n+                                <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n+                                    account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n+                                    image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false} />\r\n+                            )) :\r\n+                            <div>Pas d amis</div>\r\n+                    }\r\n+                </div>\r\n+            </>\r\n+\r\n+        default:\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Amis\" icon=\"bi bi-person\" />\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                        name={friend.firstname + \" \" + friend.lastname}\r\n+                                        image={SERVERLINK + \"/\" + friend.profileimage} />\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+    }\r\n+}\r\n+\r\n+const DynamicRightContent = () => {\r\n+\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722269766975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,154 @@\n+import { Outlet, useLocation } from \"react-router-dom\";\r\n+import { ProfileLeft } from \"../components/pages/ProfileLeft.jsx\";\r\n+import { SubHeader } from \"../components/pages/SubHeader.jsx\";\r\n+import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n+import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n+import { Notification } from \"../components/pages/Notification.jsx\";\r\n+import { useAuth } from \"../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../constants/index.js\";\r\n+import { useApp } from \"../context/AppProvider.jsx\";\r\n+import { useEffect } from \"react\";\r\n+import { NAVIGATIONS } from \"../constants/home.js\";\r\n+import { Icon } from \"../styles/components.js\";\r\n+import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n+\r\n+const NavPageLayout = () => {\r\n+    const { personalInformation } = useAuth();\r\n+    const user = personalInformation;\r\n+\r\n+    const pathname = useLocation().pathname;\r\n+\r\n+    const { handleFriends, handleOfferSuggestion, suggestions, handleOffersSaved, handleOffersForUser } = useApp();\r\n+\r\n+    useEffect(() => {\r\n+        handleOfferSuggestion();\r\n+        handleOffersSaved();\r\n+        handleOffersForUser();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n+            {/*Left subNav*/}\r\n+            <div className=\"fixed bottom-10 right-[20%]\">\r\n+                <Icon icon=\"bi bi-briefcase\" />\r\n+            </div>\r\n+            <div\r\n+                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n+                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n+                    account={user?.accounttype} />\r\n+                <div className=\"flex flex-col gap-3 w-full\">\r\n+                    <DynamicLeftContent currentLocation={pathname} />\r\n+                </div>\r\n+\r\n+            </div>\r\n+\r\n+            {/*Center */}\r\n+            <div\r\n+                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n+                <Outlet />\r\n+            </div>\r\n+\r\n+            {/*Right subNav*/}\r\n+            <div\r\n+                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n+                <div className=\"flex flex-col gap-4 w-full\">\r\n+                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\" />\r\n+                    {\r\n+                        suggestions.length > 0 ? (\r\n+                            suggestions.map(suggestion =>\r\n+                            (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n+                                title={suggestion.title} depart={suggestion.depart}\r\n+                                destination={suggestion.dest}\r\n+                                scheduleddate={suggestion.sheduleddate} />)\r\n+                            )\r\n+                        ) : (\r\n+                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n+                                de sauvegarde pour l'instant</p>\r\n+                        )\r\n+                    }\r\n+                </div>\r\n+                <div className=\"flex flex-col gap-6\">\r\n+                    <SubHeader name=\"Suggestions d'offres\" icon=\"bi bi-robot\" />\r\n+                    {suggestions.length > 0 ? (\r\n+                        suggestions.map(suggestion => (\r\n+                            <LittleOfferCard key={suggestion.offerid} sug={suggestion}/>\r\n+                        ))\r\n+                    )\r\n+                        :\r\n+                        <div>\r\n+                            No offers\r\n+                        </div>\r\n+                    }\r\n+                </div>\r\n+            </div>\r\n+\r\n+        </section>\r\n+    )\r\n+}\r\n+export default NavPageLayout;\r\n+\r\n+\r\n+const DynamicLeftContent = ({ currentLocation }) => {\r\n+    const { friends, users } = useApp();\r\n+\r\n+    switch (currentLocation) {\r\n+\r\n+        case NAVIGATIONS.home:\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Followed People\" icon=\"bi bi-person\" />\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                        name={friend.firstname + \" \" + friend.lastname}\r\n+                                        image={SERVERLINK + \"/\" + friend.profileimage}\r\n+                                    />\r\n+\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+\r\n+        case NAVIGATIONS.friend:\r\n+            return <>\r\n+                <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\" />\r\n+                <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n+                    {\r\n+                        users.length > 0 ?\r\n+                            users.map(us => (\r\n+                                <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n+                                    account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n+                                    image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false} />\r\n+                            )) :\r\n+                            <div>Pas d amis</div>\r\n+                    }\r\n+                </div>\r\n+            </>\r\n+\r\n+        default:\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Amis\" icon=\"bi bi-person\" />\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                        name={friend.firstname + \" \" + friend.lastname}\r\n+                                        image={SERVERLINK + \"/\" + friend.profileimage} />\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+    }\r\n+}\r\n+\r\n+const DynamicRightContent = () => {\r\n+\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722269779147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,154 @@\n+import { Outlet, useLocation } from \"react-router-dom\";\r\n+import { ProfileLeft } from \"../components/pages/ProfileLeft.jsx\";\r\n+import { SubHeader } from \"../components/pages/SubHeader.jsx\";\r\n+import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n+import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n+import { Notification } from \"../components/pages/Notification.jsx\";\r\n+import { useAuth } from \"../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../constants/index.js\";\r\n+import { useApp } from \"../context/AppProvider.jsx\";\r\n+import { useEffect } from \"react\";\r\n+import { NAVIGATIONS } from \"../constants/home.js\";\r\n+import { Icon } from \"../styles/components.js\";\r\n+import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n+\r\n+const NavPageLayout = () => {\r\n+    const { personalInformation } = useAuth();\r\n+    const user = personalInformation;\r\n+\r\n+    const pathname = useLocation().pathname;\r\n+\r\n+    const { handleFriends, handleOfferSuggestion, suggestions, handleOffersSaved, handleOffersForUser,  } = useApp();\r\n+\r\n+    useEffect(() => {\r\n+        handleOfferSuggestion();\r\n+        handleOffersSaved();\r\n+        handleOffersForUser();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n+            {/*Left subNav*/}\r\n+            <div className=\"fixed bottom-10 right-[20%]\">\r\n+                <Icon icon=\"bi bi-briefcase\" />\r\n+            </div>\r\n+            <div\r\n+                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n+                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n+                    account={user?.accounttype} />\r\n+                <div className=\"flex flex-col gap-3 w-full\">\r\n+                    <DynamicLeftContent currentLocation={pathname} />\r\n+                </div>\r\n+\r\n+            </div>\r\n+\r\n+            {/*Center */}\r\n+            <div\r\n+                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n+                <Outlet />\r\n+            </div>\r\n+\r\n+            {/*Right subNav*/}\r\n+            <div\r\n+                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n+                <div className=\"flex flex-col gap-4 w-full\">\r\n+                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\" />\r\n+                    {\r\n+                        suggestions.length > 0 ? (\r\n+                            suggestions.map(suggestion =>\r\n+                            (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n+                                title={suggestion.title} depart={suggestion.depart}\r\n+                                destination={suggestion.dest}\r\n+                                scheduleddate={suggestion.sheduleddate} />)\r\n+                            )\r\n+                        ) : (\r\n+                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n+                                de sauvegarde pour l'instant</p>\r\n+                        )\r\n+                    }\r\n+                </div>\r\n+                <div className=\"flex flex-col gap-6\">\r\n+                    <SubHeader name=\"Suggestions d'offres\" icon=\"bi bi-robot\" />\r\n+                    {suggestions.length > 0 ? (\r\n+                        suggestions.map(suggestion => (\r\n+                            <LittleOfferCard key={suggestion.offerid} sug={suggestion}/>\r\n+                        ))\r\n+                    )\r\n+                        :\r\n+                        <div>\r\n+                            No offers\r\n+                        </div>\r\n+                    }\r\n+                </div>\r\n+            </div>\r\n+\r\n+        </section>\r\n+    )\r\n+}\r\n+export default NavPageLayout;\r\n+\r\n+\r\n+const DynamicLeftContent = ({ currentLocation }) => {\r\n+    const { friends, users } = useApp();\r\n+\r\n+    switch (currentLocation) {\r\n+\r\n+        case NAVIGATIONS.home:\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Followed People\" icon=\"bi bi-person\" />\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                        name={friend.firstname + \" \" + friend.lastname}\r\n+                                        image={SERVERLINK + \"/\" + friend.profileimage}\r\n+                                    />\r\n+\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+\r\n+        case NAVIGATIONS.friend:\r\n+            return <>\r\n+                <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\" />\r\n+                <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n+                    {\r\n+                        users.length > 0 ?\r\n+                            users.map(us => (\r\n+                                <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n+                                    account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n+                                    image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false} />\r\n+                            )) :\r\n+                            <div>Pas d amis</div>\r\n+                    }\r\n+                </div>\r\n+            </>\r\n+\r\n+        default:\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Amis\" icon=\"bi bi-person\" />\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                        name={friend.firstname + \" \" + friend.lastname}\r\n+                                        image={SERVERLINK + \"/\" + friend.profileimage} />\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+    }\r\n+}\r\n+\r\n+const DynamicRightContent = () => {\r\n+\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722269791518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,154 @@\n+import { Outlet, useLocation } from \"react-router-dom\";\r\n+import { ProfileLeft } from \"../components/pages/ProfileLeft.jsx\";\r\n+import { SubHeader } from \"../components/pages/SubHeader.jsx\";\r\n+import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n+import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n+import { Notification } from \"../components/pages/Notification.jsx\";\r\n+import { useAuth } from \"../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../constants/index.js\";\r\n+import { useApp } from \"../context/AppProvider.jsx\";\r\n+import { useEffect } from \"react\";\r\n+import { NAVIGATIONS } from \"../constants/home.js\";\r\n+import { Icon } from \"../styles/components.js\";\r\n+import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n+\r\n+const NavPageLayout = () => {\r\n+    const { personalInformation } = useAuth();\r\n+    const user = personalInformation;\r\n+\r\n+    const pathname = useLocation().pathname;\r\n+\r\n+    const { handleFriends, handleOfferSuggestion, suggestions, handleOffersSaved, handleOffersForUser, savedOffers } = useApp();\r\n+\r\n+    useEffect(() => {\r\n+        handleOfferSuggestion();\r\n+        handleOffersSaved();\r\n+        handleOffersForUser();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n+            {/*Left subNav*/}\r\n+            <div className=\"fixed bottom-10 right-[20%]\">\r\n+                <Icon icon=\"bi bi-briefcase\" />\r\n+            </div>\r\n+            <div\r\n+                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n+                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n+                    account={user?.accounttype} />\r\n+                <div className=\"flex flex-col gap-3 w-full\">\r\n+                    <DynamicLeftContent currentLocation={pathname} />\r\n+                </div>\r\n+\r\n+            </div>\r\n+\r\n+            {/*Center */}\r\n+            <div\r\n+                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n+                <Outlet />\r\n+            </div>\r\n+\r\n+            {/*Right subNav*/}\r\n+            <div\r\n+                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n+                <div className=\"flex flex-col gap-4 w-full\">\r\n+                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\" />\r\n+                    {\r\n+                        suggestions.length > 0 ? (\r\n+                            suggestions.map(suggestion =>\r\n+                            (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n+                                title={suggestion.title} depart={suggestion.depart}\r\n+                                destination={suggestion.dest}\r\n+                                scheduleddate={suggestion.sheduleddate} />)\r\n+                            )\r\n+                        ) : (\r\n+                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n+                                de sauvegarde pour l'instant</p>\r\n+                        )\r\n+                    }\r\n+                </div>\r\n+                <div className=\"flex flex-col gap-6\">\r\n+                    <SubHeader name=\"Suggestions d'offres\" icon=\"bi bi-robot\" />\r\n+                    {suggestions.length > 0 ? (\r\n+                        suggestions.map(suggestion => (\r\n+                            <LittleOfferCard key={suggestion.offerid} sug={suggestion}/>\r\n+                        ))\r\n+                    )\r\n+                        :\r\n+                        <div>\r\n+                            No offers\r\n+                        </div>\r\n+                    }\r\n+                </div>\r\n+            </div>\r\n+\r\n+        </section>\r\n+    )\r\n+}\r\n+export default NavPageLayout;\r\n+\r\n+\r\n+const DynamicLeftContent = ({ currentLocation }) => {\r\n+    const { friends, users } = useApp();\r\n+\r\n+    switch (currentLocation) {\r\n+\r\n+        case NAVIGATIONS.home:\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Followed People\" icon=\"bi bi-person\" />\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                        name={friend.firstname + \" \" + friend.lastname}\r\n+                                        image={SERVERLINK + \"/\" + friend.profileimage}\r\n+                                    />\r\n+\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+\r\n+        case NAVIGATIONS.friend:\r\n+            return <>\r\n+                <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\" />\r\n+                <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n+                    {\r\n+                        users.length > 0 ?\r\n+                            users.map(us => (\r\n+                                <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n+                                    account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n+                                    image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false} />\r\n+                            )) :\r\n+                            <div>Pas d amis</div>\r\n+                    }\r\n+                </div>\r\n+            </>\r\n+\r\n+        default:\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Amis\" icon=\"bi bi-person\" />\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                        name={friend.firstname + \" \" + friend.lastname}\r\n+                                        image={SERVERLINK + \"/\" + friend.profileimage} />\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+    }\r\n+}\r\n+\r\n+const DynamicRightContent = () => {\r\n+\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722269801087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,10 +53,10 @@\n                 className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n                 <div className=\"flex flex-col gap-4 w-full\">\r\n                     <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\" />\r\n                     {\r\n-                        suggestions.length > 0 ? (\r\n-                            suggestions.map(suggestion =>\r\n+                        saved.length > 0 ? (\r\n+                            saved.map(suggestion =>\r\n                             (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n                                 title={suggestion.title} depart={suggestion.depart}\r\n                                 destination={suggestion.dest}\r\n                                 scheduleddate={suggestion.sheduleddate} />)\r\n@@ -150,775 +150,5 @@\n }\r\n \r\n const DynamicRightContent = () => {\r\n \r\n-}\n-import { Outlet, useLocation } from \"react-router-dom\";\r\n-import { ProfileLeft } from \"../components/pages/ProfileLeft.jsx\";\r\n-import { SubHeader } from \"../components/pages/SubHeader.jsx\";\r\n-import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n-import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n-import { Notification } from \"../components/pages/Notification.jsx\";\r\n-import { useAuth } from \"../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../constants/index.js\";\r\n-import { useApp } from \"../context/AppProvider.jsx\";\r\n-import { useEffect } from \"react\";\r\n-import { NAVIGATIONS } from \"../constants/home.js\";\r\n-import { Icon } from \"../styles/components.js\";\r\n-import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n-\r\n-const NavPageLayout = () => {\r\n-    const { personalInformation } = useAuth();\r\n-    const user = personalInformation;\r\n-\r\n-    const pathname = useLocation().pathname;\r\n-\r\n-    const { handleFriends, handleOfferSuggestion, suggestions, handleOffersSaved, handleOffersForUser,  } = useApp();\r\n-\r\n-    useEffect(() => {\r\n-        handleOfferSuggestion();\r\n-        handleOffersSaved();\r\n-        handleOffersForUser();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n-            {/*Left subNav*/}\r\n-            <div className=\"fixed bottom-10 right-[20%]\">\r\n-                <Icon icon=\"bi bi-briefcase\" />\r\n-            </div>\r\n-            <div\r\n-                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n-                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n-                    account={user?.accounttype} />\r\n-                <div className=\"flex flex-col gap-3 w-full\">\r\n-                    <DynamicLeftContent currentLocation={pathname} />\r\n-                </div>\r\n-\r\n-            </div>\r\n-\r\n-            {/*Center */}\r\n-            <div\r\n-                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n-                <Outlet />\r\n-            </div>\r\n-\r\n-            {/*Right subNav*/}\r\n-            <div\r\n-                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n-                <div className=\"flex flex-col gap-4 w-full\">\r\n-                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\" />\r\n-                    {\r\n-                        suggestions.length > 0 ? (\r\n-                            suggestions.map(suggestion =>\r\n-                            (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n-                                title={suggestion.title} depart={suggestion.depart}\r\n-                                destination={suggestion.dest}\r\n-                                scheduleddate={suggestion.sheduleddate} />)\r\n-                            )\r\n-                        ) : (\r\n-                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n-                                de sauvegarde pour l'instant</p>\r\n-                        )\r\n-                    }\r\n-                </div>\r\n-                <div className=\"flex flex-col gap-6\">\r\n-                    <SubHeader name=\"Suggestions d'offres\" icon=\"bi bi-robot\" />\r\n-                    {suggestions.length > 0 ? (\r\n-                        suggestions.map(suggestion => (\r\n-                            <LittleOfferCard key={suggestion.offerid} sug={suggestion}/>\r\n-                        ))\r\n-                    )\r\n-                        :\r\n-                        <div>\r\n-                            No offers\r\n-                        </div>\r\n-                    }\r\n-                </div>\r\n-            </div>\r\n-\r\n-        </section>\r\n-    )\r\n-}\r\n-export default NavPageLayout;\r\n-\r\n-\r\n-const DynamicLeftContent = ({ currentLocation }) => {\r\n-    const { friends, users } = useApp();\r\n-\r\n-    switch (currentLocation) {\r\n-\r\n-        case NAVIGATIONS.home:\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Followed People\" icon=\"bi bi-person\" />\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                        name={friend.firstname + \" \" + friend.lastname}\r\n-                                        image={SERVERLINK + \"/\" + friend.profileimage}\r\n-                                    />\r\n-\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-\r\n-        case NAVIGATIONS.friend:\r\n-            return <>\r\n-                <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\" />\r\n-                <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n-                    {\r\n-                        users.length > 0 ?\r\n-                            users.map(us => (\r\n-                                <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n-                                    account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n-                                    image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false} />\r\n-                            )) :\r\n-                            <div>Pas d amis</div>\r\n-                    }\r\n-                </div>\r\n-            </>\r\n-\r\n-        default:\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Amis\" icon=\"bi bi-person\" />\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                        name={friend.firstname + \" \" + friend.lastname}\r\n-                                        image={SERVERLINK + \"/\" + friend.profileimage} />\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-    }\r\n-}\r\n-\r\n-const DynamicRightContent = () => {\r\n-\r\n-}\n-import { Outlet, useLocation } from \"react-router-dom\";\r\n-import { ProfileLeft } from \"../components/pages/ProfileLeft.jsx\";\r\n-import { SubHeader } from \"../components/pages/SubHeader.jsx\";\r\n-import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n-import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n-import { Notification } from \"../components/pages/Notification.jsx\";\r\n-import { useAuth } from \"../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../constants/index.js\";\r\n-import { useApp } from \"../context/AppProvider.jsx\";\r\n-import { useEffect } from \"react\";\r\n-import { NAVIGATIONS } from \"../constants/home.js\";\r\n-import { Icon } from \"../styles/components.js\";\r\n-import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n-\r\n-const NavPageLayout = () => {\r\n-    const { personalInformation } = useAuth();\r\n-    const user = personalInformation;\r\n-\r\n-    const pathname = useLocation().pathname;\r\n-\r\n-    const { handleFriends, handleOfferSuggestion, suggestions, handleOffersSaved, handleOffersForUser } = useApp();\r\n-\r\n-    useEffect(() => {\r\n-        handleOfferSuggestion();\r\n-        handleOffersSaved();\r\n-        handleOffersForUser();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n-            {/*Left subNav*/}\r\n-            <div className=\"fixed bottom-10 right-[20%]\">\r\n-                <Icon icon=\"bi bi-briefcase\" />\r\n-            </div>\r\n-            <div\r\n-                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n-                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n-                    account={user?.accounttype} />\r\n-                <div className=\"flex flex-col gap-3 w-full\">\r\n-                    <DynamicLeftContent currentLocation={pathname} />\r\n-                </div>\r\n-\r\n-            </div>\r\n-\r\n-            {/*Center */}\r\n-            <div\r\n-                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n-                <Outlet />\r\n-            </div>\r\n-\r\n-            {/*Right subNav*/}\r\n-            <div\r\n-                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n-                <div className=\"flex flex-col gap-4 w-full\">\r\n-                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\" />\r\n-                    {\r\n-                        suggestions.length > 0 ? (\r\n-                            suggestions.map(suggestion =>\r\n-                            (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n-                                title={suggestion.title} depart={suggestion.depart}\r\n-                                destination={suggestion.dest}\r\n-                                scheduleddate={suggestion.sheduleddate} />)\r\n-                            )\r\n-                        ) : (\r\n-                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n-                                de sauvegarde pour l'instant</p>\r\n-                        )\r\n-                    }\r\n-                </div>\r\n-                <div className=\"flex flex-col gap-6\">\r\n-                    <SubHeader name=\"Suggestions d'offres\" icon=\"bi bi-robot\" />\r\n-                    {suggestions.length > 0 ? (\r\n-                        suggestions.map(suggestion => (\r\n-                            <LittleOfferCard key={suggestion.offerid} sug={suggestion}/>\r\n-                        ))\r\n-                    )\r\n-                        :\r\n-                        <div>\r\n-                            No offers\r\n-                        </div>\r\n-                    }\r\n-                </div>\r\n-            </div>\r\n-\r\n-        </section>\r\n-    )\r\n-}\r\n-export default NavPageLayout;\r\n-\r\n-\r\n-const DynamicLeftContent = ({ currentLocation }) => {\r\n-    const { friends, users } = useApp();\r\n-\r\n-    switch (currentLocation) {\r\n-\r\n-        case NAVIGATIONS.home:\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Followed People\" icon=\"bi bi-person\" />\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                        name={friend.firstname + \" \" + friend.lastname}\r\n-                                        image={SERVERLINK + \"/\" + friend.profileimage}\r\n-                                    />\r\n-\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-\r\n-        case NAVIGATIONS.friend:\r\n-            return <>\r\n-                <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\" />\r\n-                <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n-                    {\r\n-                        users.length > 0 ?\r\n-                            users.map(us => (\r\n-                                <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n-                                    account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n-                                    image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false} />\r\n-                            )) :\r\n-                            <div>Pas d amis</div>\r\n-                    }\r\n-                </div>\r\n-            </>\r\n-\r\n-        default:\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Amis\" icon=\"bi bi-person\" />\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                        name={friend.firstname + \" \" + friend.lastname}\r\n-                                        image={SERVERLINK + \"/\" + friend.profileimage} />\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-    }\r\n-}\r\n-\r\n-const DynamicRightContent = () => {\r\n-\r\n-}\n-import { Outlet, useLocation } from \"react-router-dom\";\r\n-import { ProfileLeft } from \"../components/pages/ProfileLeft.jsx\";\r\n-import { SubHeader } from \"../components/pages/SubHeader.jsx\";\r\n-import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n-import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n-import { Notification } from \"../components/pages/Notification.jsx\";\r\n-import { useAuth } from \"../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../constants/index.js\";\r\n-import { useApp } from \"../context/AppProvider.jsx\";\r\n-import { useEffect } from \"react\";\r\n-import { NAVIGATIONS } from \"../constants/home.js\";\r\n-import { Icon } from \"../styles/components.js\";\r\n-import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n-\r\n-const NavPageLayout = () => {\r\n-    const { personalInformation } = useAuth();\r\n-    const user = personalInformation;\r\n-\r\n-    const pathname = useLocation().pathname;\r\n-\r\n-    const { handleFriends, handleOfferSuggestion, suggestions, handleOffersSaved, ha } = useApp();\r\n-\r\n-    useEffect(() => {\r\n-        handleOfferSuggestion();\r\n-        handleOffersSaved()\r\n-        handleOffersForUser();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n-            {/*Left subNav*/}\r\n-            <div className=\"fixed bottom-10 right-[20%]\">\r\n-                <Icon icon=\"bi bi-briefcase\" />\r\n-            </div>\r\n-            <div\r\n-                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n-                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n-                    account={user?.accounttype} />\r\n-                <div className=\"flex flex-col gap-3 w-full\">\r\n-                    <DynamicLeftContent currentLocation={pathname} />\r\n-                </div>\r\n-\r\n-            </div>\r\n-\r\n-            {/*Center */}\r\n-            <div\r\n-                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n-                <Outlet />\r\n-            </div>\r\n-\r\n-            {/*Right subNav*/}\r\n-            <div\r\n-                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n-                <div className=\"flex flex-col gap-4 w-full\">\r\n-                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\" />\r\n-                    {\r\n-                        suggestions.length > 0 ? (\r\n-                            suggestions.map(suggestion =>\r\n-                            (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n-                                title={suggestion.title} depart={suggestion.depart}\r\n-                                destination={suggestion.dest}\r\n-                                scheduleddate={suggestion.sheduleddate} />)\r\n-                            )\r\n-                        ) : (\r\n-                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n-                                de sauvegarde pour l'instant</p>\r\n-                        )\r\n-                    }\r\n-                </div>\r\n-                <div className=\"flex flex-col gap-6\">\r\n-                    <SubHeader name=\"Suggestions d'offres\" icon=\"bi bi-robot\" />\r\n-                    {suggestions.length > 0 ? (\r\n-                        suggestions.map(suggestion => (\r\n-                            <LittleOfferCard key={suggestion.offerid} sug={suggestion}/>\r\n-                        ))\r\n-                    )\r\n-                        :\r\n-                        <div>\r\n-                            No offers\r\n-                        </div>\r\n-                    }\r\n-                </div>\r\n-            </div>\r\n-\r\n-        </section>\r\n-    )\r\n-}\r\n-export default NavPageLayout;\r\n-\r\n-\r\n-const DynamicLeftContent = ({ currentLocation }) => {\r\n-    const { friends, users } = useApp();\r\n-\r\n-    switch (currentLocation) {\r\n-\r\n-        case NAVIGATIONS.home:\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Followed People\" icon=\"bi bi-person\" />\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                        name={friend.firstname + \" \" + friend.lastname}\r\n-                                        image={SERVERLINK + \"/\" + friend.profileimage}\r\n-                                    />\r\n-\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-\r\n-        case NAVIGATIONS.friend:\r\n-            return <>\r\n-                <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\" />\r\n-                <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n-                    {\r\n-                        users.length > 0 ?\r\n-                            users.map(us => (\r\n-                                <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n-                                    account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n-                                    image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false} />\r\n-                            )) :\r\n-                            <div>Pas d amis</div>\r\n-                    }\r\n-                </div>\r\n-            </>\r\n-\r\n-        default:\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Amis\" icon=\"bi bi-person\" />\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                        name={friend.firstname + \" \" + friend.lastname}\r\n-                                        image={SERVERLINK + \"/\" + friend.profileimage} />\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-    }\r\n-}\r\n-\r\n-const DynamicRightContent = () => {\r\n-\r\n-}\n-import { Outlet, useLocation } from \"react-router-dom\";\r\n-import { ProfileLeft } from \"../components/pages/ProfileLeft.jsx\";\r\n-import { SubHeader } from \"../components/pages/SubHeader.jsx\";\r\n-import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n-import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n-import { Notification } from \"../components/pages/Notification.jsx\";\r\n-import { useAuth } from \"../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../constants/index.js\";\r\n-import { useApp } from \"../context/AppProvider.jsx\";\r\n-import { useEffect } from \"react\";\r\n-import { NAVIGATIONS } from \"../constants/home.js\";\r\n-import { Icon } from \"../styles/components.js\";\r\n-import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n-\r\n-const NavPageLayout = () => {\r\n-    const { personalInformation } = useAuth();\r\n-    const user = personalInformation;\r\n-\r\n-    const pathname = useLocation().pathname;\r\n-\r\n-    const { handleFriends, handleOfferSuggestion, suggestions, hand;e } = useApp();\r\n-\r\n-    useEffect(() => {\r\n-        handleOfferSuggestion();\r\n-        handleOffersSaved()\r\n-        handleOffersForUser();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n-            {/*Left subNav*/}\r\n-            <div className=\"fixed bottom-10 right-[20%]\">\r\n-                <Icon icon=\"bi bi-briefcase\" />\r\n-            </div>\r\n-            <div\r\n-                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n-                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n-                    account={user?.accounttype} />\r\n-                <div className=\"flex flex-col gap-3 w-full\">\r\n-                    <DynamicLeftContent currentLocation={pathname} />\r\n-                </div>\r\n-\r\n-            </div>\r\n-\r\n-            {/*Center */}\r\n-            <div\r\n-                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n-                <Outlet />\r\n-            </div>\r\n-\r\n-            {/*Right subNav*/}\r\n-            <div\r\n-                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n-                <div className=\"flex flex-col gap-4 w-full\">\r\n-                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\" />\r\n-                    {\r\n-                        suggestions.length > 0 ? (\r\n-                            suggestions.map(suggestion =>\r\n-                            (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n-                                title={suggestion.title} depart={suggestion.depart}\r\n-                                destination={suggestion.dest}\r\n-                                scheduleddate={suggestion.sheduleddate} />)\r\n-                            )\r\n-                        ) : (\r\n-                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n-                                de sauvegarde pour l'instant</p>\r\n-                        )\r\n-                    }\r\n-                </div>\r\n-                <div className=\"flex flex-col gap-6\">\r\n-                    <SubHeader name=\"Suggestions d'offres\" icon=\"bi bi-robot\" />\r\n-                    {suggestions.length > 0 ? (\r\n-                        suggestions.map(suggestion => (\r\n-                            <LittleOfferCard key={suggestion.offerid} sug={suggestion}/>\r\n-                        ))\r\n-                    )\r\n-                        :\r\n-                        <div>\r\n-                            No offers\r\n-                        </div>\r\n-                    }\r\n-                </div>\r\n-            </div>\r\n-\r\n-        </section>\r\n-    )\r\n-}\r\n-export default NavPageLayout;\r\n-\r\n-\r\n-const DynamicLeftContent = ({ currentLocation }) => {\r\n-    const { friends, users } = useApp();\r\n-\r\n-    switch (currentLocation) {\r\n-\r\n-        case NAVIGATIONS.home:\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Followed People\" icon=\"bi bi-person\" />\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                        name={friend.firstname + \" \" + friend.lastname}\r\n-                                        image={SERVERLINK + \"/\" + friend.profileimage}\r\n-                                    />\r\n-\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-\r\n-        case NAVIGATIONS.friend:\r\n-            return <>\r\n-                <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\" />\r\n-                <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n-                    {\r\n-                        users.length > 0 ?\r\n-                            users.map(us => (\r\n-                                <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n-                                    account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n-                                    image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false} />\r\n-                            )) :\r\n-                            <div>Pas d amis</div>\r\n-                    }\r\n-                </div>\r\n-            </>\r\n-\r\n-        default:\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Amis\" icon=\"bi bi-person\" />\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                        name={friend.firstname + \" \" + friend.lastname}\r\n-                                        image={SERVERLINK + \"/\" + friend.profileimage} />\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-    }\r\n-}\r\n-\r\n-const DynamicRightContent = () => {\r\n-\r\n-}\n-import { Outlet, useLocation } from \"react-router-dom\";\r\n-import { ProfileLeft } from \"../components/pages/ProfileLeft.jsx\";\r\n-import { SubHeader } from \"../components/pages/SubHeader.jsx\";\r\n-import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n-import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n-import { Notification } from \"../components/pages/Notification.jsx\";\r\n-import { useAuth } from \"../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../constants/index.js\";\r\n-import { useApp } from \"../context/AppProvider.jsx\";\r\n-import { useEffect } from \"react\";\r\n-import { NAVIGATIONS } from \"../constants/home.js\";\r\n-import { Icon } from \"../styles/components.js\";\r\n-import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n-\r\n-const NavPageLayout = () => {\r\n-    const { personalInformation } = useAuth();\r\n-    const user = personalInformation;\r\n-\r\n-    const pathname = useLocation().pathname;\r\n-\r\n-    const { handleFriends, handleOfferSuggestion, suggestions } = useApp();\r\n-\r\n-    useEffect(() => {\r\n-        handleOfferSuggestion();\r\n-        handleOffersSaved()\r\n-        handleOffersForUser();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n-            {/*Left subNav*/}\r\n-            <div className=\"fixed bottom-10 right-[20%]\">\r\n-                <Icon icon=\"bi bi-briefcase\" />\r\n-            </div>\r\n-            <div\r\n-                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n-                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n-                    account={user?.accounttype} />\r\n-                <div className=\"flex flex-col gap-3 w-full\">\r\n-                    <DynamicLeftContent currentLocation={pathname} />\r\n-                </div>\r\n-\r\n-            </div>\r\n-\r\n-            {/*Center */}\r\n-            <div\r\n-                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n-                <Outlet />\r\n-            </div>\r\n-\r\n-            {/*Right subNav*/}\r\n-            <div\r\n-                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n-                <div className=\"flex flex-col gap-4 w-full\">\r\n-                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\" />\r\n-                    {\r\n-                        suggestions.length > 0 ? (\r\n-                            suggestions.map(suggestion =>\r\n-                            (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n-                                title={suggestion.title} depart={suggestion.depart}\r\n-                                destination={suggestion.dest}\r\n-                                scheduleddate={suggestion.sheduleddate} />)\r\n-                            )\r\n-                        ) : (\r\n-                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n-                                de sauvegarde pour l'instant</p>\r\n-                        )\r\n-                    }\r\n-                </div>\r\n-                <div className=\"flex flex-col gap-6\">\r\n-                    <SubHeader name=\"Suggestions d'offres\" icon=\"bi bi-robot\" />\r\n-                    {suggestions.length > 0 ? (\r\n-                        suggestions.map(suggestion => (\r\n-                            <LittleOfferCard key={suggestion.offerid} sug={suggestion}/>\r\n-                        ))\r\n-                    )\r\n-                        :\r\n-                        <div>\r\n-                            No offers\r\n-                        </div>\r\n-                    }\r\n-                </div>\r\n-            </div>\r\n-\r\n-        </section>\r\n-    )\r\n-}\r\n-export default NavPageLayout;\r\n-\r\n-\r\n-const DynamicLeftContent = ({ currentLocation }) => {\r\n-    const { friends, users } = useApp();\r\n-\r\n-    switch (currentLocation) {\r\n-\r\n-        case NAVIGATIONS.home:\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Followed People\" icon=\"bi bi-person\" />\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                        name={friend.firstname + \" \" + friend.lastname}\r\n-                                        image={SERVERLINK + \"/\" + friend.profileimage}\r\n-                                    />\r\n-\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-\r\n-        case NAVIGATIONS.friend:\r\n-            return <>\r\n-                <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\" />\r\n-                <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n-                    {\r\n-                        users.length > 0 ?\r\n-                            users.map(us => (\r\n-                                <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n-                                    account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n-                                    image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false} />\r\n-                            )) :\r\n-                            <div>Pas d amis</div>\r\n-                    }\r\n-                </div>\r\n-            </>\r\n-\r\n-        default:\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Amis\" icon=\"bi bi-person\" />\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                        name={friend.firstname + \" \" + friend.lastname}\r\n-                                        image={SERVERLINK + \"/\" + friend.profileimage} />\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-    }\r\n-}\r\n-\r\n-const DynamicRightContent = () => {\r\n-\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722269818671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,14 +53,14 @@\n                 className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n                 <div className=\"flex flex-col gap-4 w-full\">\r\n                     <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\" />\r\n                     {\r\n-                        saved.length > 0 ? (\r\n-                            saved.map(suggestion =>\r\n-                            (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n-                                title={suggestion.title} depart={suggestion.depart}\r\n-                                destination={suggestion.dest}\r\n-                                scheduleddate={suggestion.sheduleddate} />)\r\n+                        savedOffers.length > 0 ? (\r\n+                            savedOffers.map(saved =>\r\n+                            (<SavePublication key={saved.offerid} capacity={saved.capacity}\r\n+                                title={saved.title} depart={saved.depart}\r\n+                                destination={saved.dest}\r\n+                                scheduleddate={saved.sheduleddate} />)\r\n                             )\r\n                         ) : (\r\n                             <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n                                 de sauvegarde pour l'instant</p>\r\n"
                },
                {
                    "date": 1722269830859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,154 @@\n+import { Outlet, useLocation } from \"react-router-dom\";\r\n+import { ProfileLeft } from \"../components/pages/ProfileLeft.jsx\";\r\n+import { SubHeader } from \"../components/pages/SubHeader.jsx\";\r\n+import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n+import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n+import { Notification } from \"../components/pages/Notification.jsx\";\r\n+import { useAuth } from \"../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../constants/index.js\";\r\n+import { useApp } from \"../context/AppProvider.jsx\";\r\n+import { useEffect } from \"react\";\r\n+import { NAVIGATIONS } from \"../constants/home.js\";\r\n+import { Icon } from \"../styles/components.js\";\r\n+import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n+\r\n+const NavPageLayout = () => {\r\n+    const { personalInformation } = useAuth();\r\n+    const user = personalInformation;\r\n+\r\n+    const pathname = useLocation().pathname;\r\n+\r\n+    const { handleFriends, handleOfferSuggestion, suggestions, handleOffersSaved, handleOffersForUser, savedOffers } = useApp();\r\n+\r\n+    useEffect(() => {\r\n+        handleOfferSuggestion();\r\n+        handleOffersSaved();\r\n+        handleOffersForUser();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n+            {/*Left subNav*/}\r\n+            <div className=\"fixed bottom-10 right-[20%]\">\r\n+                <Icon icon=\"bi bi-briefcase\" />\r\n+            </div>\r\n+            <div\r\n+                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n+                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n+                    account={user?.accounttype} />\r\n+                <div className=\"flex flex-col gap-3 w-full\">\r\n+                    <DynamicLeftContent currentLocation={pathname} />\r\n+                </div>\r\n+\r\n+            </div>\r\n+\r\n+            {/*Center */}\r\n+            <div\r\n+                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n+                <Outlet />\r\n+            </div>\r\n+\r\n+            {/*Right subNav*/}\r\n+            <div\r\n+                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n+                <div className=\"flex flex-col gap-4 w-full\">\r\n+                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\" />\r\n+                    {\r\n+                        savedOffers.length > 0 ? (\r\n+                            savedOffers.map(savedOffer =>\r\n+                            (<SavePublication key={savedOffer.offerid} capacity={savedOffer.capacity}\r\n+                                title={savedOffer.title} depart={savedOffer.depart}\r\n+                                destination={savedOffer.dest}\r\n+                                scheduleddate={savedOffer.sheduleddate} />)\r\n+                            )\r\n+                        ) : (\r\n+                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n+                                de sauvegarde pour l'instant</p>\r\n+                        )\r\n+                    }\r\n+                </div>\r\n+                <div className=\"flex flex-col gap-6\">\r\n+                    <SubHeader name=\"Suggestions d'offres\" icon=\"bi bi-robot\" />\r\n+                    {suggestions.length > 0 ? (\r\n+                        suggestions.map(suggestion => (\r\n+                            <LittleOfferCard key={suggestion.offerid} sug={suggestion}/>\r\n+                        ))\r\n+                    )\r\n+                        :\r\n+                        <div>\r\n+                            No offers\r\n+                        </div>\r\n+                    }\r\n+                </div>\r\n+            </div>\r\n+\r\n+        </section>\r\n+    )\r\n+}\r\n+export default NavPageLayout;\r\n+\r\n+\r\n+const DynamicLeftContent = ({ currentLocation }) => {\r\n+    const { friends, users } = useApp();\r\n+\r\n+    switch (currentLocation) {\r\n+\r\n+        case NAVIGATIONS.home:\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Followed People\" icon=\"bi bi-person\" />\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                        name={friend.firstname + \" \" + friend.lastname}\r\n+                                        image={SERVERLINK + \"/\" + friend.profileimage}\r\n+                                    />\r\n+\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+\r\n+        case NAVIGATIONS.friend:\r\n+            return <>\r\n+                <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\" />\r\n+                <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n+                    {\r\n+                        users.length > 0 ?\r\n+                            users.map(us => (\r\n+                                <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n+                                    account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n+                                    image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false} />\r\n+                            )) :\r\n+                            <div>Pas d amis</div>\r\n+                    }\r\n+                </div>\r\n+            </>\r\n+\r\n+        default:\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Amis\" icon=\"bi bi-person\" />\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                        name={friend.firstname + \" \" + friend.lastname}\r\n+                                        image={SERVERLINK + \"/\" + friend.profileimage} />\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+    }\r\n+}\r\n+\r\n+const DynamicRightContent = () => {\r\n+\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722269871304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n                             savedOffers.map(savedOffer =>\r\n                             (<SavePublication key={savedOffer.offerid} capacity={savedOffer.capacity}\r\n                                 title={savedOffer.title} depart={savedOffer.depart}\r\n                                 destination={savedOffer.dest}\r\n-                                scheduleddate={savedOffer.sheduleddate} />)\r\n+                                scheduleddate={savedOffer.scheduleddate} />)\r\n                             )\r\n                         ) : (\r\n                             <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n                                 de sauvegarde pour l'instant</p>\r\n@@ -150,159 +150,5 @@\n }\r\n \r\n const DynamicRightContent = () => {\r\n \r\n-}\n-import { Outlet, useLocation } from \"react-router-dom\";\r\n-import { ProfileLeft } from \"../components/pages/ProfileLeft.jsx\";\r\n-import { SubHeader } from \"../components/pages/SubHeader.jsx\";\r\n-import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n-import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n-import { Notification } from \"../components/pages/Notification.jsx\";\r\n-import { useAuth } from \"../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../constants/index.js\";\r\n-import { useApp } from \"../context/AppProvider.jsx\";\r\n-import { useEffect } from \"react\";\r\n-import { NAVIGATIONS } from \"../constants/home.js\";\r\n-import { Icon } from \"../styles/components.js\";\r\n-import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n-\r\n-const NavPageLayout = () => {\r\n-    const { personalInformation } = useAuth();\r\n-    const user = personalInformation;\r\n-\r\n-    const pathname = useLocation().pathname;\r\n-\r\n-    const { handleFriends, handleOfferSuggestion, suggestions, handleOffersSaved, handleOffersForUser, savedOffers } = useApp();\r\n-\r\n-    useEffect(() => {\r\n-        handleOfferSuggestion();\r\n-        handleOffersSaved();\r\n-        handleOffersForUser();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n-            {/*Left subNav*/}\r\n-            <div className=\"fixed bottom-10 right-[20%]\">\r\n-                <Icon icon=\"bi bi-briefcase\" />\r\n-            </div>\r\n-            <div\r\n-                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n-                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n-                    account={user?.accounttype} />\r\n-                <div className=\"flex flex-col gap-3 w-full\">\r\n-                    <DynamicLeftContent currentLocation={pathname} />\r\n-                </div>\r\n-\r\n-            </div>\r\n-\r\n-            {/*Center */}\r\n-            <div\r\n-                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n-                <Outlet />\r\n-            </div>\r\n-\r\n-            {/*Right subNav*/}\r\n-            <div\r\n-                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n-                <div className=\"flex flex-col gap-4 w-full\">\r\n-                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\" />\r\n-                    {\r\n-                        savedOffers.length > 0 ? (\r\n-                            savedOffers.map(saved =>\r\n-                            (<SavePublication key={saved.offerid} capacity={saved.capacity}\r\n-                                title={saved.title} depart={saved.depart}\r\n-                                destination={saved.dest}\r\n-                                scheduleddate={saved.sheduleddate} />)\r\n-                            )\r\n-                        ) : (\r\n-                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n-                                de sauvegarde pour l'instant</p>\r\n-                        )\r\n-                    }\r\n-                </div>\r\n-                <div className=\"flex flex-col gap-6\">\r\n-                    <SubHeader name=\"Suggestions d'offres\" icon=\"bi bi-robot\" />\r\n-                    {suggestions.length > 0 ? (\r\n-                        suggestions.map(suggestion => (\r\n-                            <LittleOfferCard key={suggestion.offerid} sug={suggestion}/>\r\n-                        ))\r\n-                    )\r\n-                        :\r\n-                        <div>\r\n-                            No offers\r\n-                        </div>\r\n-                    }\r\n-                </div>\r\n-            </div>\r\n-\r\n-        </section>\r\n-    )\r\n-}\r\n-export default NavPageLayout;\r\n-\r\n-\r\n-const DynamicLeftContent = ({ currentLocation }) => {\r\n-    const { friends, users } = useApp();\r\n-\r\n-    switch (currentLocation) {\r\n-\r\n-        case NAVIGATIONS.home:\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Followed People\" icon=\"bi bi-person\" />\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                        name={friend.firstname + \" \" + friend.lastname}\r\n-                                        image={SERVERLINK + \"/\" + friend.profileimage}\r\n-                                    />\r\n-\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-\r\n-        case NAVIGATIONS.friend:\r\n-            return <>\r\n-                <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\" />\r\n-                <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n-                    {\r\n-                        users.length > 0 ?\r\n-                            users.map(us => (\r\n-                                <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n-                                    account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n-                                    image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false} />\r\n-                            )) :\r\n-                            <div>Pas d amis</div>\r\n-                    }\r\n-                </div>\r\n-            </>\r\n-\r\n-        default:\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Amis\" icon=\"bi bi-person\" />\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                        name={friend.firstname + \" \" + friend.lastname}\r\n-                                        image={SERVERLINK + \"/\" + friend.profileimage} />\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-    }\r\n-}\r\n-\r\n-const DynamicRightContent = () => {\r\n-\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722269971737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,154 @@\n+import { Outlet, useLocation } from \"react-router-dom\";\r\n+import { ProfileLeft } from \"../components/pages/ProfileLeft.jsx\";\r\n+import { SubHeader } from \"../components/pages/SubHeader.jsx\";\r\n+import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n+import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n+import { Notification } from \"../components/pages/Notification.jsx\";\r\n+import { useAuth } from \"../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../constants/index.js\";\r\n+import { useApp } from \"../context/AppProvider.jsx\";\r\n+import { useEffect } from \"react\";\r\n+import { NAVIGATIONS } from \"../constants/home.js\";\r\n+import { Icon } from \"../styles/components.js\";\r\n+import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n+\r\n+const NavPageLayout = () => {\r\n+    const { personalInformation } = useAuth();\r\n+    const user = personalInformation;\r\n+\r\n+    const pathname = useLocation().pathname;\r\n+\r\n+    const { handleFriends, handleOfferSuggestion, suggestions, handleOffersSaved, handleOffersForUser, savedOffers } = useApp();\r\n+\r\n+    useEffect(() => {\r\n+        handleOfferSuggestion();\r\n+        handleOffersSaved();\r\n+        handleOffersForUser();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n+            {/*Left subNav*/}\r\n+            <div className=\"fixed bottom-10 right-[20%]\">\r\n+                <Icon icon=\"bi bi-briefcase\" />\r\n+            </div>\r\n+            <div\r\n+                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n+                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n+                    account={user?.accounttype} />\r\n+                <div className=\"flex flex-col gap-3 w-full\">\r\n+                    <DynamicLeftContent currentLocation={pathname} />\r\n+                </div>\r\n+\r\n+            </div>\r\n+\r\n+            {/*Center */}\r\n+            <div\r\n+                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n+                <Outlet />\r\n+            </div>\r\n+\r\n+            {/*Right subNav*/}\r\n+            <div\r\n+                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n+                <div className=\"flex flex-col gap-4 w-full\">\r\n+                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\" />\r\n+                    {\r\n+                        savedOffers.length > 0 ? (\r\n+                            savedOffers.map(savedOffer =>\r\n+                            (<SavePublication key={savedOffer.offerid} capacity={savedOffer.capacity}\r\n+                                title={savedOffer.title} depart={savedOffer.depart}\r\n+                                destination={savedOffer.dest}\r\n+                                scheduleddate={savedOffer.scheduleddate} />)\r\n+                            )\r\n+                        ) : (\r\n+                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n+                                de sauvegarde pour l'instant</p>\r\n+                        )\r\n+                    }\r\n+                </div>\r\n+                <div className=\"flex flex-col gap-6\">\r\n+                    <SubHeader name=\"Suggestions d'offres\" icon=\"bi bi-robot\" />\r\n+                    {suggestions.length > 0 ? (\r\n+                        suggestions.map(suggestion => (\r\n+                            <LittleOfferCard key={suggestion.offerid} sug={suggestion}/>\r\n+                        ))\r\n+                    )\r\n+                        :\r\n+                        <div>\r\n+                            No offers\r\n+                        </div>\r\n+                    }\r\n+                </div>\r\n+            </div>\r\n+\r\n+        </section>\r\n+    )\r\n+}\r\n+export default NavPageLayout;\r\n+\r\n+\r\n+const DynamicLeftContent = ({ currentLocation }) => {\r\n+    const { friends, users } = useApp();\r\n+\r\n+    switch (currentLocation) {\r\n+\r\n+        case NAVIGATIONS.home:\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Followed People\" icon=\"bi bi-person\" />\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                        name={friend.firstname + \" \" + friend.lastname}\r\n+                                        image={SERVERLINK + \"/\" + friend.profileimage}\r\n+                                    />\r\n+\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+\r\n+        case NAVIGATIONS.friend:\r\n+            return <>\r\n+                <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\" />\r\n+                <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n+                    {\r\n+                        users.length > 0 ?\r\n+                            users.map(us => (\r\n+                                <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n+                                    account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n+                                    image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false} />\r\n+                            )) :\r\n+                            <div>Pas d amis</div>\r\n+                    }\r\n+                </div>\r\n+            </>\r\n+\r\n+        default:\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Amis\" icon=\"bi bi-person\" />\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                        name={friend.firstname + \" \" + friend.lastname}\r\n+                                        image={SERVERLINK + \"/\" + friend.profileimage} />\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+    }\r\n+}\r\n+\r\n+const DynamicRightContent = () => {\r\n+\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722332787631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n                 <div className=\"flex flex-col gap-6\">\r\n                     <SubHeader name=\"Suggestions d'offres\" icon=\"bi bi-robot\" />\r\n                     {suggestions.length > 0 ? (\r\n                         suggestions.map(suggestion => (\r\n-                            <LittleOfferCard key={suggestion.offerid} sug={suggestion}/>\r\n+                            <LittleOfferCard key={suggestion.offerid} sug={suggestion} saved/>\r\n                         ))\r\n                     )\r\n                         :\r\n                         <div>\r\n@@ -150,159 +150,5 @@\n }\r\n \r\n const DynamicRightContent = () => {\r\n \r\n-}\n-import { Outlet, useLocation } from \"react-router-dom\";\r\n-import { ProfileLeft } from \"../components/pages/ProfileLeft.jsx\";\r\n-import { SubHeader } from \"../components/pages/SubHeader.jsx\";\r\n-import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n-import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n-import { Notification } from \"../components/pages/Notification.jsx\";\r\n-import { useAuth } from \"../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../constants/index.js\";\r\n-import { useApp } from \"../context/AppProvider.jsx\";\r\n-import { useEffect } from \"react\";\r\n-import { NAVIGATIONS } from \"../constants/home.js\";\r\n-import { Icon } from \"../styles/components.js\";\r\n-import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n-\r\n-const NavPageLayout = () => {\r\n-    const { personalInformation } = useAuth();\r\n-    const user = personalInformation;\r\n-\r\n-    const pathname = useLocation().pathname;\r\n-\r\n-    const { handleFriends, handleOfferSuggestion, suggestions, handleOffersSaved, handleOffersForUser, savedOffers } = useApp();\r\n-\r\n-    useEffect(() => {\r\n-        handleOfferSuggestion();\r\n-        handleOffersSaved();\r\n-        handleOffersForUser();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n-            {/*Left subNav*/}\r\n-            <div className=\"fixed bottom-10 right-[20%]\">\r\n-                <Icon icon=\"bi bi-briefcase\" />\r\n-            </div>\r\n-            <div\r\n-                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n-                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n-                    account={user?.accounttype} />\r\n-                <div className=\"flex flex-col gap-3 w-full\">\r\n-                    <DynamicLeftContent currentLocation={pathname} />\r\n-                </div>\r\n-\r\n-            </div>\r\n-\r\n-            {/*Center */}\r\n-            <div\r\n-                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n-                <Outlet />\r\n-            </div>\r\n-\r\n-            {/*Right subNav*/}\r\n-            <div\r\n-                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n-                <div className=\"flex flex-col gap-4 w-full\">\r\n-                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\" />\r\n-                    {\r\n-                        savedOffers.length > 0 ? (\r\n-                            savedOffers.map(savedOffer =>\r\n-                            (<SavePublication key={savedOffer.offerid} capacity={savedOffer.capacity}\r\n-                                title={savedOffer.title} depart={savedOffer.depart}\r\n-                                destination={savedOffer.dest}\r\n-                                scheduleddate={savedOffer.scheduleddate} />)\r\n-                            )\r\n-                        ) : (\r\n-                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n-                                de sauvegarde pour l'instant</p>\r\n-                        )\r\n-                    }\r\n-                </div>\r\n-                <div className=\"flex flex-col gap-6\">\r\n-                    <SubHeader name=\"Suggestions d'offres\" icon=\"bi bi-robot\" />\r\n-                    {suggestions.length > 0 ? (\r\n-                        suggestions.map(suggestion => (\r\n-                            <LittleOfferCard key={suggestion.offerid} sug={suggestion}/>\r\n-                        ))\r\n-                    )\r\n-                        :\r\n-                        <div>\r\n-                            No offers\r\n-                        </div>\r\n-                    }\r\n-                </div>\r\n-            </div>\r\n-\r\n-        </section>\r\n-    )\r\n-}\r\n-export default NavPageLayout;\r\n-\r\n-\r\n-const DynamicLeftContent = ({ currentLocation }) => {\r\n-    const { friends, users } = useApp();\r\n-\r\n-    switch (currentLocation) {\r\n-\r\n-        case NAVIGATIONS.home:\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Followed People\" icon=\"bi bi-person\" />\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                        name={friend.firstname + \" \" + friend.lastname}\r\n-                                        image={SERVERLINK + \"/\" + friend.profileimage}\r\n-                                    />\r\n-\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-\r\n-        case NAVIGATIONS.friend:\r\n-            return <>\r\n-                <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\" />\r\n-                <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n-                    {\r\n-                        users.length > 0 ?\r\n-                            users.map(us => (\r\n-                                <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n-                                    account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n-                                    image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false} />\r\n-                            )) :\r\n-                            <div>Pas d amis</div>\r\n-                    }\r\n-                </div>\r\n-            </>\r\n-\r\n-        default:\r\n-            return (\r\n-                <>\r\n-                    <SubHeader name=\"Amis\" icon=\"bi bi-person\" />\r\n-                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n-                        {\r\n-                            friends.length > 0 ?\r\n-                                friends.map(friend => (\r\n-                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n-                                        name={friend.firstname + \" \" + friend.lastname}\r\n-                                        image={SERVERLINK + \"/\" + friend.profileimage} />\r\n-                                )) :\r\n-                                <div>No friends</div>\r\n-                        }\r\n-                    </div>\r\n-                </>\r\n-            )\r\n-    }\r\n-}\r\n-\r\n-const DynamicRightContent = () => {\r\n-\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722332792839,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n                 <div className=\"flex flex-col gap-6\">\r\n                     <SubHeader name=\"Suggestions d'offres\" icon=\"bi bi-robot\" />\r\n                     {suggestions.length > 0 ? (\r\n                         suggestions.map(suggestion => (\r\n-                            <LittleOfferCard key={suggestion.offerid} sug={suggestion} saved/>\r\n+                            <LittleOfferCard key={suggestion.offerid} sug={suggestion} saved={ savedOffers.find(offer => offer.offerid === suggestion.offerid)}/>\r\n                         ))\r\n                     )\r\n                         :\r\n                         <div>\r\n"
                },
                {
                    "date": 1722332898767,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n                 <div className=\"flex flex-col gap-6\">\r\n                     <SubHeader name=\"Suggestions d'offres\" icon=\"bi bi-robot\" />\r\n                     {suggestions.length > 0 ? (\r\n                         suggestions.map(suggestion => (\r\n-                            <LittleOfferCard key={suggestion.offerid} sug={suggestion} saved={ savedOffers.find(offer => offer.offerid === suggestion.offerid)}/>\r\n+                            <LittleOfferCard key={suggestion.offerid} sug={suggestion} saved={ savedOffer savedOffers.find(offer => offer.offerid === suggestion.offerid) }/>\r\n                         ))\r\n                     )\r\n                         :\r\n                         <div>\r\n"
                },
                {
                    "date": 1722332906647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n                 <div className=\"flex flex-col gap-6\">\r\n                     <SubHeader name=\"Suggestions d'offres\" icon=\"bi bi-robot\" />\r\n                     {suggestions.length > 0 ? (\r\n                         suggestions.map(suggestion => (\r\n-                            <LittleOfferCard key={suggestion.offerid} sug={suggestion} saved={ savedOffer savedOffers.find(offer => offer.offerid === suggestion.offerid) }/>\r\n+                            <LittleOfferCard key={suggestion.offerid} sug={suggestion} saved={ savedOffers.length > 0 ? savedOffers.find(offer => offer.offerid === suggestion.offerid) }/>\r\n                         ))\r\n                     )\r\n                         :\r\n                         <div>\r\n"
                },
                {
                    "date": 1722332912931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n                 <div className=\"flex flex-col gap-6\">\r\n                     <SubHeader name=\"Suggestions d'offres\" icon=\"bi bi-robot\" />\r\n                     {suggestions.length > 0 ? (\r\n                         suggestions.map(suggestion => (\r\n-                            <LittleOfferCard key={suggestion.offerid} sug={suggestion} saved={ savedOffers.length > 0 ? savedOffers.find(offer => offer.offerid === suggestion.offerid)  }/>\r\n+                            <LittleOfferCard key={suggestion.offerid} sug={suggestion} saved={ savedOffers.length > 0 ? savedOffers.find(offer => offer.offerid === suggestion.offerid) :  }/>\r\n                         ))\r\n                     )\r\n                         :\r\n                         <div>\r\n"
                },
                {
                    "date": 1722332919031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,154 @@\n+import { Outlet, useLocation } from \"react-router-dom\";\r\n+import { ProfileLeft } from \"../components/pages/ProfileLeft.jsx\";\r\n+import { SubHeader } from \"../components/pages/SubHeader.jsx\";\r\n+import RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\n+import SavePublication from \"../components/pages/SavePublication.jsx\";\r\n+import { Notification } from \"../components/pages/Notification.jsx\";\r\n+import { useAuth } from \"../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../constants/index.js\";\r\n+import { useApp } from \"../context/AppProvider.jsx\";\r\n+import { useEffect } from \"react\";\r\n+import { NAVIGATIONS } from \"../constants/home.js\";\r\n+import { Icon } from \"../styles/components.js\";\r\n+import LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n+\r\n+const NavPageLayout = () => {\r\n+    const { personalInformation } = useAuth();\r\n+    const user = personalInformation;\r\n+\r\n+    const pathname = useLocation().pathname;\r\n+\r\n+    const { handleFriends, handleOfferSuggestion, suggestions, handleOffersSaved, handleOffersForUser, savedOffers } = useApp();\r\n+\r\n+    useEffect(() => {\r\n+        handleOfferSuggestion();\r\n+        handleOffersSaved();\r\n+        handleOffersForUser();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n+            {/*Left subNav*/}\r\n+            <div className=\"fixed bottom-10 right-[20%]\">\r\n+                <Icon icon=\"bi bi-briefcase\" />\r\n+            </div>\r\n+            <div\r\n+                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n+                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n+                    account={user?.accounttype} />\r\n+                <div className=\"flex flex-col gap-3 w-full\">\r\n+                    <DynamicLeftContent currentLocation={pathname} />\r\n+                </div>\r\n+\r\n+            </div>\r\n+\r\n+            {/*Center */}\r\n+            <div\r\n+                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n+                <Outlet />\r\n+            </div>\r\n+\r\n+            {/*Right subNav*/}\r\n+            <div\r\n+                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n+                <div className=\"flex flex-col gap-4 w-full\">\r\n+                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\" />\r\n+                    {\r\n+                        savedOffers.length > 0 ? (\r\n+                            savedOffers.map(savedOffer =>\r\n+                            (<SavePublication key={savedOffer.offerid} capacity={savedOffer.capacity}\r\n+                                title={savedOffer.title} depart={savedOffer.depart}\r\n+                                destination={savedOffer.dest}\r\n+                                scheduleddate={savedOffer.scheduleddate} />)\r\n+                            )\r\n+                        ) : (\r\n+                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n+                                de sauvegarde pour l'instant</p>\r\n+                        )\r\n+                    }\r\n+                </div>\r\n+                <div className=\"flex flex-col gap-6\">\r\n+                    <SubHeader name=\"Suggestions d'offres\" icon=\"bi bi-robot\" />\r\n+                    {suggestions.length > 0 ? (\r\n+                        suggestions.map(suggestion => (\r\n+                            <LittleOfferCard key={suggestion.offerid} sug={suggestion} saved={ savedOffers.length > 0 ? savedOffers.find(offer => offer.offerid === suggestion.offerid) : false }/>\r\n+                        ))\r\n+                    )\r\n+                        :\r\n+                        <div>\r\n+                            No offers\r\n+                        </div>\r\n+                    }\r\n+                </div>\r\n+            </div>\r\n+\r\n+        </section>\r\n+    )\r\n+}\r\n+export default NavPageLayout;\r\n+\r\n+\r\n+const DynamicLeftContent = ({ currentLocation }) => {\r\n+    const { friends, users } = useApp();\r\n+\r\n+    switch (currentLocation) {\r\n+\r\n+        case NAVIGATIONS.home:\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Followed People\" icon=\"bi bi-person\" />\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                        name={friend.firstname + \" \" + friend.lastname}\r\n+                                        image={SERVERLINK + \"/\" + friend.profileimage}\r\n+                                    />\r\n+\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+\r\n+        case NAVIGATIONS.friend:\r\n+            return <>\r\n+                <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\" />\r\n+                <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n+                    {\r\n+                        users.length > 0 ?\r\n+                            users.map(us => (\r\n+                                <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n+                                    account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n+                                    image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false} />\r\n+                            )) :\r\n+                            <div>Pas d amis</div>\r\n+                    }\r\n+                </div>\r\n+            </>\r\n+\r\n+        default:\r\n+            return (\r\n+                <>\r\n+                    <SubHeader name=\"Amis\" icon=\"bi bi-person\" />\r\n+                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n+                        {\r\n+                            friends.length > 0 ?\r\n+                                friends.map(friend => (\r\n+                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n+                                        name={friend.firstname + \" \" + friend.lastname}\r\n+                                        image={SERVERLINK + \"/\" + friend.profileimage} />\r\n+                                )) :\r\n+                                <div>No friends</div>\r\n+                        }\r\n+                    </div>\r\n+                </>\r\n+            )\r\n+    }\r\n+}\r\n+\r\n+const DynamicRightContent = () => {\r\n+\r\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1722238265966,
            "name": "Commit-0",
            "content": "import {Outlet, useLocation} from \"react-router-dom\";\r\nimport {ProfileLeft} from \"../components/pages/ProfileLeft.jsx\";\r\nimport {SubHeader} from \"../components/pages/SubHeader.jsx\";\r\nimport RecentlyFriends from \"../components/pages/RecentlyFriends.jsx\";\r\nimport SavePublication from \"../components/pages/SavePublication.jsx\";\r\nimport {Notification} from \"../components/pages/Notification.jsx\";\r\nimport {useAuth} from \"../context/AuthProvider.jsx\";\r\nimport {SERVERLINK} from \"../constants/index.js\";\r\nimport {useApp} from \"../context/AppProvider.jsx\";\r\nimport {useEffect} from \"react\";\r\nimport {NAVIGATIONS} from \"../constants/home.js\";\r\nimport {Icon} from \"../styles/components.js\";\r\nimport LittleOfferCard from \"../components/pages/Offer/LittleOfferCard.jsx\";\r\n\r\nconst NavPageLayout = () => {\r\n    const {personalInformation} = useAuth();\r\n    const user = personalInformation;\r\n\r\n    const pathname = useLocation().pathname;\r\n\r\n    const {handleFriends, handleOfferSuggestion, suggestions} = useApp();\r\n\r\n    return (\r\n        <section className=\"flex items-start  w-full justify-between nav-page-container gap-10 h-[86vh] relative\">\r\n            {/*Left subNav*/}\r\n            <div className=\"fixed bottom-10 right-[20%]\">\r\n                <Icon icon=\"bi bi-briefcase\"/>\r\n            </div>\r\n            <div\r\n                className=\"flex flex-col items-start justify-start gap-10 overflow-x-hidden basis-[26%] overflow-y-scroll max-h-full scrollbar-none relative\">\r\n                <ProfileLeft name={user?.fullName} image={SERVERLINK + \"/\" + user?.profile}\r\n                             account={user?.accounttype}/>\r\n                <div className=\"flex flex-col gap-3 w-full\">\r\n                    <DynamicLeftContent currentLocation={pathname}/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {/*Center */}\r\n            <div\r\n                className=\"overflow-x-hidden overflow-y-scroll max-h-full basis-[44%] scrollbar-none rounded-xl\">\r\n                <Outlet/>\r\n            </div>\r\n\r\n            {/*Right subNav*/}\r\n            <div\r\n                className=\" max-h-full flex flex-col gap-10 overflow-x-hidden basis-[26%] scrollbar-none\">\r\n                <div className=\"flex flex-col gap-4 w-full\">\r\n                    <SubHeader name=\"Publication SauvegardÃ©es\" icon=\"bi bi-person-fill\" size=\"md\"/>\r\n                    {\r\n                        suggestions.length > 0 ? (\r\n                            suggestions.map(suggestion =>\r\n                                (<SavePublication key={suggestion.offerid} capacity={suggestion.capacity}\r\n                                                  title={suggestion.title} depart={suggestion.depart}\r\n                                                  destination={suggestion.dest}\r\n                                                  scheduleddate={suggestion.sheduleddate}/>)\r\n                            )\r\n                        ) : (\r\n                            <p className=\"w-full px-4 py-10 text-center text-black-80 bg-white-100 border border-black-0 rounded-xl \">Pas\r\n                                de sauvegarde pour l'instant</p>\r\n                        )\r\n                    }\r\n                </div>\r\n                <div className=\"flex flex-col gap-6\">\r\n                    <SubHeader name=\"Sugfestions d'offres\" icon=\"bi bi-robot\"/>\r\n                        {\r\n                            [1,2,3].map(item => (\r\n                                <LittleOfferCard key={item}/>\r\n                            ))\r\n                        }\r\n                </div>\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\nexport default NavPageLayout;\r\n\r\n\r\nconst DynamicLeftContent = ({currentLocation}) => {\r\n    const {friends, users} = useApp();\r\n\r\n    switch (currentLocation) {\r\n\r\n        case NAVIGATIONS.home :\r\n            return (\r\n                <>\r\n                <SubHeader name=\"Follo\" icon=\"bi bi-person\"/>\r\n                <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n                    {\r\n                        friends.length > 0 ?\r\n                            friends.map(friend => (\r\n                                <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n                                                 name={friend.firstname + \" \" + friend.lastname}\r\n                                                 image={SERVERLINK + \"/\" + friend.profileimage}\r\n                                />\r\n\r\n                                    )) :\r\n                                    <div>No friends</div>\r\n                                    }\r\n                                </div>\r\n                        </>\r\n                        )\r\n\r\n                        case NAVIGATIONS.friend :\r\n                        return <>\r\n                        <SubHeader name=\"Suggestion d'amis\" icon=\"bi bi-person\"/>\r\n                        <div className=\"flex flex-col items-center justify-center gap-6 p-4 w-full bg-white-100 rounded-xl\">\r\n                    {\r\n                        users.length > 0 ?\r\n                        users.map(us => (\r\n                        <RecentlyFriends className=\"w-full\" key={us.userid} spec={us.userid}\r\n                     account={us.accounttype} name={us.firstname + \" \" + us.lastname}\r\n                     image={SERVERLINK + \"/\" + us.profileimage} showAddFriendButton showProfileButton={false}/>\r\n                )) :\r\n                <div>Pas d'amis</div>\r\n                }\r\n                </div>\r\n        </>\r\n\r\n        default :\r\n            return (\r\n                <>\r\n                    <SubHeader name=\"Amis\" icon=\"bi bi-person\"/>\r\n                    <div className=\"flex flex-col gap-3 rounded-lg p-4 bg-white-100\">\r\n                        {\r\n                            friends.length > 0 ?\r\n                                friends.map(friend => (\r\n                                    <RecentlyFriends className=\"w-full\" key={friend.userid} spec={friend.userid}\r\n                                                     name={friend.firstname + \" \" + friend.lastname}\r\n                                                     image={SERVERLINK + \"/\" + friend.profileimage}/>\r\n                                )) :\r\n                                <div>No friends</div>\r\n                        }\r\n                    </div>\r\n                </>\r\n            )\r\n        }\r\n        }\r\n\r\n        const DynamicRightContent = () => {\r\n\r\n        }"
        }
    ]
}