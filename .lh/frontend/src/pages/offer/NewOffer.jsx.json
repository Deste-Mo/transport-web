{
    "sourceFile": "frontend/src/pages/offer/NewOffer.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1722333281854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1722333294594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n } from '../../styles/components'\n import { SERVERLINK } from '../../constants'\n import { useAuth } from '../../context/AuthProvider'\n \n-const Offer = () => {\n+const NewOffer = () => {\n   const { handleInputChange, checkFieldError, handleError } = useForm()\n   const [formData, setFormData] = useState({\n     imgUrl: '',\n     title: '',\n"
                },
                {
                    "date": 1722333301041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -198,5 +198,5 @@\n       </div>\n     </>\n   )\n }\n-export default Offer\n+export default NewOffer\n"
                },
                {
                    "date": 1722333325525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n   Icon,\n } from '../../styles/components'\n import { SERVERLINK } from '../../constants'\n import { useAuth } from '../../context/AuthProvider'\n+import {SubHeader} from \"../../components/pages/SubHeader.jsx\";\n \n const NewOffer = () => {\n   const { handleInputChange, checkFieldError, handleError } = useForm()\n   const [formData, setFormData] = useState({\n@@ -68,50 +69,26 @@\n         },\n         body: data\n       })\n \n-      setFormData({\n-        imgUrl: '',\n-        title: '',\n-        description: '',\n-        depart: '',\n-        destination: '',\n-        capacity: '',\n-        scheduledDate: ''\n-      })\n+      console.log(await response.json());\n \n     } catch (error) {\n-      console.error(error)\n+      console.log(error)\n     }\n   }\n \n-  const handleDateInput = (e) => {\n-    setFormData({...formData, [e.target.name] : e.target.value});\n-  }\n-\n   useEffect(() => {\n     checkFieldError(errorData)\n   }, [errorData])\n \n   return (\n-    <>\n-      <div className=\" flex flex-row justify-center w-full\">\n         <section\n-          id=\"offrePublication\"\n-          className=\"flex flex-col p-6  items-center rounded-2xl\"\n+          className=\"flex flex-col rounded-2xl gap-4 overflow-x-hidden overflow-y-scroll h-full scrollbar-none\"\n         >\n-\n-\n-          <form className='flex flex-col gap-5' onSubmit={e => handleCreateOffer(e)}>\n-            <div className='shadow rounded-md p-2 flex gap-6 items-center bg-white-100'>\n-              <div>\n-                <Icon size='md' icon='bi bi-plus' className='text-subtitle-1' />\n-              </div>\n-              <p className=' text-lead'>Nouvelle Publication</p>\n-            </div>\n-\n+          <SubHeader name=\"Nouvel Offre\" icon=\"bi bi-plus-circle-fill\"/>\n+          <form className='flex flex-col gap-6 p-2 ' onSubmit={e => handleCreateOffer(e)}>\n             {/* formulaire parties */}\n-            <div className='bg-white-100 p-4 rounded-lg'>\n               <div className=\" flex flex-col gap-4\">\n \n                 <div className=\"w-full  h-60 bg-black-10 rounded-xl flex flex-col justify-center items-center overflow-hidden\">\n                   <img className='w-full h-full object-cover rounded-xl' src={file.path} alt=\"Choisez une image\" />\n@@ -126,19 +103,22 @@\n               </div>\n \n               {/* Informations sections */}\n               <div className=\"flex flex-col gap-4\">\n-              <SelectInput\n-                title=\"Compte pour\"\n-                name=\"title\"\n-                variant=\"fill\"\n-                options={titreData.map((titre) => ({\n-                  option: titre,\n-                }))}\n-                onError={handleError(setErrorData)}\n-                onChange={(e) => handleInputChange(setFormData, e)}\n-                block\n-              />\n+                <SelectInput\n+                  className=\"w-full\"\n+                  name=\"title\"\n+                  title=\"Objet\"\n+                  variant=\"fill\"\n+                  size=\"lg\"\n+                  options={titreData.map((titre) => ({\n+                    option:titre\n+                  }))}\n+                  icon=\"bi bi-caret-down-fill\"\n+                  onError={handleError(setErrorData)}\n+                  onchange={(e) => handleInputChange(setFormData, e)}\n+                  block\n+                />\n                 <TextArea\n                   className=\"w-full\"\n                   name=\"description\"\n                   title=\"Description\"\n@@ -151,9 +131,9 @@\n                   block\n                 />\n               </div>\n \n-              <div className='flex gap-2'>\n+              <div className='flex gap-4'>\n                 <TextInput\n                   className=\"w-[45]\"\n                   name=\"depart\"\n                   title=\"Lieu de départ\"\n@@ -171,9 +151,9 @@\n                   value={formData.destination}\n                 />\n \n               </div>\n-              <div className='flex gap-2'>\n+              <div className='flex gap-4'>\n                 <TextInput\n                   className=\"\"\n                   name=\"capacity\"\n                   pattern={/^\\d+(\\.\\d+)?\\s?(kg|tonne|tonnes)$/}\n@@ -181,22 +161,18 @@\n                   onError={handleError(setErrorData)}\n                   onChange={(e) => handleInputChange(setFormData, e)}\n                   value={formData.capacity}\n                 />\n-                <input type=\"date\" name=\"scheduledDate\" id=\"scheduledDate\" onChange={handleDateInput} value={formData.scheduledDate} className='h-[20px] w-[50%] py-[30px] pl-4 outline-none bg-gray-100 text-black-60 my-5 rounded-xl'/>\n+                <TextInput\n+                  type='date'\n+                  title='Date prévue de départ'\n+                />\n               </div>\n-              <div className='flex flex-col gap-4 w-full mt-[1em]'>\n-                <Button className='w-full' type='submit' children='Publier' />\n-                <Button className='w-full' variant='outline' type='button' children='Annuler' />\n+              <div className='flex flex-col gap-4 w-full'>\n+                <Button block  children='Publier' />\n+                <Button block variant=\"secondary\" children='Annuler' />\n               </div>\n-            </div>\n-\n           </form>\n-\n-\n-\n         </section>\n-      </div>\n-    </>\n   )\n }\n export default NewOffer\n"
                }
            ],
            "date": 1722333281854,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from 'react'\nimport { useForm } from '../../context/FormProvider'\nimport {\n  TextInput,\n  SelectInput,\n  FileInput,\n  Button,\n  TextArea,\n  Icon,\n} from '../../styles/components'\nimport { SERVERLINK } from '../../constants'\nimport { useAuth } from '../../context/AuthProvider'\n\nconst Offer = () => {\n  const { handleInputChange, checkFieldError, handleError } = useForm()\n  const [formData, setFormData] = useState({\n    imgUrl: '',\n    title: '',\n    description: '',\n    depart: '',\n    destination: '',\n    capacity: '',\n    scheduledDate: '',\n  });\n\n  const { token } = useAuth();\n\n  const [file, setFile] = useState({\n    name: '',\n    path: '',\n  })\n\n  const titreData = ['Transport de marchandise','Marchandise à transporter']\n\n  const [errorData, setErrorData] = useState({\n    imgUrl: false,\n    title: false,\n    description: true,\n    depart: true,\n    destination: true,\n    capacity: true,\n    scheduledDate: false,\n  })\n\n  const handleCreateOffer = async (e) => {\n\n    const { imgUrl, title, description, depart, destination, capacity, scheduledDate } = formData;\n\n\n    e.preventDefault();\n\n    try {\n\n      const data = new FormData();\n\n      data.append('imgUrl',imgUrl);\n      data.append('title',title);\n      data.append('description', description);\n      data.append('depart',depart);\n      data.append('destination',destination);\n      data.append('capacity',capacity);\n      data.append('scheduledDate',scheduledDate);\n\n      const response = await fetch(SERVERLINK + \"/api/offres/newpublication\", {\n        method: 'POST',\n        headers: {\n          'token': token\n        },\n        body: data\n      })\n\n      setFormData({\n        imgUrl: '',\n        title: '',\n        description: '',\n        depart: '',\n        destination: '',\n        capacity: '',\n        scheduledDate: ''\n      })\n\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const handleDateInput = (e) => {\n    setFormData({...formData, [e.target.name] : e.target.value});\n  }\n\n  useEffect(() => {\n    checkFieldError(errorData)\n  }, [errorData])\n\n  return (\n    <>\n      <div className=\" flex flex-row justify-center w-full\">\n        <section\n          id=\"offrePublication\"\n          className=\"flex flex-col p-6  items-center rounded-2xl\"\n        >\n\n\n          <form className='flex flex-col gap-5' onSubmit={e => handleCreateOffer(e)}>\n            <div className='shadow rounded-md p-2 flex gap-6 items-center bg-white-100'>\n              <div>\n                <Icon size='md' icon='bi bi-plus' className='text-subtitle-1' />\n              </div>\n              <p className=' text-lead'>Nouvelle Publication</p>\n            </div>\n\n            {/* formulaire parties */}\n            <div className='bg-white-100 p-4 rounded-lg'>\n              <div className=\" flex flex-col gap-4\">\n\n                <div className=\"w-full  h-60 bg-black-10 rounded-xl flex flex-col justify-center items-center overflow-hidden\">\n                  <img className='w-full h-full object-cover rounded-xl' src={file.path} alt=\"Choisez une image\" />\n                </div>\n                <FileInput className='w-full'\n                  name='imgUrl'\n                  setFile={setFile}\n                  onChange={(e) => handleInputChange(setFormData, e)}\n                  onError={handleError(setErrorData)}\n                  block\n                />\n              </div>\n\n              {/* Informations sections */}\n              <div className=\"flex flex-col gap-4\">\n              <SelectInput\n                title=\"Compte pour\"\n                name=\"title\"\n                variant=\"fill\"\n                options={titreData.map((titre) => ({\n                  option: titre,\n                }))}\n                onError={handleError(setErrorData)}\n                onChange={(e) => handleInputChange(setFormData, e)}\n                block\n              />\n                <TextArea\n                  className=\"w-full\"\n                  name=\"description\"\n                  title=\"Description\"\n                  resize={true}\n                  placeholder=\"Décrivez votre offre de transport\"\n\n                  onError={handleError(setErrorData)}\n                  onChange={(e) => handleInputChange(setFormData, e)}\n                  value={formData.description}\n                  block\n                />\n              </div>\n\n              <div className='flex gap-2'>\n                <TextInput\n                  className=\"w-[45]\"\n                  name=\"depart\"\n                  title=\"Lieu de départ\"\n                  placeholder='Entrez le lieu de départ'\n                  onError={handleError(setErrorData)}\n                  onChange={(e) => handleInputChange(setFormData, e)}\n                  value={formData.depart}\n                />\n                <TextInput\n                  className=\"\"\n                  name=\"destination\"\n                  title=\"Destination\"\n                  onError={handleError(setErrorData)}\n                  onChange={(e) => handleInputChange(setFormData, e)}\n                  value={formData.destination}\n                />\n\n              </div>\n              <div className='flex gap-2'>\n                <TextInput\n                  className=\"\"\n                  name=\"capacity\"\n                  pattern={/^\\d+(\\.\\d+)?\\s?(kg|tonne|tonnes)$/}\n                  title=\"capacité/Quantité\"\n                  onError={handleError(setErrorData)}\n                  onChange={(e) => handleInputChange(setFormData, e)}\n                  value={formData.capacity}\n                />\n                <input type=\"date\" name=\"scheduledDate\" id=\"scheduledDate\" onChange={handleDateInput} value={formData.scheduledDate} className='h-[20px] w-[50%] py-[30px] pl-4 outline-none bg-gray-100 text-black-60 my-5 rounded-xl'/>\n              </div>\n              <div className='flex flex-col gap-4 w-full mt-[1em]'>\n                <Button className='w-full' type='submit' children='Publier' />\n                <Button className='w-full' variant='outline' type='button' children='Annuler' />\n              </div>\n            </div>\n\n          </form>\n\n\n\n        </section>\n      </div>\n    </>\n  )\n}\nexport default Offer\n"
        }
    ]
}