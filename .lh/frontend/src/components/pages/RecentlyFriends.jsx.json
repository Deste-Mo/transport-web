{
    "sourceFile": "frontend/src/components/pages/RecentlyFriends.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1722237819471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1722237919633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,16 +13,16 @@\n     const { token, personalInformation } = useAuth();\r\n \r\n     const { handleFriends, handleUsersToShow, handleNotificationShow } = useApp();\r\n \r\n-    const { onlineUsers } = useSocketContext();\r\n+    const { ActiveUsers } = useSocketContext();\r\n \r\n \r\n     const navigate = useNavigate();\r\n \r\n     const id = spec;\r\n \r\n-    const isOnline = onlineUsers.includes(id);\r\n+    const isOnline = ActiveUsers.includes(id);\r\n \r\n     const handleFollow = async () => {\r\n \r\n         const content = personalInformation.fullName + \" Vous suit desormais.\";\r\n"
                },
                {
                    "date": 1722238357594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n         <div className={`flex items-center justify-between gap-4 bg-white-100 p-4 hover:bg-primary-20 group rounded-xl ${className}`}>\r\n             <div className=\"flex items-center relative gap-2\">\r\n                 <img src={image} alt=\"\" className=\"h-12 w-12 rounded-full\" />\r\n                 <div className=\"flex flex-col\">\r\n-                    <span className=\"group-hover:underline cursor-pointer\">{name} {isOnline && <span className=\"h-[10px] w-[10px] rounded-[50%] ml-2 bg-success-100 inline-block\" ></span>}</span>\r\n+                    <span className=\"group-hover:underline cursor-pointer\">{name} {isOnline <span className=\"h-[10px] w-[10px] rounded-[50%] ml-2 bg-success-100 inline-block\" ></span>}</span>\r\n                     <span className=\"text-black-80 text-small-1 \">{account}</span>\r\n                 </div>\r\n             </div>\r\n             <div className=\"flex items-center gap-8\">\r\n"
                },
                {
                    "date": 1722238367628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,105 @@\n+import { useNavigate } from \"react-router-dom\"\r\n+import Button from \"../ui/Button\"\r\n+import { SubHeader } from \"./SubHeader\"\r\n+import { useAuth } from \"../../context/AuthProvider\"\r\n+import { SERVERLINK } from \"../../constants\"\r\n+import { useApp } from \"../../context/AppPorvider\"\r\n+import { useSocketContext } from \"../../context/SocketContext\"\r\n+//import PropTypes from \"prop-types\";\r\n+\r\n+const RecentlyFriends = ({ spec, image, name, account, showMessageButton = false, showRemoveFriendButton = false, showAddFriendButton = false, showProfileButton = true, className }) => {\r\n+\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { handleFriends, handleUsersToShow, handleNotificationShow } = useApp();\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+\r\n+    const navigate = useNavigate();\r\n+\r\n+    const id = spec;\r\n+\r\n+    const isOnline = ActiveUsers.includes(id);\r\n+\r\n+    const handleFollow = async () => {\r\n+\r\n+        const content = personalInformation.fullName + \" Vous suit desormais.\";\r\n+\r\n+        const response = await fetch(SERVERLINK + '/api/profile/follow/' + id, {\r\n+            method: \"POST\",\r\n+            headers: {\r\n+                \"Content-Type\": \"application/json\",\r\n+                \"token\": token\r\n+            }\r\n+        });\r\n+\r\n+        const sendNotifs = await fetch(SERVERLINK + '/api/notifs/sendnotifs/' + id, {\r\n+            method: \"POST\",\r\n+            headers: {\r\n+                \"Content-Type\": \"application/json\",\r\n+                \"token\": token\r\n+            },\r\n+            body: JSON.stringify({ content })\r\n+        });\r\n+\r\n+        handleFriends()\r\n+        handleUsersToShow()\r\n+        handleNotificationShow();\r\n+    }\r\n+\r\n+    const handleUnfollow = async () => {\r\n+\r\n+        const response = await fetch(SERVERLINK + '/api/profile/unfollow/' + id, {\r\n+            method: \"POST\",\r\n+            headers: {\r\n+                \"Content-Type\": \"application/json\",\r\n+                \"token\": token\r\n+            }\r\n+        });\r\n+\r\n+        const answer = await response.json();\r\n+\r\n+        handleFriends()\r\n+        handleUsersToShow()\r\n+\r\n+    }\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: id, fullName: name, accounttype: account, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    return (\r\n+        <div className={`flex items-center justify-between gap-4 bg-white-100 p-4 hover:bg-primary-20 group rounded-xl ${className}`}>\r\n+            <div className=\"flex items-center relative gap-2\">\r\n+                <img src={image} alt=\"\" className=\"h-12 w-12 rounded-full\" />\r\n+                <div className=\"flex flex-col\">\r\n+                    <span className=\"group-hover:underline cursor-pointer\">{name} {isOnline ? <span className=\"h-[10px] w-[10px] rounded-[50%] ml-2 bg-success-100 inline-block\" ></span> : null}</span>\r\n+                    <span className=\"text-black-80 text-small-1 \">{account}</span>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-8\">\r\n+                {showProfileButton && <Button variant={\"secondary\"} onClick={() => navigate(\"/profile/:id\")}>Profile</Button>}\r\n+                \r\n+                {showMessageButton &&  <i onClick={handleClick} className=\"bi bi-chat text-icon cursor-pointer\"></i> }\r\n+                {showAddFriendButton && <Button variant={\"ghost\"}  className=\"text-primary-100\" onClick={handleFollow}>Suivre</Button>}\r\n+                {showRemoveFriendButton && <Button  variant=\"ghost\" onClick={handleUnfollow} className=\"text-danger-100\">Retirer</Button> }\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default RecentlyFriends;\r\n+\r\n+/*\r\n+Amis.propTypes = {\r\n+    name: PropTypes.string.isRequired,\r\n+    account: PropTypes.string.isRequired,\r\n+}\r\n+\r\n+RecentlyFriends.propTypes = {\r\n+    name: PropTypes.string.isRequired,\r\n+    account: PropTypes.string.isRequired,\r\n+}*/\r\n"
                },
                {
                    "date": 1722238367970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,109 +102,4 @@\n RecentlyFriends.propTypes = {\r\n     name: PropTypes.string.isRequired,\r\n     account: PropTypes.string.isRequired,\r\n }*/\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import Button from \"../ui/Button\"\r\n-import { SubHeader } from \"./SubHeader\"\r\n-import { useAuth } from \"../../context/AuthProvider\"\r\n-import { SERVERLINK } from \"../../constants\"\r\n-import { useApp } from \"../../context/AppPorvider\"\r\n-import { useSocketContext } from \"../../context/SocketContext\"\r\n-//import PropTypes from \"prop-types\";\r\n-\r\n-const RecentlyFriends = ({ spec, image, name, account, showMessageButton = false, showRemoveFriendButton = false, showAddFriendButton = false, showProfileButton = true, className }) => {\r\n-\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { handleFriends, handleUsersToShow, handleNotificationShow } = useApp();\r\n-\r\n-    const { ActiveUsers } = useSocketContext();\r\n-\r\n-\r\n-    const navigate = useNavigate();\r\n-\r\n-    const id = spec;\r\n-\r\n-    const isOnline = ActiveUsers.includes(id);\r\n-\r\n-    const handleFollow = async () => {\r\n-\r\n-        const content = personalInformation.fullName + \" Vous suit desormais.\";\r\n-\r\n-        const response = await fetch(SERVERLINK + '/api/profile/follow/' + id, {\r\n-            method: \"POST\",\r\n-            headers: {\r\n-                \"Content-Type\": \"application/json\",\r\n-                \"token\": token\r\n-            }\r\n-        });\r\n-\r\n-        const sendNotifs = await fetch(SERVERLINK + '/api/notifs/sendnotifs/' + id, {\r\n-            method: \"POST\",\r\n-            headers: {\r\n-                \"Content-Type\": \"application/json\",\r\n-                \"token\": token\r\n-            },\r\n-            body: JSON.stringify({ content })\r\n-        });\r\n-\r\n-        handleFriends()\r\n-        handleUsersToShow()\r\n-        handleNotificationShow();\r\n-    }\r\n-\r\n-    const handleUnfollow = async () => {\r\n-\r\n-        const response = await fetch(SERVERLINK + '/api/profile/unfollow/' + id, {\r\n-            method: \"POST\",\r\n-            headers: {\r\n-                \"Content-Type\": \"application/json\",\r\n-                \"token\": token\r\n-            }\r\n-        });\r\n-\r\n-        const answer = await response.json();\r\n-\r\n-        handleFriends()\r\n-        handleUsersToShow()\r\n-\r\n-    }\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: id, fullName: name, accounttype: account, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    return (\r\n-        <div className={`flex items-center justify-between gap-4 bg-white-100 p-4 hover:bg-primary-20 group rounded-xl ${className}`}>\r\n-            <div className=\"flex items-center relative gap-2\">\r\n-                <img src={image} alt=\"\" className=\"h-12 w-12 rounded-full\" />\r\n-                <div className=\"flex flex-col\">\r\n-                    <span className=\"group-hover:underline cursor-pointer\">{name} {isOnline <span className=\"h-[10px] w-[10px] rounded-[50%] ml-2 bg-success-100 inline-block\" ></span>}</span>\r\n-                    <span className=\"text-black-80 text-small-1 \">{account}</span>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-8\">\r\n-                {showProfileButton && <Button variant={\"secondary\"} onClick={() => navigate(\"/profile/:id\")}>Profile</Button>}\r\n-                \r\n-                {showMessageButton &&  <i onClick={handleClick} className=\"bi bi-chat text-icon cursor-pointer\"></i> }\r\n-                {showAddFriendButton && <Button variant={\"ghost\"}  className=\"text-primary-100\" onClick={handleFollow}>Suivre</Button>}\r\n-                {showRemoveFriendButton && <Button  variant=\"ghost\" onClick={handleUnfollow} className=\"text-danger-100\">Retirer</Button> }\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n-export default RecentlyFriends;\r\n-\r\n-/*\r\n-Amis.propTypes = {\r\n-    name: PropTypes.string.isRequired,\r\n-    account: PropTypes.string.isRequired,\r\n-}\r\n-\r\n-RecentlyFriends.propTypes = {\r\n-    name: PropTypes.string.isRequired,\r\n-    account: PropTypes.string.isRequired,\r\n-}*/\r\n"
                },
                {
                    "date": 1722238451764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n         <div className={`flex items-center justify-between gap-4 bg-white-100 p-4 hover:bg-primary-20 group rounded-xl ${className}`}>\r\n             <div className=\"flex items-center relative gap-2\">\r\n                 <img src={image} alt=\"\" className=\"h-12 w-12 rounded-full\" />\r\n                 <div className=\"flex flex-col\">\r\n-                    <span className=\"group-hover:underline cursor-pointer\">{name} {isOnline ? <span className=\"h-[10px] w-[10px] rounded-[50%] ml-2 bg-success-100 inline-block\" ></span> : null}</span>\r\n+                    <span className=\"group-hover:underline cursor-pointer\">{name} {isOnline ? <span className=\"h-[10px] w-[10px] rounded-[50%] ml-2 bg-success-100 inline-block\" ></span> : }</span>\r\n                     <span className=\"text-black-80 text-small-1 \">{account}</span>\r\n                 </div>\r\n             </div>\r\n             <div className=\"flex items-center gap-8\">\r\n"
                },
                {
                    "date": 1722238523617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,105 @@\n+import { useNavigate } from \"react-router-dom\"\r\n+import Button from \"../ui/Button\"\r\n+import { SubHeader } from \"./SubHeader\"\r\n+import { useAuth } from \"../../context/AuthProvider\"\r\n+import { SERVERLINK } from \"../../constants\"\r\n+import { useApp } from \"../../context/AppPorvider\"\r\n+import { useSocketContext } from \"../../context/SocketContext\"\r\n+//import PropTypes from \"prop-types\";\r\n+\r\n+const RecentlyFriends = ({ spec, image, name, account, showMessageButton = false, showRemoveFriendButton = false, showAddFriendButton = false, showProfileButton = true, className }) => {\r\n+\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { handleFriends, handleUsersToShow, handleNotificationShow } = useApp();\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+\r\n+    const navigate = useNavigate();\r\n+\r\n+    const id = spec;\r\n+\r\n+    const isOnline = await ActiveUsers.includes(id);\r\n+\r\n+    const handleFollow = async () => {\r\n+\r\n+        const content = personalInformation.fullName + \" Vous suit desormais.\";\r\n+\r\n+        const response = await fetch(SERVERLINK + '/api/profile/follow/' + id, {\r\n+            method: \"POST\",\r\n+            headers: {\r\n+                \"Content-Type\": \"application/json\",\r\n+                \"token\": token\r\n+            }\r\n+        });\r\n+\r\n+        const sendNotifs = await fetch(SERVERLINK + '/api/notifs/sendnotifs/' + id, {\r\n+            method: \"POST\",\r\n+            headers: {\r\n+                \"Content-Type\": \"application/json\",\r\n+                \"token\": token\r\n+            },\r\n+            body: JSON.stringify({ content })\r\n+        });\r\n+\r\n+        handleFriends()\r\n+        handleUsersToShow()\r\n+        handleNotificationShow();\r\n+    }\r\n+\r\n+    const handleUnfollow = async () => {\r\n+\r\n+        const response = await fetch(SERVERLINK + '/api/profile/unfollow/' + id, {\r\n+            method: \"POST\",\r\n+            headers: {\r\n+                \"Content-Type\": \"application/json\",\r\n+                \"token\": token\r\n+            }\r\n+        });\r\n+\r\n+        const answer = await response.json();\r\n+\r\n+        handleFriends()\r\n+        handleUsersToShow()\r\n+\r\n+    }\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: id, fullName: name, accounttype: account, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    return (\r\n+        <div className={`flex items-center justify-between gap-4 bg-white-100 p-4 hover:bg-primary-20 group rounded-xl ${className}`}>\r\n+            <div className=\"flex items-center relative gap-2\">\r\n+                <img src={image} alt=\"\" className=\"h-12 w-12 rounded-full\" />\r\n+                <div className=\"flex flex-col\">\r\n+                    <span className=\"group-hover:underline cursor-pointer\">{name} {isOnline ? <span className=\"h-[10px] w-[10px] rounded-[50%] ml-2 bg-success-100 inline-block\" ></span> : ''}</span>\r\n+                    <span className=\"text-black-80 text-small-1 \">{account}</span>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-8\">\r\n+                {showProfileButton && <Button variant={\"secondary\"} onClick={() => navigate(\"/profile/:id\")}>Profile</Button>}\r\n+                \r\n+                {showMessageButton &&  <i onClick={handleClick} className=\"bi bi-chat text-icon cursor-pointer\"></i> }\r\n+                {showAddFriendButton && <Button variant={\"ghost\"}  className=\"text-primary-100\" onClick={handleFollow}>Suivre</Button>}\r\n+                {showRemoveFriendButton && <Button  variant=\"ghost\" onClick={handleUnfollow} className=\"text-danger-100\">Retirer</Button> }\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default RecentlyFriends;\r\n+\r\n+/*\r\n+Amis.propTypes = {\r\n+    name: PropTypes.string.isRequired,\r\n+    account: PropTypes.string.isRequired,\r\n+}\r\n+\r\n+RecentlyFriends.propTypes = {\r\n+    name: PropTypes.string.isRequired,\r\n+    account: PropTypes.string.isRequired,\r\n+}*/\r\n"
                },
                {
                    "date": 1722238608306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+/* eslint-disable no-unused-vars */\r\n import { useNavigate } from \"react-router-dom\"\r\n import Button from \"../ui/Button\"\r\n import { SubHeader } from \"./SubHeader\"\r\n import { useAuth } from \"../../context/AuthProvider\"\r\n@@ -20,9 +21,9 @@\n     const navigate = useNavigate();\r\n \r\n     const id = spec;\r\n \r\n-    const isOnline = await ActiveUsers.includes(id);\r\n+    const isOnline = ActiveUsers.includes(id);\r\n \r\n     const handleFollow = async () => {\r\n \r\n         const content = personalInformation.fullName + \" Vous suit desormais.\";\r\n@@ -102,109 +103,4 @@\n RecentlyFriends.propTypes = {\r\n     name: PropTypes.string.isRequired,\r\n     account: PropTypes.string.isRequired,\r\n }*/\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import Button from \"../ui/Button\"\r\n-import { SubHeader } from \"./SubHeader\"\r\n-import { useAuth } from \"../../context/AuthProvider\"\r\n-import { SERVERLINK } from \"../../constants\"\r\n-import { useApp } from \"../../context/AppPorvider\"\r\n-import { useSocketContext } from \"../../context/SocketContext\"\r\n-//import PropTypes from \"prop-types\";\r\n-\r\n-const RecentlyFriends = ({ spec, image, name, account, showMessageButton = false, showRemoveFriendButton = false, showAddFriendButton = false, showProfileButton = true, className }) => {\r\n-\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { handleFriends, handleUsersToShow, handleNotificationShow } = useApp();\r\n-\r\n-    const { ActiveUsers } = useSocketContext();\r\n-\r\n-\r\n-    const navigate = useNavigate();\r\n-\r\n-    const id = spec;\r\n-\r\n-    const isOnline = ActiveUsers.includes(id);\r\n-\r\n-    const handleFollow = async () => {\r\n-\r\n-        const content = personalInformation.fullName + \" Vous suit desormais.\";\r\n-\r\n-        const response = await fetch(SERVERLINK + '/api/profile/follow/' + id, {\r\n-            method: \"POST\",\r\n-            headers: {\r\n-                \"Content-Type\": \"application/json\",\r\n-                \"token\": token\r\n-            }\r\n-        });\r\n-\r\n-        const sendNotifs = await fetch(SERVERLINK + '/api/notifs/sendnotifs/' + id, {\r\n-            method: \"POST\",\r\n-            headers: {\r\n-                \"Content-Type\": \"application/json\",\r\n-                \"token\": token\r\n-            },\r\n-            body: JSON.stringify({ content })\r\n-        });\r\n-\r\n-        handleFriends()\r\n-        handleUsersToShow()\r\n-        handleNotificationShow();\r\n-    }\r\n-\r\n-    const handleUnfollow = async () => {\r\n-\r\n-        const response = await fetch(SERVERLINK + '/api/profile/unfollow/' + id, {\r\n-            method: \"POST\",\r\n-            headers: {\r\n-                \"Content-Type\": \"application/json\",\r\n-                \"token\": token\r\n-            }\r\n-        });\r\n-\r\n-        const answer = await response.json();\r\n-\r\n-        handleFriends()\r\n-        handleUsersToShow()\r\n-\r\n-    }\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: id, fullName: name, accounttype: account, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    return (\r\n-        <div className={`flex items-center justify-between gap-4 bg-white-100 p-4 hover:bg-primary-20 group rounded-xl ${className}`}>\r\n-            <div className=\"flex items-center relative gap-2\">\r\n-                <img src={image} alt=\"\" className=\"h-12 w-12 rounded-full\" />\r\n-                <div className=\"flex flex-col\">\r\n-                    <span className=\"group-hover:underline cursor-pointer\">{name} {isOnline ? <span className=\"h-[10px] w-[10px] rounded-[50%] ml-2 bg-success-100 inline-block\" ></span> : }</span>\r\n-                    <span className=\"text-black-80 text-small-1 \">{account}</span>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-8\">\r\n-                {showProfileButton && <Button variant={\"secondary\"} onClick={() => navigate(\"/profile/:id\")}>Profile</Button>}\r\n-                \r\n-                {showMessageButton &&  <i onClick={handleClick} className=\"bi bi-chat text-icon cursor-pointer\"></i> }\r\n-                {showAddFriendButton && <Button variant={\"ghost\"}  className=\"text-primary-100\" onClick={handleFollow}>Suivre</Button>}\r\n-                {showRemoveFriendButton && <Button  variant=\"ghost\" onClick={handleUnfollow} className=\"text-danger-100\">Retirer</Button> }\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n-export default RecentlyFriends;\r\n-\r\n-/*\r\n-Amis.propTypes = {\r\n-    name: PropTypes.string.isRequired,\r\n-    account: PropTypes.string.isRequired,\r\n-}\r\n-\r\n-RecentlyFriends.propTypes = {\r\n-    name: PropTypes.string.isRequired,\r\n-    account: PropTypes.string.isRequired,\r\n-}*/\r\n"
                },
                {
                    "date": 1722238623913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n         <div className={`flex items-center justify-between gap-4 bg-white-100 p-4 hover:bg-primary-20 group rounded-xl ${className}`}>\r\n             <div className=\"flex items-center relative gap-2\">\r\n                 <img src={image} alt=\"\" className=\"h-12 w-12 rounded-full\" />\r\n                 <div className=\"flex flex-col\">\r\n-                    <span className=\"group-hover:underline cursor-pointer\">{name} {isOnline ? <span className=\"h-[10px] w-[10px] rounded-[50%] ml-2 bg-success-100 inline-block\" ></span> : ''}</span>\r\n+                    <span className=\"group-hover:underline cursor-pointer\">{name}{isOnline ? <span className=\"h-[10px] w-[10px] rounded-[50%] ml-2 bg-success-100 inline-block\" ></span> : ''}</span>\r\n                     <span className=\"text-black-80 text-small-1 \">{account}</span>\r\n                 </div>\r\n             </div>\r\n             <div className=\"flex items-center gap-8\">\r\n"
                },
                {
                    "date": 1722238715831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,106 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import Button from \"../ui/Button\"\r\n+import { SubHeader } from \"./SubHeader\"\r\n+import { useAuth } from \"../../context/AuthProvider\"\r\n+import { SERVERLINK } from \"../../constants\"\r\n+import { useApp } from \"../../context/AppPorvider\"\r\n+import { useSocketContext } from \"../../context/SocketContext\"\r\n+//import PropTypes from \"prop-types\";\r\n+\r\n+const RecentlyFriends = ({ spec, image, name, account, showMessageButton = false, showRemoveFriendButton = false, showAddFriendButton = false, showProfileButton = true, className }) => {\r\n+\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { handleFriends, handleUsersToShow, handleNotificationShow } = useApp();\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+\r\n+    const navigate = useNavigate();\r\n+\r\n+    const id = spec;\r\n+\r\n+    const isOnline = ActiveUsers.includes(id);\r\n+\r\n+    const handleFollow = async () => {\r\n+\r\n+        const content = personalInformation.fullName + \" Vous suit desormais.\";\r\n+\r\n+        const response = await fetch(SERVERLINK + '/api/profile/follow/' + id, {\r\n+            method: \"POST\",\r\n+            headers: {\r\n+                \"Content-Type\": \"application/json\",\r\n+                \"token\": token\r\n+            }\r\n+        });\r\n+\r\n+        const sendNotifs = await fetch(SERVERLINK + '/api/notifs/sendnotifs/' + id, {\r\n+            method: \"POST\",\r\n+            headers: {\r\n+                \"Content-Type\": \"application/json\",\r\n+                \"token\": token\r\n+            },\r\n+            body: JSON.stringify({ content })\r\n+        });\r\n+\r\n+        handleFriends()\r\n+        handleUsersToShow()\r\n+        handleNotificationShow();\r\n+    }\r\n+\r\n+    const handleUnfollow = async () => {\r\n+\r\n+        const response = await fetch(SERVERLINK + '/api/profile/unfollow/' + id, {\r\n+            method: \"POST\",\r\n+            headers: {\r\n+                \"Content-Type\": \"application/json\",\r\n+                \"token\": token\r\n+            }\r\n+        });\r\n+\r\n+        const answer = await response.json();\r\n+\r\n+        handleFriends()\r\n+        handleUsersToShow()\r\n+\r\n+    }\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: id, fullName: name, accounttype: account, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    return (\r\n+        <div className={`flex items-center justify-between gap-4 bg-white-100 p-4 hover:bg-primary-20 group rounded-xl ${className}`}>\r\n+            <div className=\"flex items-center relative gap-2\">\r\n+                <img src={image} alt=\"\" className=\"h-12 w-12 rounded-full\" />\r\n+                <div className=\"flex flex-col\">\r\n+                    <span className=\"group-hover:underline cursor-pointer\">{name}{isOnline ? <span className=\"h-[10px] w-[10px] rounded-[50%] ml-2 bg-success-100 inline-block\" ></span> : ''}</span>\r\n+                    <span className=\"text-black-80 text-small-1 \">{account}</span>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-8\">\r\n+                {showProfileButton && <Button variant={\"secondary\"} onClick={() => navigate(\"/profile/:id\")}>Profile</Button>}\r\n+                \r\n+                {showMessageButton &&  <i onClick={handleClick} className=\"bi bi-chat text-icon cursor-pointer\"></i> }\r\n+                {showAddFriendButton && <Button variant={\"ghost\"}  className=\"text-primary-100\" onClick={handleFollow}>Suivre</Button>}\r\n+                {showRemoveFriendButton && <Button  variant=\"ghost\" onClick={handleUnfollow} className=\"text-danger-100\">Retirer</Button> }\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default RecentlyFriends;\r\n+\r\n+/*\r\n+Amis.propTypes = {\r\n+    name: PropTypes.string.isRequired,\r\n+    account: PropTypes.string.isRequired,\r\n+}\r\n+\r\n+RecentlyFriends.propTypes = {\r\n+    name: PropTypes.string.isRequired,\r\n+    account: PropTypes.string.isRequired,\r\n+}*/\r\n"
                },
                {
                    "date": 1722238742089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n         <div className={`flex items-center justify-between gap-4 bg-white-100 p-4 hover:bg-primary-20 group rounded-xl ${className}`}>\r\n             <div className=\"flex items-center relative gap-2\">\r\n                 <img src={image} alt=\"\" className=\"h-12 w-12 rounded-full\" />\r\n                 <div className=\"flex flex-col\">\r\n-                    <span className=\"group-hover:underline cursor-pointer\">{name}{isOnline ? <span className=\"h-[10px] w-[10px] rounded-[50%] ml-2 bg-success-100 inline-block\" ></span> : ''}</span>\r\n+                    <span className=\"group-hover:underline cursor-pointer\">{name}<span className=\"h-[10px] w-[10px] rounded-[50%] ml-2 bg-success-100 inline-block\" ></span> : ''}</span>\r\n                     <span className=\"text-black-80 text-small-1 \">{account}</span>\r\n                 </div>\r\n             </div>\r\n             <div className=\"flex items-center gap-8\">\r\n@@ -103,110 +103,4 @@\n RecentlyFriends.propTypes = {\r\n     name: PropTypes.string.isRequired,\r\n     account: PropTypes.string.isRequired,\r\n }*/\r\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import Button from \"../ui/Button\"\r\n-import { SubHeader } from \"./SubHeader\"\r\n-import { useAuth } from \"../../context/AuthProvider\"\r\n-import { SERVERLINK } from \"../../constants\"\r\n-import { useApp } from \"../../context/AppPorvider\"\r\n-import { useSocketContext } from \"../../context/SocketContext\"\r\n-//import PropTypes from \"prop-types\";\r\n-\r\n-const RecentlyFriends = ({ spec, image, name, account, showMessageButton = false, showRemoveFriendButton = false, showAddFriendButton = false, showProfileButton = true, className }) => {\r\n-\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { handleFriends, handleUsersToShow, handleNotificationShow } = useApp();\r\n-\r\n-    const { ActiveUsers } = useSocketContext();\r\n-\r\n-\r\n-    const navigate = useNavigate();\r\n-\r\n-    const id = spec;\r\n-\r\n-    const isOnline = ActiveUsers.includes(id);\r\n-\r\n-    const handleFollow = async () => {\r\n-\r\n-        const content = personalInformation.fullName + \" Vous suit desormais.\";\r\n-\r\n-        const response = await fetch(SERVERLINK + '/api/profile/follow/' + id, {\r\n-            method: \"POST\",\r\n-            headers: {\r\n-                \"Content-Type\": \"application/json\",\r\n-                \"token\": token\r\n-            }\r\n-        });\r\n-\r\n-        const sendNotifs = await fetch(SERVERLINK + '/api/notifs/sendnotifs/' + id, {\r\n-            method: \"POST\",\r\n-            headers: {\r\n-                \"Content-Type\": \"application/json\",\r\n-                \"token\": token\r\n-            },\r\n-            body: JSON.stringify({ content })\r\n-        });\r\n-\r\n-        handleFriends()\r\n-        handleUsersToShow()\r\n-        handleNotificationShow();\r\n-    }\r\n-\r\n-    const handleUnfollow = async () => {\r\n-\r\n-        const response = await fetch(SERVERLINK + '/api/profile/unfollow/' + id, {\r\n-            method: \"POST\",\r\n-            headers: {\r\n-                \"Content-Type\": \"application/json\",\r\n-                \"token\": token\r\n-            }\r\n-        });\r\n-\r\n-        const answer = await response.json();\r\n-\r\n-        handleFriends()\r\n-        handleUsersToShow()\r\n-\r\n-    }\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: id, fullName: name, accounttype: account, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    return (\r\n-        <div className={`flex items-center justify-between gap-4 bg-white-100 p-4 hover:bg-primary-20 group rounded-xl ${className}`}>\r\n-            <div className=\"flex items-center relative gap-2\">\r\n-                <img src={image} alt=\"\" className=\"h-12 w-12 rounded-full\" />\r\n-                <div className=\"flex flex-col\">\r\n-                    <span className=\"group-hover:underline cursor-pointer\">{name}{isOnline ? <span className=\"h-[10px] w-[10px] rounded-[50%] ml-2 bg-success-100 inline-block\" ></span> : ''}</span>\r\n-                    <span className=\"text-black-80 text-small-1 \">{account}</span>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-8\">\r\n-                {showProfileButton && <Button variant={\"secondary\"} onClick={() => navigate(\"/profile/:id\")}>Profile</Button>}\r\n-                \r\n-                {showMessageButton &&  <i onClick={handleClick} className=\"bi bi-chat text-icon cursor-pointer\"></i> }\r\n-                {showAddFriendButton && <Button variant={\"ghost\"}  className=\"text-primary-100\" onClick={handleFollow}>Suivre</Button>}\r\n-                {showRemoveFriendButton && <Button  variant=\"ghost\" onClick={handleUnfollow} className=\"text-danger-100\">Retirer</Button> }\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n-export default RecentlyFriends;\r\n-\r\n-/*\r\n-Amis.propTypes = {\r\n-    name: PropTypes.string.isRequired,\r\n-    account: PropTypes.string.isRequired,\r\n-}\r\n-\r\n-RecentlyFriends.propTypes = {\r\n-    name: PropTypes.string.isRequired,\r\n-    account: PropTypes.string.isRequired,\r\n-}*/\r\n"
                },
                {
                    "date": 1722238769754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,108 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import Button from \"../ui/Button\"\r\n+import { SubHeader } from \"./SubHeader\"\r\n+import { useAuth } from \"../../context/AuthProvider\"\r\n+import { SERVERLINK } from \"../../constants\"\r\n+import { useApp } from \"../../context/AppPorvider\"\r\n+import { useSocketContext } from \"../../context/SocketContext\"\r\n+//import PropTypes from \"prop-types\";\r\n+\r\n+const RecentlyFriends = ({ spec, image, name, account, showMessageButton = false, showRemoveFriendButton = false, showAddFriendButton = false, showProfileButton = true, className }) => {\r\n+\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { handleFriends, handleUsersToShow, handleNotificationShow } = useApp();\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+\r\n+    const navigate = useNavigate();\r\n+\r\n+    const id = spec;\r\n+\r\n+    const isOnline = ActiveUsers.includes(id);\r\n+\r\n+    const handleFollow = async () => {\r\n+\r\n+        const content = personalInformation.fullName + \" Vous suit desormais.\";\r\n+\r\n+        const response = await fetch(SERVERLINK + '/api/profile/follow/' + id, {\r\n+            method: \"POST\",\r\n+            headers: {\r\n+                \"Content-Type\": \"application/json\",\r\n+                \"token\": token\r\n+            }\r\n+        });\r\n+\r\n+        const sendNotifs = await fetch(SERVERLINK + '/api/notifs/sendnotifs/' + id, {\r\n+            method: \"POST\",\r\n+            headers: {\r\n+                \"Content-Type\": \"application/json\",\r\n+                \"token\": token\r\n+            },\r\n+            body: JSON.stringify({ content })\r\n+        });\r\n+\r\n+        handleFriends()\r\n+        handleUsersToShow()\r\n+        handleNotificationShow();\r\n+    }\r\n+\r\n+    const handleUnfollow = async () => {\r\n+\r\n+        const response = await fetch(SERVERLINK + '/api/profile/unfollow/' + id, {\r\n+            method: \"POST\",\r\n+            headers: {\r\n+                \"Content-Type\": \"application/json\",\r\n+                \"token\": token\r\n+            }\r\n+        });\r\n+\r\n+        const answer = await response.json();\r\n+\r\n+        handleFriends()\r\n+        handleUsersToShow()\r\n+\r\n+    }\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: id, fullName: name, accounttype: account, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    console.log(object)\r\n+\r\n+    return (\r\n+        <div className={`flex items-center justify-between gap-4 bg-white-100 p-4 hover:bg-primary-20 group rounded-xl ${className}`}>\r\n+            <div className=\"flex items-center relative gap-2\">\r\n+                <img src={image} alt=\"\" className=\"h-12 w-12 rounded-full\" />\r\n+                <div className=\"flex flex-col\">\r\n+                    <span className=\"group-hover:underline cursor-pointer\">{name}<span className=\"h-[10px] w-[10px] rounded-[50%] ml-2 bg-success-100 inline-block\" ></span></span>\r\n+                    <span className=\"text-black-80 text-small-1 \">{account}</span>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-8\">\r\n+                {showProfileButton && <Button variant={\"secondary\"} onClick={() => navigate(\"/profile/:id\")}>Profile</Button>}\r\n+                \r\n+                {showMessageButton &&  <i onClick={handleClick} className=\"bi bi-chat text-icon cursor-pointer\"></i> }\r\n+                {showAddFriendButton && <Button variant={\"ghost\"}  className=\"text-primary-100\" onClick={handleFollow}>Suivre</Button>}\r\n+                {showRemoveFriendButton && <Button  variant=\"ghost\" onClick={handleUnfollow} className=\"text-danger-100\">Retirer</Button> }\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default RecentlyFriends;\r\n+\r\n+/*\r\n+Amis.propTypes = {\r\n+    name: PropTypes.string.isRequired,\r\n+    account: PropTypes.string.isRequired,\r\n+}\r\n+\r\n+RecentlyFriends.propTypes = {\r\n+    name: PropTypes.string.isRequired,\r\n+    account: PropTypes.string.isRequired,\r\n+}*/\r\n"
                },
                {
                    "date": 1722238783102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n         localStorage.setItem('userToChat', JSON.stringify({ id: id, fullName: name, accounttype: account, pic: image }))\r\n         navigate('/message')\r\n     }\r\n \r\n-    console.log(\"\"isOnline);\r\n+    console.log(\"O\"isOnline);\r\n \r\n     return (\r\n         <div className={`flex items-center justify-between gap-4 bg-white-100 p-4 hover:bg-primary-20 group rounded-xl ${className}`}>\r\n             <div className=\"flex items-center relative gap-2\">\r\n"
                },
                {
                    "date": 1722238789477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,108 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import Button from \"../ui/Button\"\r\n+import { SubHeader } from \"./SubHeader\"\r\n+import { useAuth } from \"../../context/AuthProvider\"\r\n+import { SERVERLINK } from \"../../constants\"\r\n+import { useApp } from \"../../context/AppPorvider\"\r\n+import { useSocketContext } from \"../../context/SocketContext\"\r\n+//import PropTypes from \"prop-types\";\r\n+\r\n+const RecentlyFriends = ({ spec, image, name, account, showMessageButton = false, showRemoveFriendButton = false, showAddFriendButton = false, showProfileButton = true, className }) => {\r\n+\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { handleFriends, handleUsersToShow, handleNotificationShow } = useApp();\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+\r\n+    const navigate = useNavigate();\r\n+\r\n+    const id = spec;\r\n+\r\n+    const isOnline = ActiveUsers.includes(id);\r\n+\r\n+    const handleFollow = async () => {\r\n+\r\n+        const content = personalInformation.fullName + \" Vous suit desormais.\";\r\n+\r\n+        const response = await fetch(SERVERLINK + '/api/profile/follow/' + id, {\r\n+            method: \"POST\",\r\n+            headers: {\r\n+                \"Content-Type\": \"application/json\",\r\n+                \"token\": token\r\n+            }\r\n+        });\r\n+\r\n+        const sendNotifs = await fetch(SERVERLINK + '/api/notifs/sendnotifs/' + id, {\r\n+            method: \"POST\",\r\n+            headers: {\r\n+                \"Content-Type\": \"application/json\",\r\n+                \"token\": token\r\n+            },\r\n+            body: JSON.stringify({ content })\r\n+        });\r\n+\r\n+        handleFriends()\r\n+        handleUsersToShow()\r\n+        handleNotificationShow();\r\n+    }\r\n+\r\n+    const handleUnfollow = async () => {\r\n+\r\n+        const response = await fetch(SERVERLINK + '/api/profile/unfollow/' + id, {\r\n+            method: \"POST\",\r\n+            headers: {\r\n+                \"Content-Type\": \"application/json\",\r\n+                \"token\": token\r\n+            }\r\n+        });\r\n+\r\n+        const answer = await response.json();\r\n+\r\n+        handleFriends()\r\n+        handleUsersToShow()\r\n+\r\n+    }\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: id, fullName: name, accounttype: account, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    console.log(\"OnlineUsers: \" + isOnline);\r\n+\r\n+    return (\r\n+        <div className={`flex items-center justify-between gap-4 bg-white-100 p-4 hover:bg-primary-20 group rounded-xl ${className}`}>\r\n+            <div className=\"flex items-center relative gap-2\">\r\n+                <img src={image} alt=\"\" className=\"h-12 w-12 rounded-full\" />\r\n+                <div className=\"flex flex-col\">\r\n+                    <span className=\"group-hover:underline cursor-pointer\">{name}<span className=\"h-[10px] w-[10px] rounded-[50%] ml-2 bg-success-100 inline-block\" ></span></span>\r\n+                    <span className=\"text-black-80 text-small-1 \">{account}</span>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-8\">\r\n+                {showProfileButton && <Button variant={\"secondary\"} onClick={() => navigate(\"/profile/:id\")}>Profile</Button>}\r\n+                \r\n+                {showMessageButton &&  <i onClick={handleClick} className=\"bi bi-chat text-icon cursor-pointer\"></i> }\r\n+                {showAddFriendButton && <Button variant={\"ghost\"}  className=\"text-primary-100\" onClick={handleFollow}>Suivre</Button>}\r\n+                {showRemoveFriendButton && <Button  variant=\"ghost\" onClick={handleUnfollow} className=\"text-danger-100\">Retirer</Button> }\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default RecentlyFriends;\r\n+\r\n+/*\r\n+Amis.propTypes = {\r\n+    name: PropTypes.string.isRequired,\r\n+    account: PropTypes.string.isRequired,\r\n+}\r\n+\r\n+RecentlyFriends.propTypes = {\r\n+    name: PropTypes.string.isRequired,\r\n+    account: PropTypes.string.isRequired,\r\n+}*/\r\n"
                }
            ],
            "date": 1722237819471,
            "name": "Commit-0",
            "content": "import { useNavigate } from \"react-router-dom\"\r\nimport Button from \"../ui/Button\"\r\nimport { SubHeader } from \"./SubHeader\"\r\nimport { useAuth } from \"../../context/AuthProvider\"\r\nimport { SERVERLINK } from \"../../constants\"\r\nimport { useApp } from \"../../context/AppPorvider\"\r\nimport { useSocketContext } from \"../../context/SocketContext\"\r\n//import PropTypes from \"prop-types\";\r\n\r\nconst RecentlyFriends = ({ spec, image, name, account, showMessageButton = false, showRemoveFriendButton = false, showAddFriendButton = false, showProfileButton = true, className }) => {\r\n\r\n\r\n    const { token, personalInformation } = useAuth();\r\n\r\n    const { handleFriends, handleUsersToShow, handleNotificationShow } = useApp();\r\n\r\n    const { onlineUsers } = useSocketContext();\r\n\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const id = spec;\r\n\r\n    const isOnline = onlineUsers.includes(id);\r\n\r\n    const handleFollow = async () => {\r\n\r\n        const content = personalInformation.fullName + \" Vous suit desormais.\";\r\n\r\n        const response = await fetch(SERVERLINK + '/api/profile/follow/' + id, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": token\r\n            }\r\n        });\r\n\r\n        const sendNotifs = await fetch(SERVERLINK + '/api/notifs/sendnotifs/' + id, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": token\r\n            },\r\n            body: JSON.stringify({ content })\r\n        });\r\n\r\n        handleFriends()\r\n        handleUsersToShow()\r\n        handleNotificationShow();\r\n    }\r\n\r\n    const handleUnfollow = async () => {\r\n\r\n        const response = await fetch(SERVERLINK + '/api/profile/unfollow/' + id, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": token\r\n            }\r\n        });\r\n\r\n        const answer = await response.json();\r\n\r\n        handleFriends()\r\n        handleUsersToShow()\r\n\r\n    }\r\n\r\n    const handleClick = () => {\r\n        localStorage.setItem('userToChat', JSON.stringify({ id: id, fullName: name, accounttype: account, pic: image }))\r\n        navigate('/message')\r\n    }\r\n\r\n    return (\r\n        <div className={`flex items-center justify-between gap-4 bg-white-100 p-4 hover:bg-primary-20 group rounded-xl ${className}`}>\r\n            <div className=\"flex items-center relative gap-2\">\r\n                <img src={image} alt=\"\" className=\"h-12 w-12 rounded-full\" />\r\n                <div className=\"flex flex-col\">\r\n                    <span className=\"group-hover:underline cursor-pointer\">{name} {isOnline && <span className=\"h-[10px] w-[10px] rounded-[50%] ml-2 bg-success-100 inline-block\" ></span>}</span>\r\n                    <span className=\"text-black-80 text-small-1 \">{account}</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex items-center gap-8\">\r\n                {showProfileButton && <Button variant={\"secondary\"} onClick={() => navigate(\"/profile/:id\")}>Profile</Button>}\r\n                \r\n                {showMessageButton &&  <i onClick={handleClick} className=\"bi bi-chat text-icon cursor-pointer\"></i> }\r\n                {showAddFriendButton && <Button variant={\"ghost\"}  className=\"text-primary-100\" onClick={handleFollow}>Suivre</Button>}\r\n                {showRemoveFriendButton && <Button  variant=\"ghost\" onClick={handleUnfollow} className=\"text-danger-100\">Retirer</Button> }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecentlyFriends;\r\n\r\n/*\r\nAmis.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    account: PropTypes.string.isRequired,\r\n}\r\n\r\nRecentlyFriends.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    account: PropTypes.string.isRequired,\r\n}*/\r\n"
        }
    ]
}