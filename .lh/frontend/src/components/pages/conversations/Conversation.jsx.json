{
    "sourceFile": "frontend/src/components/pages/conversations/Conversation.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 49,
            "patches": [
                {
                    "date": 1722234116578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1722234160755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,68 @@\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import {useAuth} from \"../../../context/AuthProvider.jsx\";\r\n+import {SERVERLINK} from \"../../../constants/index.js\";\r\n+import {useSocketContext} from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp;\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { onlineUsers } = useSocketContext();\r\n+\r\n+    const isOnline = onlineUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'}/>\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1`}>\r\n+                        Lorem ipsum dolor sit amet\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>Il y a 10 min</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722234172348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,84 +1,18 @@\n+/* eslint-disable no-unused-vars */\r\n import { useNavigate } from \"react-router-dom\"\r\n import React, { useEffect, useState } from \"react\";\r\n import {useAuth} from \"../../../context/AuthProvider.jsx\";\r\n import {SERVERLINK} from \"../../../constants/index.js\";\r\n import {useSocketContext} from \"../../../context/SocketContext.jsx\";\r\n import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n \r\n const Conv = ({ id, userToChat }) => {\r\n     const navigate = useNavigate();\r\n \r\n     const { token, personalInformation } = useAuth();\r\n \r\n-    const { timeSince } = useApp;\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { onlineUsers } = useSocketContext();\r\n-\r\n-    const isOnline = onlineUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'}/>\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1`}>\r\n-                        Lorem ipsum dolor sit amet\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>Il y a 10 min</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n-export default Conv;\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import {useAuth} from \"../../../context/AuthProvider.jsx\";\r\n-import {SERVERLINK} from \"../../../constants/index.js\";\r\n-import {useSocketContext} from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n     const { timeSince } = useApp();\r\n \r\n     const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n \r\n"
                },
                {
                    "date": 1722234178808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,70 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import {useAuth} from \"../../../context/AuthProvider.jsx\";\r\n+import {SERVERLINK} from \"../../../constants/index.js\";\r\n+import {useSocketContext} from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { onlineUsers } = useSocketContext();\r\n+\r\n+    const isOnline = onlineUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'}/>\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1`}>\r\n+                        Lorem ipsum dolor sit amet\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>Il y a 10 min</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722234190697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,70 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import {useAuth} from \"../../../context/AuthProvider.jsx\";\r\n+import {SERVERLINK} from \"../../../constants/index.js\";\r\n+import {useSocketContext} from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { onlineUsers } = useSocketContext();\r\n+\r\n+    const isOnline = onlineUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'}/>\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1`}>\r\n+                        Lorem ipsum dolor sit amet\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>Il y a 10 min</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722234198240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,70 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import {useAuth} from \"../../../context/AuthProvider.jsx\";\r\n+import {SERVERLINK} from \"../../../constants/index.js\";\r\n+import {useSocketContext} from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { onlineUsers } = useSocketContext();\r\n+\r\n+    const isOnline = onlineUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'}/>\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1`}>\r\n+                        Lorem ipsum dolor sit amet\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>Il y a 10 min</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722234241224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,10 @@\n                 <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'}/>\r\n                 <div className=\"flex flex-col gap-1 items-start\">\r\n                     <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n                     <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1`}>\r\n-                        Lorem ipsum dolor sit amet\r\n+                    { personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\" }\r\n+                    : { userToChat.lastmessage }\r\n                     </p>\r\n                 </div>\r\n             </div>\r\n             <div className=\"flex items-center gap-1\">\r\n"
                },
                {
                    "date": 1722234272738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n /* eslint-disable no-unused-vars */\r\n import { useNavigate } from \"react-router-dom\"\r\n import React, { useEffect, useState } from \"react\";\r\n-import {useAuth} from \"../../../context/AuthProvider.jsx\";\r\n-import {SERVERLINK} from \"../../../constants/index.js\";\r\n-import {useSocketContext} from \"../../../context/SocketContext.jsx\";\r\n+import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../../../constants/index.js\";\r\n+import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n import { useApp } from \"../../../context/AppProvider.jsx\";\r\n \r\n const Conv = ({ id, userToChat }) => {\r\n@@ -49,233 +49,23 @@\n \r\n     return (\r\n         <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n             <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'}/>\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n                 <div className=\"flex flex-col gap-1 items-start\">\r\n                     <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n                     <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1`}>\r\n-                    { personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\" }\r\n-                    : { userToChat.lastmessage }\r\n+                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n+                        : {userToChat.lastmessage}\r\n                     </p>\r\n                 </div>\r\n             </div>\r\n             <div className=\"flex items-center gap-1\">\r\n                 <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n                 ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>Il y a 10 min</p>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n             </div>\r\n         </div>\r\n     )\r\n }\r\n \r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import {useAuth} from \"../../../context/AuthProvider.jsx\";\r\n-import {SERVERLINK} from \"../../../constants/index.js\";\r\n-import {useSocketContext} from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { onlineUsers } = useSocketContext();\r\n-\r\n-    const isOnline = onlineUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'}/>\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1`}>\r\n-                        Lorem ipsum dolor sit amet\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>Il y a 10 min</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import {useAuth} from \"../../../context/AuthProvider.jsx\";\r\n-import {SERVERLINK} from \"../../../constants/index.js\";\r\n-import {useSocketContext} from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { onlineUsers } = useSocketContext();\r\n-\r\n-    const isOnline = onlineUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'}/>\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1`}>\r\n-                        Lorem ipsum dolor sit amet\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>Il y a 10 min</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import {useAuth} from \"../../../context/AuthProvider.jsx\";\r\n-import {SERVERLINK} from \"../../../constants/index.js\";\r\n-import {useSocketContext} from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { onlineUsers } = useSocketContext();\r\n-\r\n-    const isOnline = onlineUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'}/>\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1`}>\r\n-                        Lorem ipsum dolor sit amet\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>Il y a 10 min</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722234318227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../../../constants/index.js\";\r\n+import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { onlineUsers } = useSocketContext();\r\n+\r\n+    const isOnline = onlineUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1`}>\r\n+                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n+                        : {userToChat.lastmessage}\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722234329913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../../../constants/index.js\";\r\n+import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { onlineUsers } = useSocketContext();\r\n+\r\n+    const isOnline = onlineUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1`}>\r\n+                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n+                        : {userToChat.lastmessage}\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722234650131,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../../../constants/index.js\";\r\n+import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { Active } = useSocketContext();\r\n+\r\n+    const isOnline = onlineUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1`}>\r\n+                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n+                        : {userToChat.lastmessage}\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722234661276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../../../constants/index.js\";\r\n+import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1`}>\r\n+                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n+                        : {userToChat.lastmessage}\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236261882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../../../constants/index.js\";\r\n+import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-`}>\r\n+                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n+                        : {userToChat.lastmessage}\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236267105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../../../constants/index.js\";\r\n+import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[150px]`}>\r\n+                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n+                        : {userToChat.lastmessage}\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236298149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,11 +52,11 @@\n             <div className=\"flex items-center gap-2\">\r\n                 <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n                 <div className=\"flex flex-col gap-1 items-start\">\r\n                     <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[150px]`}>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[150px] overflow-hidden`}>\r\n                         {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n-                        : {userToChat.lastmessage}\r\n+                        : {userToChat.lastmessage + \"\"}\r\n                     </p>\r\n                 </div>\r\n             </div>\r\n             <div className=\"flex items-center gap-1\">\r\n@@ -67,431 +67,5 @@\n         </div>\r\n     )\r\n }\r\n \r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../../../constants/index.js\";\r\n-import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { ActiveUsers } = useSocketContext();\r\n-\r\n-    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-`}>\r\n-                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n-                        : {userToChat.lastmessage}\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../../../constants/index.js\";\r\n-import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { ActiveUsers } = useSocketContext();\r\n-\r\n-    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1`}>\r\n-                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n-                        : {userToChat.lastmessage}\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../../../constants/index.js\";\r\n-import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { Active } = useSocketContext();\r\n-\r\n-    const isOnline = onlineUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1`}>\r\n-                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n-                        : {userToChat.lastmessage}\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../../../constants/index.js\";\r\n-import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { onlineUsers } = useSocketContext();\r\n-\r\n-    const isOnline = onlineUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1`}>\r\n-                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n-                        : {userToChat.lastmessage}\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../../../constants/index.js\";\r\n-import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { onlineUsers } = useSocketContext();\r\n-\r\n-    const isOnline = onlineUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1`}>\r\n-                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n-                        : {userToChat.lastmessage}\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../../../constants/index.js\";\r\n-import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { onlineUsers } = useSocketContext();\r\n-\r\n-    const isOnline = onlineUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1`}>\r\n-                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n-                        : {userToChat.lastmessage}\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236331705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../../../constants/index.js\";\r\n+import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[150px] overflow-hidden`}>\r\n+                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n+                        : {userToChat.lastmessage}\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236360512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n             <div className=\"flex items-center gap-2\">\r\n                 <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n                 <div className=\"flex flex-col gap-1 items-start\">\r\n                     <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[150px] overflow-hidden`}>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[100px] overflow-hidden`}>\r\n                         {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n                         : {userToChat.lastmessage}\r\n                     </p>\r\n                 </div>\r\n@@ -67,76 +67,5 @@\n         </div>\r\n     )\r\n }\r\n \r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../../../constants/index.js\";\r\n-import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { ActiveUsers } = useSocketContext();\r\n-\r\n-    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[150px] overflow-hidden`}>\r\n-                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n-                        : {userToChat.lastmessage + \"\"}\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236420635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n         <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n             <div className=\"flex items-center gap-2\">\r\n                 <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n                 <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n                     <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[100px] overflow-hidden`}>\r\n                         {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n                         : {userToChat.lastmessage}\r\n                     </p>\r\n"
                },
                {
                    "date": 1722236432349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n             <div className=\"flex items-center gap-2\">\r\n                 <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n                 <div className=\"flex flex-col gap-1 items-start\">\r\n                     <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[100px] overflow-hidden`}>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[100px] overflow-hidden `}>\r\n                         {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n                         : {userToChat.lastmessage}\r\n                     </p>\r\n                 </div>\r\n"
                },
                {
                    "date": 1722236455050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../../../constants/index.js\";\r\n+import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[100px] overflow-hidden`}>\r\n+                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n+                        : {userToChat.lastmessage}\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236462544,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../../../constants/index.js\";\r\n+import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[10px] overflow-hidden`}>\r\n+                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n+                        : {userToChat.lastmessage}\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236473286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../../../constants/index.js\";\r\n+import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[100px] overflow-hidden`}>\r\n+                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n+                        : {userToChat.lastmessage}\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236483383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../../../constants/index.js\";\r\n+import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[200px] overflow-hidden`}>\r\n+                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n+                        : {userToChat.lastmessage}\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236493817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../../../constants/index.js\";\r\n+import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[250px] overflow-hidden`}>\r\n+                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n+                        : {userToChat.lastmessage}\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236500320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n             <div className=\"flex items-center gap-2\">\r\n                 <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n                 <div className=\"flex flex-col gap-1 items-start\">\r\n                     <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[250px] overflow-hidden`}>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[400px] overflow-hidden`}>\r\n                         {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n                         : {userToChat.lastmessage}\r\n                     </p>\r\n                 </div>\r\n@@ -67,360 +67,5 @@\n         </div>\r\n     )\r\n }\r\n \r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../../../constants/index.js\";\r\n-import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { ActiveUsers } = useSocketContext();\r\n-\r\n-    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[200px] overflow-hidden`}>\r\n-                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n-                        : {userToChat.lastmessage}\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../../../constants/index.js\";\r\n-import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { ActiveUsers } = useSocketContext();\r\n-\r\n-    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[100px] overflow-hidden`}>\r\n-                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n-                        : {userToChat.lastmessage}\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../../../constants/index.js\";\r\n-import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { ActiveUsers } = useSocketContext();\r\n-\r\n-    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[10px] overflow-hidden`}>\r\n-                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n-                        : {userToChat.lastmessage}\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../../../constants/index.js\";\r\n-import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { ActiveUsers } = useSocketContext();\r\n-\r\n-    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[100px] overflow-hidden`}>\r\n-                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n-                        : {userToChat.lastmessage}\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../../../constants/index.js\";\r\n-import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { ActiveUsers } = useSocketContext();\r\n-\r\n-    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[100px] overflow-hidden `}>\r\n-                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n-                        : {userToChat.lastmessage}\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236500400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../../../constants/index.js\";\r\n+import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[400px] overflow-hidden`}>\r\n+                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n+                        : {userToChat.lastmessage}\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236508887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../../../constants/index.js\";\r\n+import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[400px] overflow-hidden`}>\r\n+                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n+                        : {userToChat.lastmessage}\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236519549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../../../constants/index.js\";\r\n+import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[400px] overflow-hidden`}>\r\n+                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n+                        : {userToChat.lastmessage}\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236542484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,8 +53,11 @@\n                 <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n                 <div className=\"flex flex-col gap-1 items-start\">\r\n                     <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n                     <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[400px] overflow-hidden`}>\r\n+                        <span>\r\n+                            \r\n+                        </span>\r\n                         {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n                         : {userToChat.lastmessage}\r\n                     </p>\r\n                 </div>\r\n@@ -67,218 +70,5 @@\n         </div>\r\n     )\r\n }\r\n \r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../../../constants/index.js\";\r\n-import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { ActiveUsers } = useSocketContext();\r\n-\r\n-    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[400px] overflow-hidden`}>\r\n-                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n-                        : {userToChat.lastmessage}\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../../../constants/index.js\";\r\n-import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { ActiveUsers } = useSocketContext();\r\n-\r\n-    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[400px] overflow-hidden`}>\r\n-                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n-                        : {userToChat.lastmessage}\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../../../constants/index.js\";\r\n-import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { ActiveUsers } = useSocketContext();\r\n-\r\n-    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[400px] overflow-hidden`}>\r\n-                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n-                        : {userToChat.lastmessage}\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236549046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,75 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../../../constants/index.js\";\r\n+import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[400px] overflow-hidden`}>\r\n+                        <span>\r\n+\r\n+                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n+                        </span>\r\n+                        <span></span>\r\n+                        : {userToChat.lastmessage}\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236556513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,76 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../../../constants/index.js\";\r\n+import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[400px] overflow-hidden`}>\r\n+                        <span>\r\n+\r\n+                            {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n+                        </span>\r\n+                        <span>\r\n+                            : {userToChat.lastmessage}\r\n+                        </span>\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236556619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,76 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../../../constants/index.js\";\r\n+import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[400px] overflow-hidden`}>\r\n+                        <span>\r\n+\r\n+                            {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n+                        </span>\r\n+                        <span>\r\n+                            : {userToChat.lastmessage}\r\n+                        </span>\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236569518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,11 +52,10 @@\n             <div className=\"flex items-center gap-2\">\r\n                 <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n                 <div className=\"flex flex-col gap-1 items-start\">\r\n                     <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[400px] overflow-hidden`}>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 overflow-hidden`}>\r\n                         <span>\r\n-\r\n                             {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n                         </span>\r\n                         <span>\r\n                             : {userToChat.lastmessage}\r\n@@ -72,230 +71,5 @@\n         </div>\r\n     )\r\n }\r\n \r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../../../constants/index.js\";\r\n-import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { ActiveUsers } = useSocketContext();\r\n-\r\n-    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[400px] overflow-hidden`}>\r\n-                        <span>\r\n-\r\n-                            {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n-                        </span>\r\n-                        <span>\r\n-                            : {userToChat.lastmessage}\r\n-                        </span>\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../../../constants/index.js\";\r\n-import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { ActiveUsers } = useSocketContext();\r\n-\r\n-    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[400px] overflow-hidden`}>\r\n-                        <span>\r\n-\r\n-                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n-                        </span>\r\n-                        <span></span>\r\n-                        : {userToChat.lastmessage}\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../../../constants/index.js\";\r\n-import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { ActiveUsers } = useSocketContext();\r\n-\r\n-    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 max-w-[400px] overflow-hidden`}>\r\n-                        <span>\r\n-                            \r\n-                        </span>\r\n-                        {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n-                        : {userToChat.lastmessage}\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236579915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n             <div className=\"flex items-center gap-2\">\r\n                 <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n                 <div className=\"flex flex-col gap-1 items-start\">\r\n                     <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 overflow-hidden`}>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 flex overflow-hidden`}>\r\n                         <span>\r\n                             {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n                         </span>\r\n                         <span>\r\n"
                },
                {
                    "date": 1722236593240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,75 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../../../constants/index.js\";\r\n+import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 flex overflow-hidden items`}>\r\n+                        <span>\r\n+                            {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n+                        </span>\r\n+                        <span>\r\n+                            : {userToChat.lastmessage}\r\n+                        </span>\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236599308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n             <div className=\"flex items-center gap-2\">\r\n                 <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n                 <div className=\"flex flex-col gap-1 items-start\">\r\n                     <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 flex overflow-hidden items`}>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 flex items-center`}>\r\n                         <span>\r\n                             {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n                         </span>\r\n                         <span>\r\n@@ -71,80 +71,5 @@\n         </div>\r\n     )\r\n }\r\n \r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../../../constants/index.js\";\r\n-import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { ActiveUsers } = useSocketContext();\r\n-\r\n-    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 flex overflow-hidden`}>\r\n-                        <span>\r\n-                            {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n-                        </span>\r\n-                        <span>\r\n-                            : {userToChat.lastmessage}\r\n-                        </span>\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236607541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,75 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../../../constants/index.js\";\r\n+import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 flex items-center`}>\r\n+                        <span>\r\n+                            {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n+                        </span>\r\n+                        <span>\r\n+                            {userToChat.lastmessage}\r\n+                        </span>\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236614959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,75 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../../../constants/index.js\";\r\n+import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 flex items-center`}>\r\n+                        <span>\r\n+                            {personalInformation.id === userToChat.lastsender ? \"Vous : \" : \"Nouveau\"}\r\n+                        </span>\r\n+                        <span>\r\n+                            {userToChat.lastmessage}\r\n+                        </span>\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236644656,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,11 +54,11 @@\n                 <div className=\"flex flex-col gap-1 items-start\">\r\n                     <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n                     <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 flex items-center`}>\r\n                         <span>\r\n-                            {personalInformation.id === userToChat.lastsender ? \"Vous : \" : \"Nouveau\"}\r\n+                            {personalInformation.id === userToChat.lastsender ? \"Vous : \" : \"Nouveau : \"}\r\n                         </span>\r\n-                        <span>\r\n+                        <span className=\"\">\r\n                             {userToChat.lastmessage}\r\n                         </span>\r\n                     </p>\r\n                 </div>\r\n@@ -71,155 +71,5 @@\n         </div>\r\n     )\r\n }\r\n \r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../../../constants/index.js\";\r\n-import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { ActiveUsers } = useSocketContext();\r\n-\r\n-    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 flex items-center`}>\r\n-                        <span>\r\n-                            {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n-                        </span>\r\n-                        <span>\r\n-                            {userToChat.lastmessage}\r\n-                        </span>\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../../../constants/index.js\";\r\n-import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { ActiveUsers } = useSocketContext();\r\n-\r\n-    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 flex items-center`}>\r\n-                        <span>\r\n-                            {personalInformation.id === userToChat.lastsender ? \"Vous\" : \"Nouveau\"}\r\n-                        </span>\r\n-                        <span>\r\n-                            : {userToChat.lastmessage}\r\n-                        </span>\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236650031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,75 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../../../constants/index.js\";\r\n+import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 flex items-center`}>\r\n+                        <span>\r\n+                            {personalInformation.id === userToChat.lastsender ? \"Vous : \" : \"Nouveau : \"}\r\n+                        </span>\r\n+                        <span className=\"max\">\r\n+                            {userToChat.lastmessage}\r\n+                        </span>\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236656389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,75 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../../../constants/index.js\";\r\n+import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 flex items-center`}>\r\n+                        <span>\r\n+                            {personalInformation.id === userToChat.lastsender ? \"Vous : \" : \"Nouveau : \"}\r\n+                        </span>\r\n+                        <span className=\"max-w-[150px]\">\r\n+                            {userToChat.lastmessage}\r\n+                        </span>\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236665042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n                     <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 flex items-center`}>\r\n                         <span>\r\n                             {personalInformation.id === userToChat.lastsender ? \"Vous : \" : \"Nouveau : \"}\r\n                         </span>\r\n-                        <span className=\"max-w-[150px]\">\r\n+                        <span className=\"max-w-[150px] overf\">\r\n                             {userToChat.lastmessage}\r\n                         </span>\r\n                     </p>\r\n                 </div>\r\n@@ -71,155 +71,5 @@\n         </div>\r\n     )\r\n }\r\n \r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../../../constants/index.js\";\r\n-import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { ActiveUsers } = useSocketContext();\r\n-\r\n-    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 flex items-center`}>\r\n-                        <span>\r\n-                            {personalInformation.id === userToChat.lastsender ? \"Vous : \" : \"Nouveau : \"}\r\n-                        </span>\r\n-                        <span className=\"max\">\r\n-                            {userToChat.lastmessage}\r\n-                        </span>\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../../../constants/index.js\";\r\n-import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { ActiveUsers } = useSocketContext();\r\n-\r\n-    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 flex items-center`}>\r\n-                        <span>\r\n-                            {personalInformation.id === userToChat.lastsender ? \"Vous : \" : \"Nouveau : \"}\r\n-                        </span>\r\n-                        <span className=\"\">\r\n-                            {userToChat.lastmessage}\r\n-                        </span>\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236683279,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,10 +56,10 @@\n                     <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 flex items-center`}>\r\n                         <span>\r\n                             {personalInformation.id === userToChat.lastsender ? \"Vous : \" : \"Nouveau : \"}\r\n                         </span>\r\n-                        <span className=\"max-w-[150px] overf\">\r\n-                            {userToChat.lastmessage}\r\n+                        <span className=\"max-w-[150px] overflow-hidden\">\r\n+                            {\"userToChat.lastmessage}\r\n                         </span>\r\n                     </p>\r\n                 </div>\r\n             </div>\r\n"
                },
                {
                    "date": 1722236703393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,10 +56,10 @@\n                     <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 flex items-center`}>\r\n                         <span>\r\n                             {personalInformation.id === userToChat.lastsender ? \"Vous : \" : \"Nouveau : \"}\r\n                         </span>\r\n-                        <span className=\"max-w-[150px] overflow-hidden\">\r\n-                            {\"userToChat.lastmessage}\r\n+                        <span className=\"max-w-[150px] overflow-hidden pl=\">\r\n+                            {\" \" + userToChat.lastmessage}\r\n                         </span>\r\n                     </p>\r\n                 </div>\r\n             </div>\r\n"
                },
                {
                    "date": 1722236714871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,75 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../../../constants/index.js\";\r\n+import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 flex items-center`}>\r\n+                        <span>\r\n+                            {personalInformation.id === userToChat.lastsender ? \"Vous : \" : \"Nouveau : \"}\r\n+                        </span>\r\n+                        <span className=\"max-w-[150px] overflow-hidden\">\r\n+                            {\" \" + userToChat.lastmessage}\r\n+                        </span>\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236728124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n             <div className=\"flex items-center gap-2\">\r\n                 <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n                 <div className=\"flex flex-col gap-1 items-start\">\r\n                     <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 flex items-center`}>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 flex items-center gap`}>\r\n                         <span>\r\n                             {personalInformation.id === userToChat.lastsender ? \"Vous : \" : \"Nouveau : \"}\r\n                         </span>\r\n                         <span className=\"max-w-[150px] overflow-hidden\">\r\n@@ -71,80 +71,5 @@\n         </div>\r\n     )\r\n }\r\n \r\n-export default Conv;\n-/* eslint-disable no-unused-vars */\r\n-import { useNavigate } from \"react-router-dom\"\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n-import { SERVERLINK } from \"../../../constants/index.js\";\r\n-import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n-import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n-import { useApp } from \"../../../context/AppProvider.jsx\";\r\n-\r\n-const Conv = ({ id, userToChat }) => {\r\n-    const navigate = useNavigate();\r\n-\r\n-    const { token, personalInformation } = useAuth();\r\n-\r\n-    const { timeSince } = useApp();\r\n-\r\n-    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n-\r\n-    const [isViewed, setViewed] = useState(false);\r\n-\r\n-    const handleClick = () => {\r\n-        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n-        navigate('/message')\r\n-    }\r\n-\r\n-    const { ActiveUsers } = useSocketContext();\r\n-\r\n-    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n-\r\n-    useEffect(() => {\r\n-\r\n-        // console.log(ActiveUsers);\r\n-        const verifyStatus = async () => {\r\n-\r\n-            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"Content-Type\": \"application/json\",\r\n-                    \"token\": token\r\n-                }\r\n-            })\r\n-\r\n-            const verification = await response.json();\r\n-\r\n-            setViewed(await verification.allSeen);\r\n-        }\r\n-        verifyStatus();\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n-            <div className=\"flex items-center gap-2\">\r\n-                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n-                <div className=\"flex flex-col gap-1 items-start\">\r\n-                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 flex items-center`}>\r\n-                        <span>\r\n-                            {personalInformation.id === userToChat.lastsender ? \"Vous : \" : \"Nouveau : \"}\r\n-                        </span>\r\n-                        <span className=\"max-w-[150px] overflow-hidden pl=\">\r\n-                            {\" \" + userToChat.lastmessage}\r\n-                        </span>\r\n-                    </p>\r\n-                </div>\r\n-            </div>\r\n-            <div className=\"flex items-center gap-1\">\r\n-                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n-                ></div>\r\n-                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n export default Conv;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722236745568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,15 +52,16 @@\n             <div className=\"flex items-center gap-2\">\r\n                 <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n                 <div className=\"flex flex-col gap-1 items-start\">\r\n                     <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n-                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 flex items-center gap`}>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 flex items-center gap-1`}>\r\n                         <span>\r\n                             {personalInformation.id === userToChat.lastsender ? \"Vous : \" : \"Nouveau : \"}\r\n                         </span>\r\n                         <span className=\"max-w-[150px] overflow-hidden\">\r\n                             {\" \" + userToChat.lastmessage}\r\n                         </span>\r\n+                        <span></span>\r\n                     </p>\r\n                 </div>\r\n             </div>\r\n             <div className=\"flex items-center gap-1\">\r\n"
                },
                {
                    "date": 1722239914710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,11 @@\n \r\n     return (\r\n         <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n             <div className=\"flex items-center gap-2\">\r\n+                <div>\r\n+                    \r\n+                </div>\r\n                 <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n                 <div className=\"flex flex-col gap-1 items-start\">\r\n                     <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n                     <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 flex items-center gap-1`}>\r\n@@ -59,9 +62,9 @@\n                         </span>\r\n                         <span className=\"max-w-[150px] overflow-hidden\">\r\n                             {\" \" + userToChat.lastmessage}\r\n                         </span>\r\n-                        <span></span>\r\n+                        <span>...</span>\r\n                     </p>\r\n                 </div>\r\n             </div>\r\n             <div className=\"flex items-center gap-1\">\r\n"
                },
                {
                    "date": 1722239920813,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,8 @@\n     return (\r\n         <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n             <div className=\"flex items-center gap-2\">\r\n                 <div>\r\n-\r\n                     <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n                 </div>\r\n                 <div className=\"flex flex-col gap-1 items-start\">\r\n                     <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n"
                },
                {
                    "date": 1722239977763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,79 @@\n+/* eslint-disable no-unused-vars */\r\n+import { useNavigate } from \"react-router-dom\"\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useAuth } from \"../../../context/AuthProvider.jsx\";\r\n+import { SERVERLINK } from \"../../../constants/index.js\";\r\n+import { useSocketContext } from \"../../../context/SocketContext.jsx\";\r\n+import ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n+import { useApp } from \"../../../context/AppProvider.jsx\";\r\n+\r\n+const Conv = ({ id, userToChat }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n+    const { token, personalInformation } = useAuth();\r\n+\r\n+    const { timeSince } = useApp();\r\n+\r\n+    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n+\r\n+    const [isViewed, setViewed] = useState(false);\r\n+\r\n+    const handleClick = () => {\r\n+        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n+        navigate('/message')\r\n+    }\r\n+\r\n+    const { ActiveUsers } = useSocketContext();\r\n+\r\n+    const isOnline = ActiveUsers.includes(userToChat.userid);\r\n+\r\n+    useEffect(() => {\r\n+\r\n+        // console.log(ActiveUsers);\r\n+        const verifyStatus = async () => {\r\n+\r\n+            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"Content-Type\": \"application/json\",\r\n+                    \"token\": token\r\n+                }\r\n+            })\r\n+\r\n+            const verification = await response.json();\r\n+\r\n+            setViewed(await verification.allSeen);\r\n+        }\r\n+        verifyStatus();\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n+            <div className=\"flex items-center gap-2\">\r\n+                <div className=\"relative\">\r\n+                    <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'} />\r\n+                    {isOnline ? <span className=\"h-[10px] w-[10px] rounded-[50%] ml-2 bg-success-100 inline-block\" ></span> : null}\r\n+                </div>\r\n+                <div className=\"flex flex-col gap-1 items-start\">\r\n+                    <p className=\"text-black-150 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n+                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1 flex items-center gap-1`}>\r\n+                        <span>\r\n+                            {personalInformation.id === userToChat.lastsender ? \"Vous : \" : \"Nouveau : \"}\r\n+                        </span>\r\n+                        <span className=\"max-w-[150px] overflow-hidden\">\r\n+                            {\" \" + userToChat.lastmessage}\r\n+                        </span>\r\n+                        <span>...</span>\r\n+                    </p>\r\n+                </div>\r\n+            </div>\r\n+            <div className=\"flex items-center gap-1\">\r\n+                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n+                ></div>\r\n+                <p className={\"text-small-2 text-black-80 font-light\"}>{timeSince(userToChat.lastdate, 3)}</p>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Conv;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1722234116577,
            "name": "Commit-0",
            "content": "import { useNavigate } from \"react-router-dom\"\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {useAuth} from \"../../../context/AuthProvider.jsx\";\r\nimport {SERVERLINK} from \"../../../constants/index.js\";\r\nimport {useSocketContext} from \"../../../context/SocketContext.jsx\";\r\nimport ProfileImage from \"../../../assets/images/OIP.jpg\";\r\n\r\nconst Conv = ({ id, userToChat }) => {\r\n    const navigate = useNavigate();\r\n\r\n    const { token, personalInformation } = useAuth();\r\n\r\n    const { timeSince } = useApp();\r\n\r\n    const image = SERVERLINK + \"/\" + userToChat?.profileimage;\r\n\r\n    const [isViewed, setViewed] = useState(false);\r\n\r\n    const handleClick = () => {\r\n        localStorage.setItem('userToChat', JSON.stringify({ id: userToChat.userid, fullName: userToChat.firstname + \" \" + userToChat.lastname, accounttype: userToChat.accounttype, pic: image }))\r\n        navigate('/message')\r\n    }\r\n\r\n    const { onlineUsers } = useSocketContext();\r\n\r\n    const isOnline = onlineUsers.includes(userToChat.userid);\r\n\r\n    useEffect(() => {\r\n\r\n        // console.log(ActiveUsers);\r\n        const verifyStatus = async () => {\r\n\r\n            const response = await fetch(SERVERLINK + \"/api/messages/seen/\" + userToChat.userid, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"token\": token\r\n                }\r\n            })\r\n\r\n            const verification = await response.json();\r\n\r\n            setViewed(await verification.allSeen);\r\n        }\r\n        verifyStatus();\r\n    }, [])\r\n\r\n    return (\r\n        <div className={`flex select-none items-center justify-between cursor-pointer w-full hover:bg-primary-20 p-6 rounded-xl ${isViewed ? 'bg-white-100' : 'bg-primary-20'}`} onClick={handleClick}>\r\n            <div className=\"flex items-center gap-2\">\r\n                <img className=\"size-[40px] object-cover rounded-full\" src={image || '../../assets/images/OIP.jpg'}/>\r\n                <div className=\"flex flex-col gap-1 items-start\">\r\n                    <p className=\"text-black-100 text-small-1\">{userToChat.firstname + \" \" + userToChat.lastname}  ({userToChat.accounttype})</p>\r\n                    <p className={`${isViewed ? 'text-black-80' : 'text-black-100 font-bold'} text-small-1`}>\r\n                        Lorem ipsum dolor sit amet\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex items-center gap-1\">\r\n                <div className={`size-[10px] rounded-full ${isViewed ? \"bg-black-60\" : \"bg-primary-100\"}`}\r\n                ></div>\r\n                <p className={\"text-small-2 text-black-80 font-light\"}>Il y a 10 min</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Conv;"
        }
    ]
}