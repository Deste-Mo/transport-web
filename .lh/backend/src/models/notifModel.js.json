{
    "sourceFile": "backend/src/models/notifModel.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 19,
            "patches": [
                {
                    "date": 1722270576312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1722270587435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,8 +74,10 @@\n     const result = await pool.query(query, [notifId]);\r\n  \r\n     return result.rows[0];\r\n  }\r\n+\r\n+ // GET count de notif unread\r\n  export const setViewNotification = async (notifId) => {\r\n     const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n  \r\n     const result = await pool.query(query, [notifId]);\r\n"
                },
                {
                    "date": 1722270596299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+import pool from '../db/connexion.js';\r\n+\r\n+export const allNotifs = async (userId) => {\r\n+\r\n+    const query = \"SELECT *, S.sendnotifid FROM notifications N INNER JOIN sendnotification S ON N.notifid = S.notifid WHERE S.userid = $1 ORDER BY N.notifid DESC\";\r\n+\r\n+    const { rows } = await pool.query(query, [userId]);\r\n+\r\n+    // console.log(rows[0])\r\n+\r\n+    return rows;\r\n+}\r\n+\r\n+export const createNotifs = async (senderId, content) => {\r\n+\r\n+    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n+\r\n+    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) SELECT followerid,$2 FROM follow WHERE followeeid = $1 RETURNING *\";\r\n+\r\n+    const follower = \"SELECT followerid FROM follow WHERE followeeid = $1\";\r\n+\r\n+    const { rows } = await pool.query(query, [senderId, content]);\r\n+\r\n+    const notifid = rows[0].notifid;\r\n+\r\n+    const rows_1 = (await pool.query(sendNotif, [senderId, notifid])).rows;\r\n+\r\n+    const followerId = (await pool.query(follower, [senderId])).rows;\r\n+\r\n+    return {  notification: rows[0], sendNotif: rows_1[0], followerId }\r\n+}\r\n+\r\n+export const createNotifsOne = async (userId, senderId, content) => {\r\n+\r\n+    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n+\r\n+    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) VALUES ($1, $2) RETURNING *\"\r\n+\r\n+    const { rows } = await pool.query(query, [senderId, content]);\r\n+\r\n+    const notifid = await rows[0].notifid;\r\n+\r\n+    const rows_1 = (await pool.query(sendNotif, [userId, notifid])).rows;\r\n+\r\n+    return {  notification: rows[0], sendNotif: rows_1[0] }\r\n+}\r\n+\r\n+\r\n+//delete all notifications\r\n+\r\n+export const deleteAllNotifications = async (userId) =>{\r\n+    const query = \"DELETE FROM sendnotification WHERE userId = $1\";\r\n+ \r\n+    const result = await pool.query(query, [userId]);\r\n+ \r\n+    return result.rowCount;\r\n+ \r\n+}\r\n+ \r\n+ // delete a notification\r\n+ \r\n+ export const deleteNotificationById = async (notifId) =>{\r\n+    const query = \"DELETE FROM sendnotification WHERE sendnotifid = $1\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rowCount;\r\n+ }\r\n+ \r\n+ // set views a notification\r\n+ export const setViewNotification = async (notifId) => {\r\n+    const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rows[0];\r\n+ }\r\n+\r\n+ // GET count de notif unread\r\n+ export const getCountNotification = async (notifId) => {\r\n+    const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rows[0];\r\n+ }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722270602944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,97 +76,11 @@\n     return result.rows[0];\r\n  }\r\n \r\n  // GET count de notif unread\r\n- export const getCountNotification = async (notifId) => {\r\n+ export const getCountNotifUnread = async (notifId) => {\r\n     const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n  \r\n     const result = await pool.query(query, [notifId]);\r\n  \r\n     return result.rows[0];\r\n- }\n-import pool from '../db/connexion.js';\r\n-\r\n-export const allNotifs = async (userId) => {\r\n-\r\n-    const query = \"SELECT *, S.sendnotifid FROM notifications N INNER JOIN sendnotification S ON N.notifid = S.notifid WHERE S.userid = $1 ORDER BY N.notifid DESC\";\r\n-\r\n-    const { rows } = await pool.query(query, [userId]);\r\n-\r\n-    // console.log(rows[0])\r\n-\r\n-    return rows;\r\n-}\r\n-\r\n-export const createNotifs = async (senderId, content) => {\r\n-\r\n-    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n-\r\n-    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) SELECT followerid,$2 FROM follow WHERE followeeid = $1 RETURNING *\";\r\n-\r\n-    const follower = \"SELECT followerid FROM follow WHERE followeeid = $1\";\r\n-\r\n-    const { rows } = await pool.query(query, [senderId, content]);\r\n-\r\n-    const notifid = rows[0].notifid;\r\n-\r\n-    const rows_1 = (await pool.query(sendNotif, [senderId, notifid])).rows;\r\n-\r\n-    const followerId = (await pool.query(follower, [senderId])).rows;\r\n-\r\n-    return {  notification: rows[0], sendNotif: rows_1[0], followerId }\r\n-}\r\n-\r\n-export const createNotifsOne = async (userId, senderId, content) => {\r\n-\r\n-    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n-\r\n-    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) VALUES ($1, $2) RETURNING *\"\r\n-\r\n-    const { rows } = await pool.query(query, [senderId, content]);\r\n-\r\n-    const notifid = await rows[0].notifid;\r\n-\r\n-    const rows_1 = (await pool.query(sendNotif, [userId, notifid])).rows;\r\n-\r\n-    return {  notification: rows[0], sendNotif: rows_1[0] }\r\n-}\r\n-\r\n-\r\n-//delete all notifications\r\n-\r\n-export const deleteAllNotifications = async (userId) =>{\r\n-    const query = \"DELETE FROM sendnotification WHERE userId = $1\";\r\n- \r\n-    const result = await pool.query(query, [userId]);\r\n- \r\n-    return result.rowCount;\r\n- \r\n-}\r\n- \r\n- // delete a notification\r\n- \r\n- export const deleteNotificationById = async (notifId) =>{\r\n-    const query = \"DELETE FROM sendnotification WHERE sendnotifid = $1\";\r\n- \r\n-    const result = await pool.query(query, [notifId]);\r\n- \r\n-    return result.rowCount;\r\n- }\r\n- \r\n- // set views a notification\r\n- export const setViewNotification = async (notifId) => {\r\n-    const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n- \r\n-    const result = await pool.query(query, [notifId]);\r\n- \r\n-    return result.rows[0];\r\n- }\r\n-\r\n- // GET count de notif unread\r\n- export const setViewNotification = async (notifId) => {\r\n-    const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n- \r\n-    const result = await pool.query(query, [notifId]);\r\n- \r\n-    return result.rows[0];\r\n  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722270608706,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n     return result.rows[0];\r\n  }\r\n \r\n  // GET count de notif unread\r\n- export const getCountNotifUnread = async (notifId) => {\r\n+ export const getCountNotifUnread = async () => {\r\n     const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n  \r\n     const result = await pool.query(query, [notifId]);\r\n  \r\n"
                },
                {
                    "date": 1722270619263,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+import pool from '../db/connexion.js';\r\n+\r\n+export const allNotifs = async (userId) => {\r\n+\r\n+    const query = \"SELECT *, S.sendnotifid FROM notifications N INNER JOIN sendnotification S ON N.notifid = S.notifid WHERE S.userid = $1 ORDER BY N.notifid DESC\";\r\n+\r\n+    const { rows } = await pool.query(query, [userId]);\r\n+\r\n+    // console.log(rows[0])\r\n+\r\n+    return rows;\r\n+}\r\n+\r\n+export const createNotifs = async (senderId, content) => {\r\n+\r\n+    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n+\r\n+    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) SELECT followerid,$2 FROM follow WHERE followeeid = $1 RETURNING *\";\r\n+\r\n+    const follower = \"SELECT followerid FROM follow WHERE followeeid = $1\";\r\n+\r\n+    const { rows } = await pool.query(query, [senderId, content]);\r\n+\r\n+    const notifid = rows[0].notifid;\r\n+\r\n+    const rows_1 = (await pool.query(sendNotif, [senderId, notifid])).rows;\r\n+\r\n+    const followerId = (await pool.query(follower, [senderId])).rows;\r\n+\r\n+    return {  notification: rows[0], sendNotif: rows_1[0], followerId }\r\n+}\r\n+\r\n+export const createNotifsOne = async (userId, senderId, content) => {\r\n+\r\n+    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n+\r\n+    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) VALUES ($1, $2) RETURNING *\"\r\n+\r\n+    const { rows } = await pool.query(query, [senderId, content]);\r\n+\r\n+    const notifid = await rows[0].notifid;\r\n+\r\n+    const rows_1 = (await pool.query(sendNotif, [userId, notifid])).rows;\r\n+\r\n+    return {  notification: rows[0], sendNotif: rows_1[0] }\r\n+}\r\n+\r\n+\r\n+//delete all notifications\r\n+\r\n+export const deleteAllNotifications = async (userId) =>{\r\n+    const query = \"DELETE FROM sendnotification WHERE userId = $1\";\r\n+ \r\n+    const result = await pool.query(query, [userId]);\r\n+ \r\n+    return result.rowCount;\r\n+ \r\n+}\r\n+ \r\n+ // delete a notification\r\n+ \r\n+ export const deleteNotificationById = async (notifId) =>{\r\n+    const query = \"DELETE FROM sendnotification WHERE sendnotifid = $1\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rowCount;\r\n+ }\r\n+ \r\n+ // set views a notification\r\n+ export const setViewNotification = async (notifId) => {\r\n+    const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rows[0];\r\n+ }\r\n+\r\n+ // GET count de notif unread\r\n+ export const getCountNotifUnread = async () => {\r\n+    const query = \"SELECT \";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rows[0];\r\n+ }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722270624772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+import pool from '../db/connexion.js';\r\n+\r\n+export const allNotifs = async (userId) => {\r\n+\r\n+    const query = \"SELECT *, S.sendnotifid FROM notifications N INNER JOIN sendnotification S ON N.notifid = S.notifid WHERE S.userid = $1 ORDER BY N.notifid DESC\";\r\n+\r\n+    const { rows } = await pool.query(query, [userId]);\r\n+\r\n+    // console.log(rows[0])\r\n+\r\n+    return rows;\r\n+}\r\n+\r\n+export const createNotifs = async (senderId, content) => {\r\n+\r\n+    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n+\r\n+    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) SELECT followerid,$2 FROM follow WHERE followeeid = $1 RETURNING *\";\r\n+\r\n+    const follower = \"SELECT followerid FROM follow WHERE followeeid = $1\";\r\n+\r\n+    const { rows } = await pool.query(query, [senderId, content]);\r\n+\r\n+    const notifid = rows[0].notifid;\r\n+\r\n+    const rows_1 = (await pool.query(sendNotif, [senderId, notifid])).rows;\r\n+\r\n+    const followerId = (await pool.query(follower, [senderId])).rows;\r\n+\r\n+    return {  notification: rows[0], sendNotif: rows_1[0], followerId }\r\n+}\r\n+\r\n+export const createNotifsOne = async (userId, senderId, content) => {\r\n+\r\n+    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n+\r\n+    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) VALUES ($1, $2) RETURNING *\"\r\n+\r\n+    const { rows } = await pool.query(query, [senderId, content]);\r\n+\r\n+    const notifid = await rows[0].notifid;\r\n+\r\n+    const rows_1 = (await pool.query(sendNotif, [userId, notifid])).rows;\r\n+\r\n+    return {  notification: rows[0], sendNotif: rows_1[0] }\r\n+}\r\n+\r\n+\r\n+//delete all notifications\r\n+\r\n+export const deleteAllNotifications = async (userId) =>{\r\n+    const query = \"DELETE FROM sendnotification WHERE userId = $1\";\r\n+ \r\n+    const result = await pool.query(query, [userId]);\r\n+ \r\n+    return result.rowCount;\r\n+ \r\n+}\r\n+ \r\n+ // delete a notification\r\n+ \r\n+ export const deleteNotificationById = async (notifId) =>{\r\n+    const query = \"DELETE FROM sendnotification WHERE sendnotifid = $1\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rowCount;\r\n+ }\r\n+ \r\n+ // set views a notification\r\n+ export const setViewNotification = async (notifId) => {\r\n+    const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rows[0];\r\n+ }\r\n+\r\n+ // GET count de notif unread\r\n+ export const getCountNotifUnread = async () => {\r\n+    const query = \"SELECT count()\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rows[0];\r\n+ }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722270649565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+import pool from '../db/connexion.js';\r\n+\r\n+export const allNotifs = async (userId) => {\r\n+\r\n+    const query = \"SELECT *, S.sendnotifid FROM notifications N INNER JOIN sendnotification S ON N.notifid = S.notifid WHERE S.userid = $1 ORDER BY N.notifid DESC\";\r\n+\r\n+    const { rows } = await pool.query(query, [userId]);\r\n+\r\n+    // console.log(rows[0])\r\n+\r\n+    return rows;\r\n+}\r\n+\r\n+export const createNotifs = async (senderId, content) => {\r\n+\r\n+    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n+\r\n+    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) SELECT followerid,$2 FROM follow WHERE followeeid = $1 RETURNING *\";\r\n+\r\n+    const follower = \"SELECT followerid FROM follow WHERE followeeid = $1\";\r\n+\r\n+    const { rows } = await pool.query(query, [senderId, content]);\r\n+\r\n+    const notifid = rows[0].notifid;\r\n+\r\n+    const rows_1 = (await pool.query(sendNotif, [senderId, notifid])).rows;\r\n+\r\n+    const followerId = (await pool.query(follower, [senderId])).rows;\r\n+\r\n+    return {  notification: rows[0], sendNotif: rows_1[0], followerId }\r\n+}\r\n+\r\n+export const createNotifsOne = async (userId, senderId, content) => {\r\n+\r\n+    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n+\r\n+    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) VALUES ($1, $2) RETURNING *\"\r\n+\r\n+    const { rows } = await pool.query(query, [senderId, content]);\r\n+\r\n+    const notifid = await rows[0].notifid;\r\n+\r\n+    const rows_1 = (await pool.query(sendNotif, [userId, notifid])).rows;\r\n+\r\n+    return {  notification: rows[0], sendNotif: rows_1[0] }\r\n+}\r\n+\r\n+\r\n+//delete all notifications\r\n+\r\n+export const deleteAllNotifications = async (userId) =>{\r\n+    const query = \"DELETE FROM sendnotification WHERE userId = $1\";\r\n+ \r\n+    const result = await pool.query(query, [userId]);\r\n+ \r\n+    return result.rowCount;\r\n+ \r\n+}\r\n+ \r\n+ // delete a notification\r\n+ \r\n+ export const deleteNotificationById = async (notifId) =>{\r\n+    const query = \"DELETE FROM sendnotification WHERE sendnotifid = $1\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rowCount;\r\n+ }\r\n+ \r\n+ // set views a notification\r\n+ export const setViewNotification = async (notifId) => {\r\n+    const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rows[0];\r\n+ }\r\n+\r\n+ // GET count de notif unread\r\n+ export const getCountNotifUnread = async () => {\r\n+    const query = \"SELECT count(send)\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rows[0];\r\n+ }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722270662131,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+import pool from '../db/connexion.js';\r\n+\r\n+export const allNotifs = async (userId) => {\r\n+\r\n+    const query = \"SELECT *, S.sendnotifid FROM notifications N INNER JOIN sendnotification S ON N.notifid = S.notifid WHERE S.userid = $1 ORDER BY N.notifid DESC\";\r\n+\r\n+    const { rows } = await pool.query(query, [userId]);\r\n+\r\n+    // console.log(rows[0])\r\n+\r\n+    return rows;\r\n+}\r\n+\r\n+export const createNotifs = async (senderId, content) => {\r\n+\r\n+    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n+\r\n+    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) SELECT followerid,$2 FROM follow WHERE followeeid = $1 RETURNING *\";\r\n+\r\n+    const follower = \"SELECT followerid FROM follow WHERE followeeid = $1\";\r\n+\r\n+    const { rows } = await pool.query(query, [senderId, content]);\r\n+\r\n+    const notifid = rows[0].notifid;\r\n+\r\n+    const rows_1 = (await pool.query(sendNotif, [senderId, notifid])).rows;\r\n+\r\n+    const followerId = (await pool.query(follower, [senderId])).rows;\r\n+\r\n+    return {  notification: rows[0], sendNotif: rows_1[0], followerId }\r\n+}\r\n+\r\n+export const createNotifsOne = async (userId, senderId, content) => {\r\n+\r\n+    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n+\r\n+    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) VALUES ($1, $2) RETURNING *\"\r\n+\r\n+    const { rows } = await pool.query(query, [senderId, content]);\r\n+\r\n+    const notifid = await rows[0].notifid;\r\n+\r\n+    const rows_1 = (await pool.query(sendNotif, [userId, notifid])).rows;\r\n+\r\n+    return {  notification: rows[0], sendNotif: rows_1[0] }\r\n+}\r\n+\r\n+\r\n+//delete all notifications\r\n+\r\n+export const deleteAllNotifications = async (userId) =>{\r\n+    const query = \"DELETE FROM sendnotification WHERE userId = $1\";\r\n+ \r\n+    const result = await pool.query(query, [userId]);\r\n+ \r\n+    return result.rowCount;\r\n+ \r\n+}\r\n+ \r\n+ // delete a notification\r\n+ \r\n+ export const deleteNotificationById = async (notifId) =>{\r\n+    const query = \"DELETE FROM sendnotification WHERE sendnotifid = $1\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rowCount;\r\n+ }\r\n+ \r\n+ // set views a notification\r\n+ export const setViewNotification = async (notifId) => {\r\n+    const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rows[0];\r\n+ }\r\n+\r\n+ // GET count de notif unread\r\n+ export const getCountNotifUnread = async () => {\r\n+    const query = \"SELECT count(sendnotifid) FROM send\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rows[0];\r\n+ }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722270675801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+import pool from '../db/connexion.js';\r\n+\r\n+export const allNotifs = async (userId) => {\r\n+\r\n+    const query = \"SELECT *, S.sendnotifid FROM notifications N INNER JOIN sendnotification S ON N.notifid = S.notifid WHERE S.userid = $1 ORDER BY N.notifid DESC\";\r\n+\r\n+    const { rows } = await pool.query(query, [userId]);\r\n+\r\n+    // console.log(rows[0])\r\n+\r\n+    return rows;\r\n+}\r\n+\r\n+export const createNotifs = async (senderId, content) => {\r\n+\r\n+    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n+\r\n+    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) SELECT followerid,$2 FROM follow WHERE followeeid = $1 RETURNING *\";\r\n+\r\n+    const follower = \"SELECT followerid FROM follow WHERE followeeid = $1\";\r\n+\r\n+    const { rows } = await pool.query(query, [senderId, content]);\r\n+\r\n+    const notifid = rows[0].notifid;\r\n+\r\n+    const rows_1 = (await pool.query(sendNotif, [senderId, notifid])).rows;\r\n+\r\n+    const followerId = (await pool.query(follower, [senderId])).rows;\r\n+\r\n+    return {  notification: rows[0], sendNotif: rows_1[0], followerId }\r\n+}\r\n+\r\n+export const createNotifsOne = async (userId, senderId, content) => {\r\n+\r\n+    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n+\r\n+    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) VALUES ($1, $2) RETURNING *\"\r\n+\r\n+    const { rows } = await pool.query(query, [senderId, content]);\r\n+\r\n+    const notifid = await rows[0].notifid;\r\n+\r\n+    const rows_1 = (await pool.query(sendNotif, [userId, notifid])).rows;\r\n+\r\n+    return {  notification: rows[0], sendNotif: rows_1[0] }\r\n+}\r\n+\r\n+\r\n+//delete all notifications\r\n+\r\n+export const deleteAllNotifications = async (userId) =>{\r\n+    const query = \"DELETE FROM sendnotification WHERE userId = $1\";\r\n+ \r\n+    const result = await pool.query(query, [userId]);\r\n+ \r\n+    return result.rowCount;\r\n+ \r\n+}\r\n+ \r\n+ // delete a notification\r\n+ \r\n+ export const deleteNotificationById = async (notifId) =>{\r\n+    const query = \"DELETE FROM sendnotification WHERE sendnotifid = $1\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rowCount;\r\n+ }\r\n+ \r\n+ // set views a notification\r\n+ export const setViewNotification = async (notifId) => {\r\n+    const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rows[0];\r\n+ }\r\n+\r\n+ // GET count de notif unread\r\n+ export const getCountNotifUnread = async () => {\r\n+    const query = \"SELECT count(sendnotifid) FROM sendnotif WHERE userid = \";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rows[0];\r\n+ }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722270680988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+import pool from '../db/connexion.js';\r\n+\r\n+export const allNotifs = async (userId) => {\r\n+\r\n+    const query = \"SELECT *, S.sendnotifid FROM notifications N INNER JOIN sendnotification S ON N.notifid = S.notifid WHERE S.userid = $1 ORDER BY N.notifid DESC\";\r\n+\r\n+    const { rows } = await pool.query(query, [userId]);\r\n+\r\n+    // console.log(rows[0])\r\n+\r\n+    return rows;\r\n+}\r\n+\r\n+export const createNotifs = async (senderId, content) => {\r\n+\r\n+    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n+\r\n+    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) SELECT followerid,$2 FROM follow WHERE followeeid = $1 RETURNING *\";\r\n+\r\n+    const follower = \"SELECT followerid FROM follow WHERE followeeid = $1\";\r\n+\r\n+    const { rows } = await pool.query(query, [senderId, content]);\r\n+\r\n+    const notifid = rows[0].notifid;\r\n+\r\n+    const rows_1 = (await pool.query(sendNotif, [senderId, notifid])).rows;\r\n+\r\n+    const followerId = (await pool.query(follower, [senderId])).rows;\r\n+\r\n+    return {  notification: rows[0], sendNotif: rows_1[0], followerId }\r\n+}\r\n+\r\n+export const createNotifsOne = async (userId, senderId, content) => {\r\n+\r\n+    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n+\r\n+    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) VALUES ($1, $2) RETURNING *\"\r\n+\r\n+    const { rows } = await pool.query(query, [senderId, content]);\r\n+\r\n+    const notifid = await rows[0].notifid;\r\n+\r\n+    const rows_1 = (await pool.query(sendNotif, [userId, notifid])).rows;\r\n+\r\n+    return {  notification: rows[0], sendNotif: rows_1[0] }\r\n+}\r\n+\r\n+\r\n+//delete all notifications\r\n+\r\n+export const deleteAllNotifications = async (userId) =>{\r\n+    const query = \"DELETE FROM sendnotification WHERE userId = $1\";\r\n+ \r\n+    const result = await pool.query(query, [userId]);\r\n+ \r\n+    return result.rowCount;\r\n+ \r\n+}\r\n+ \r\n+ // delete a notification\r\n+ \r\n+ export const deleteNotificationById = async (notifId) =>{\r\n+    const query = \"DELETE FROM sendnotification WHERE sendnotifid = $1\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rowCount;\r\n+ }\r\n+ \r\n+ // set views a notification\r\n+ export const setViewNotification = async (notifId) => {\r\n+    const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rows[0];\r\n+ }\r\n+\r\n+ // GET count de notif unread\r\n+ export const getCountNotifUnread = async () => {\r\n+    const query = \"SELECT count(sendnotifid) FROM sendnotif WHERE userid = $1 AND \";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rows[0];\r\n+ }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722270686515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+import pool from '../db/connexion.js';\r\n+\r\n+export const allNotifs = async (userId) => {\r\n+\r\n+    const query = \"SELECT *, S.sendnotifid FROM notifications N INNER JOIN sendnotification S ON N.notifid = S.notifid WHERE S.userid = $1 ORDER BY N.notifid DESC\";\r\n+\r\n+    const { rows } = await pool.query(query, [userId]);\r\n+\r\n+    // console.log(rows[0])\r\n+\r\n+    return rows;\r\n+}\r\n+\r\n+export const createNotifs = async (senderId, content) => {\r\n+\r\n+    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n+\r\n+    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) SELECT followerid,$2 FROM follow WHERE followeeid = $1 RETURNING *\";\r\n+\r\n+    const follower = \"SELECT followerid FROM follow WHERE followeeid = $1\";\r\n+\r\n+    const { rows } = await pool.query(query, [senderId, content]);\r\n+\r\n+    const notifid = rows[0].notifid;\r\n+\r\n+    const rows_1 = (await pool.query(sendNotif, [senderId, notifid])).rows;\r\n+\r\n+    const followerId = (await pool.query(follower, [senderId])).rows;\r\n+\r\n+    return {  notification: rows[0], sendNotif: rows_1[0], followerId }\r\n+}\r\n+\r\n+export const createNotifsOne = async (userId, senderId, content) => {\r\n+\r\n+    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n+\r\n+    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) VALUES ($1, $2) RETURNING *\"\r\n+\r\n+    const { rows } = await pool.query(query, [senderId, content]);\r\n+\r\n+    const notifid = await rows[0].notifid;\r\n+\r\n+    const rows_1 = (await pool.query(sendNotif, [userId, notifid])).rows;\r\n+\r\n+    return {  notification: rows[0], sendNotif: rows_1[0] }\r\n+}\r\n+\r\n+\r\n+//delete all notifications\r\n+\r\n+export const deleteAllNotifications = async (userId) =>{\r\n+    const query = \"DELETE FROM sendnotification WHERE userId = $1\";\r\n+ \r\n+    const result = await pool.query(query, [userId]);\r\n+ \r\n+    return result.rowCount;\r\n+ \r\n+}\r\n+ \r\n+ // delete a notification\r\n+ \r\n+ export const deleteNotificationById = async (notifId) =>{\r\n+    const query = \"DELETE FROM sendnotification WHERE sendnotifid = $1\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rowCount;\r\n+ }\r\n+ \r\n+ // set views a notification\r\n+ export const setViewNotification = async (notifId) => {\r\n+    const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rows[0];\r\n+ }\r\n+\r\n+ // GET count de notif unread\r\n+ export const getCountNotifUnread = async () => {\r\n+    const query = \"SELECT count(sendnotifid) FROM sendnotif WHERE userid = $1 AND viewed=\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rows[0];\r\n+ }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722270694233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,612 +77,10 @@\n  }\r\n \r\n  // GET count de notif unread\r\n  export const getCountNotifUnread = async () => {\r\n-    const query = \"SELECT count(sendnotifid) FROM sendnotif WHERE userid = $1 AND viewed=\";\r\n+    const query = \"SELECT count(sendnotifid) FROM sendnotif WHERE userid = $1 AND viewed = false\";\r\n  \r\n     const result = await pool.query(query, [notifId]);\r\n  \r\n     return result.rows[0];\r\n- }\n-import pool from '../db/connexion.js';\r\n-\r\n-export const allNotifs = async (userId) => {\r\n-\r\n-    const query = \"SELECT *, S.sendnotifid FROM notifications N INNER JOIN sendnotification S ON N.notifid = S.notifid WHERE S.userid = $1 ORDER BY N.notifid DESC\";\r\n-\r\n-    const { rows } = await pool.query(query, [userId]);\r\n-\r\n-    // console.log(rows[0])\r\n-\r\n-    return rows;\r\n-}\r\n-\r\n-export const createNotifs = async (senderId, content) => {\r\n-\r\n-    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n-\r\n-    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) SELECT followerid,$2 FROM follow WHERE followeeid = $1 RETURNING *\";\r\n-\r\n-    const follower = \"SELECT followerid FROM follow WHERE followeeid = $1\";\r\n-\r\n-    const { rows } = await pool.query(query, [senderId, content]);\r\n-\r\n-    const notifid = rows[0].notifid;\r\n-\r\n-    const rows_1 = (await pool.query(sendNotif, [senderId, notifid])).rows;\r\n-\r\n-    const followerId = (await pool.query(follower, [senderId])).rows;\r\n-\r\n-    return {  notification: rows[0], sendNotif: rows_1[0], followerId }\r\n-}\r\n-\r\n-export const createNotifsOne = async (userId, senderId, content) => {\r\n-\r\n-    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n-\r\n-    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) VALUES ($1, $2) RETURNING *\"\r\n-\r\n-    const { rows } = await pool.query(query, [senderId, content]);\r\n-\r\n-    const notifid = await rows[0].notifid;\r\n-\r\n-    const rows_1 = (await pool.query(sendNotif, [userId, notifid])).rows;\r\n-\r\n-    return {  notification: rows[0], sendNotif: rows_1[0] }\r\n-}\r\n-\r\n-\r\n-//delete all notifications\r\n-\r\n-export const deleteAllNotifications = async (userId) =>{\r\n-    const query = \"DELETE FROM sendnotification WHERE userId = $1\";\r\n- \r\n-    const result = await pool.query(query, [userId]);\r\n- \r\n-    return result.rowCount;\r\n- \r\n-}\r\n- \r\n- // delete a notification\r\n- \r\n- export const deleteNotificationById = async (notifId) =>{\r\n-    const query = \"DELETE FROM sendnotification WHERE sendnotifid = $1\";\r\n- \r\n-    const result = await pool.query(query, [notifId]);\r\n- \r\n-    return result.rowCount;\r\n- }\r\n- \r\n- // set views a notification\r\n- export const setViewNotification = async (notifId) => {\r\n-    const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n- \r\n-    const result = await pool.query(query, [notifId]);\r\n- \r\n-    return result.rows[0];\r\n- }\r\n-\r\n- // GET count de notif unread\r\n- export const getCountNotifUnread = async () => {\r\n-    const query = \"SELECT count(sendnotifid) FROM sendnotif WHERE userid = $1 AND \";\r\n- \r\n-    const result = await pool.query(query, [notifId]);\r\n- \r\n-    return result.rows[0];\r\n- }\n-import pool from '../db/connexion.js';\r\n-\r\n-export const allNotifs = async (userId) => {\r\n-\r\n-    const query = \"SELECT *, S.sendnotifid FROM notifications N INNER JOIN sendnotification S ON N.notifid = S.notifid WHERE S.userid = $1 ORDER BY N.notifid DESC\";\r\n-\r\n-    const { rows } = await pool.query(query, [userId]);\r\n-\r\n-    // console.log(rows[0])\r\n-\r\n-    return rows;\r\n-}\r\n-\r\n-export const createNotifs = async (senderId, content) => {\r\n-\r\n-    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n-\r\n-    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) SELECT followerid,$2 FROM follow WHERE followeeid = $1 RETURNING *\";\r\n-\r\n-    const follower = \"SELECT followerid FROM follow WHERE followeeid = $1\";\r\n-\r\n-    const { rows } = await pool.query(query, [senderId, content]);\r\n-\r\n-    const notifid = rows[0].notifid;\r\n-\r\n-    const rows_1 = (await pool.query(sendNotif, [senderId, notifid])).rows;\r\n-\r\n-    const followerId = (await pool.query(follower, [senderId])).rows;\r\n-\r\n-    return {  notification: rows[0], sendNotif: rows_1[0], followerId }\r\n-}\r\n-\r\n-export const createNotifsOne = async (userId, senderId, content) => {\r\n-\r\n-    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n-\r\n-    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) VALUES ($1, $2) RETURNING *\"\r\n-\r\n-    const { rows } = await pool.query(query, [senderId, content]);\r\n-\r\n-    const notifid = await rows[0].notifid;\r\n-\r\n-    const rows_1 = (await pool.query(sendNotif, [userId, notifid])).rows;\r\n-\r\n-    return {  notification: rows[0], sendNotif: rows_1[0] }\r\n-}\r\n-\r\n-\r\n-//delete all notifications\r\n-\r\n-export const deleteAllNotifications = async (userId) =>{\r\n-    const query = \"DELETE FROM sendnotification WHERE userId = $1\";\r\n- \r\n-    const result = await pool.query(query, [userId]);\r\n- \r\n-    return result.rowCount;\r\n- \r\n-}\r\n- \r\n- // delete a notification\r\n- \r\n- export const deleteNotificationById = async (notifId) =>{\r\n-    const query = \"DELETE FROM sendnotification WHERE sendnotifid = $1\";\r\n- \r\n-    const result = await pool.query(query, [notifId]);\r\n- \r\n-    return result.rowCount;\r\n- }\r\n- \r\n- // set views a notification\r\n- export const setViewNotification = async (notifId) => {\r\n-    const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n- \r\n-    const result = await pool.query(query, [notifId]);\r\n- \r\n-    return result.rows[0];\r\n- }\r\n-\r\n- // GET count de notif unread\r\n- export const getCountNotifUnread = async () => {\r\n-    const query = \"SELECT count(sendnotifid) FROM sendnotif WHERE userid = \";\r\n- \r\n-    const result = await pool.query(query, [notifId]);\r\n- \r\n-    return result.rows[0];\r\n- }\n-import pool from '../db/connexion.js';\r\n-\r\n-export const allNotifs = async (userId) => {\r\n-\r\n-    const query = \"SELECT *, S.sendnotifid FROM notifications N INNER JOIN sendnotification S ON N.notifid = S.notifid WHERE S.userid = $1 ORDER BY N.notifid DESC\";\r\n-\r\n-    const { rows } = await pool.query(query, [userId]);\r\n-\r\n-    // console.log(rows[0])\r\n-\r\n-    return rows;\r\n-}\r\n-\r\n-export const createNotifs = async (senderId, content) => {\r\n-\r\n-    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n-\r\n-    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) SELECT followerid,$2 FROM follow WHERE followeeid = $1 RETURNING *\";\r\n-\r\n-    const follower = \"SELECT followerid FROM follow WHERE followeeid = $1\";\r\n-\r\n-    const { rows } = await pool.query(query, [senderId, content]);\r\n-\r\n-    const notifid = rows[0].notifid;\r\n-\r\n-    const rows_1 = (await pool.query(sendNotif, [senderId, notifid])).rows;\r\n-\r\n-    const followerId = (await pool.query(follower, [senderId])).rows;\r\n-\r\n-    return {  notification: rows[0], sendNotif: rows_1[0], followerId }\r\n-}\r\n-\r\n-export const createNotifsOne = async (userId, senderId, content) => {\r\n-\r\n-    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n-\r\n-    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) VALUES ($1, $2) RETURNING *\"\r\n-\r\n-    const { rows } = await pool.query(query, [senderId, content]);\r\n-\r\n-    const notifid = await rows[0].notifid;\r\n-\r\n-    const rows_1 = (await pool.query(sendNotif, [userId, notifid])).rows;\r\n-\r\n-    return {  notification: rows[0], sendNotif: rows_1[0] }\r\n-}\r\n-\r\n-\r\n-//delete all notifications\r\n-\r\n-export const deleteAllNotifications = async (userId) =>{\r\n-    const query = \"DELETE FROM sendnotification WHERE userId = $1\";\r\n- \r\n-    const result = await pool.query(query, [userId]);\r\n- \r\n-    return result.rowCount;\r\n- \r\n-}\r\n- \r\n- // delete a notification\r\n- \r\n- export const deleteNotificationById = async (notifId) =>{\r\n-    const query = \"DELETE FROM sendnotification WHERE sendnotifid = $1\";\r\n- \r\n-    const result = await pool.query(query, [notifId]);\r\n- \r\n-    return result.rowCount;\r\n- }\r\n- \r\n- // set views a notification\r\n- export const setViewNotification = async (notifId) => {\r\n-    const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n- \r\n-    const result = await pool.query(query, [notifId]);\r\n- \r\n-    return result.rows[0];\r\n- }\r\n-\r\n- // GET count de notif unread\r\n- export const getCountNotifUnread = async () => {\r\n-    const query = \"SELECT count(sendnotifid) FROM send\";\r\n- \r\n-    const result = await pool.query(query, [notifId]);\r\n- \r\n-    return result.rows[0];\r\n- }\n-import pool from '../db/connexion.js';\r\n-\r\n-export const allNotifs = async (userId) => {\r\n-\r\n-    const query = \"SELECT *, S.sendnotifid FROM notifications N INNER JOIN sendnotification S ON N.notifid = S.notifid WHERE S.userid = $1 ORDER BY N.notifid DESC\";\r\n-\r\n-    const { rows } = await pool.query(query, [userId]);\r\n-\r\n-    // console.log(rows[0])\r\n-\r\n-    return rows;\r\n-}\r\n-\r\n-export const createNotifs = async (senderId, content) => {\r\n-\r\n-    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n-\r\n-    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) SELECT followerid,$2 FROM follow WHERE followeeid = $1 RETURNING *\";\r\n-\r\n-    const follower = \"SELECT followerid FROM follow WHERE followeeid = $1\";\r\n-\r\n-    const { rows } = await pool.query(query, [senderId, content]);\r\n-\r\n-    const notifid = rows[0].notifid;\r\n-\r\n-    const rows_1 = (await pool.query(sendNotif, [senderId, notifid])).rows;\r\n-\r\n-    const followerId = (await pool.query(follower, [senderId])).rows;\r\n-\r\n-    return {  notification: rows[0], sendNotif: rows_1[0], followerId }\r\n-}\r\n-\r\n-export const createNotifsOne = async (userId, senderId, content) => {\r\n-\r\n-    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n-\r\n-    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) VALUES ($1, $2) RETURNING *\"\r\n-\r\n-    const { rows } = await pool.query(query, [senderId, content]);\r\n-\r\n-    const notifid = await rows[0].notifid;\r\n-\r\n-    const rows_1 = (await pool.query(sendNotif, [userId, notifid])).rows;\r\n-\r\n-    return {  notification: rows[0], sendNotif: rows_1[0] }\r\n-}\r\n-\r\n-\r\n-//delete all notifications\r\n-\r\n-export const deleteAllNotifications = async (userId) =>{\r\n-    const query = \"DELETE FROM sendnotification WHERE userId = $1\";\r\n- \r\n-    const result = await pool.query(query, [userId]);\r\n- \r\n-    return result.rowCount;\r\n- \r\n-}\r\n- \r\n- // delete a notification\r\n- \r\n- export const deleteNotificationById = async (notifId) =>{\r\n-    const query = \"DELETE FROM sendnotification WHERE sendnotifid = $1\";\r\n- \r\n-    const result = await pool.query(query, [notifId]);\r\n- \r\n-    return result.rowCount;\r\n- }\r\n- \r\n- // set views a notification\r\n- export const setViewNotification = async (notifId) => {\r\n-    const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n- \r\n-    const result = await pool.query(query, [notifId]);\r\n- \r\n-    return result.rows[0];\r\n- }\r\n-\r\n- // GET count de notif unread\r\n- export const getCountNotifUnread = async () => {\r\n-    const query = \"SELECT count(send)\";\r\n- \r\n-    const result = await pool.query(query, [notifId]);\r\n- \r\n-    return result.rows[0];\r\n- }\n-import pool from '../db/connexion.js';\r\n-\r\n-export const allNotifs = async (userId) => {\r\n-\r\n-    const query = \"SELECT *, S.sendnotifid FROM notifications N INNER JOIN sendnotification S ON N.notifid = S.notifid WHERE S.userid = $1 ORDER BY N.notifid DESC\";\r\n-\r\n-    const { rows } = await pool.query(query, [userId]);\r\n-\r\n-    // console.log(rows[0])\r\n-\r\n-    return rows;\r\n-}\r\n-\r\n-export const createNotifs = async (senderId, content) => {\r\n-\r\n-    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n-\r\n-    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) SELECT followerid,$2 FROM follow WHERE followeeid = $1 RETURNING *\";\r\n-\r\n-    const follower = \"SELECT followerid FROM follow WHERE followeeid = $1\";\r\n-\r\n-    const { rows } = await pool.query(query, [senderId, content]);\r\n-\r\n-    const notifid = rows[0].notifid;\r\n-\r\n-    const rows_1 = (await pool.query(sendNotif, [senderId, notifid])).rows;\r\n-\r\n-    const followerId = (await pool.query(follower, [senderId])).rows;\r\n-\r\n-    return {  notification: rows[0], sendNotif: rows_1[0], followerId }\r\n-}\r\n-\r\n-export const createNotifsOne = async (userId, senderId, content) => {\r\n-\r\n-    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n-\r\n-    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) VALUES ($1, $2) RETURNING *\"\r\n-\r\n-    const { rows } = await pool.query(query, [senderId, content]);\r\n-\r\n-    const notifid = await rows[0].notifid;\r\n-\r\n-    const rows_1 = (await pool.query(sendNotif, [userId, notifid])).rows;\r\n-\r\n-    return {  notification: rows[0], sendNotif: rows_1[0] }\r\n-}\r\n-\r\n-\r\n-//delete all notifications\r\n-\r\n-export const deleteAllNotifications = async (userId) =>{\r\n-    const query = \"DELETE FROM sendnotification WHERE userId = $1\";\r\n- \r\n-    const result = await pool.query(query, [userId]);\r\n- \r\n-    return result.rowCount;\r\n- \r\n-}\r\n- \r\n- // delete a notification\r\n- \r\n- export const deleteNotificationById = async (notifId) =>{\r\n-    const query = \"DELETE FROM sendnotification WHERE sendnotifid = $1\";\r\n- \r\n-    const result = await pool.query(query, [notifId]);\r\n- \r\n-    return result.rowCount;\r\n- }\r\n- \r\n- // set views a notification\r\n- export const setViewNotification = async (notifId) => {\r\n-    const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n- \r\n-    const result = await pool.query(query, [notifId]);\r\n- \r\n-    return result.rows[0];\r\n- }\r\n-\r\n- // GET count de notif unread\r\n- export const getCountNotifUnread = async () => {\r\n-    const query = \"SELECT count()\";\r\n- \r\n-    const result = await pool.query(query, [notifId]);\r\n- \r\n-    return result.rows[0];\r\n- }\n-import pool from '../db/connexion.js';\r\n-\r\n-export const allNotifs = async (userId) => {\r\n-\r\n-    const query = \"SELECT *, S.sendnotifid FROM notifications N INNER JOIN sendnotification S ON N.notifid = S.notifid WHERE S.userid = $1 ORDER BY N.notifid DESC\";\r\n-\r\n-    const { rows } = await pool.query(query, [userId]);\r\n-\r\n-    // console.log(rows[0])\r\n-\r\n-    return rows;\r\n-}\r\n-\r\n-export const createNotifs = async (senderId, content) => {\r\n-\r\n-    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n-\r\n-    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) SELECT followerid,$2 FROM follow WHERE followeeid = $1 RETURNING *\";\r\n-\r\n-    const follower = \"SELECT followerid FROM follow WHERE followeeid = $1\";\r\n-\r\n-    const { rows } = await pool.query(query, [senderId, content]);\r\n-\r\n-    const notifid = rows[0].notifid;\r\n-\r\n-    const rows_1 = (await pool.query(sendNotif, [senderId, notifid])).rows;\r\n-\r\n-    const followerId = (await pool.query(follower, [senderId])).rows;\r\n-\r\n-    return {  notification: rows[0], sendNotif: rows_1[0], followerId }\r\n-}\r\n-\r\n-export const createNotifsOne = async (userId, senderId, content) => {\r\n-\r\n-    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n-\r\n-    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) VALUES ($1, $2) RETURNING *\"\r\n-\r\n-    const { rows } = await pool.query(query, [senderId, content]);\r\n-\r\n-    const notifid = await rows[0].notifid;\r\n-\r\n-    const rows_1 = (await pool.query(sendNotif, [userId, notifid])).rows;\r\n-\r\n-    return {  notification: rows[0], sendNotif: rows_1[0] }\r\n-}\r\n-\r\n-\r\n-//delete all notifications\r\n-\r\n-export const deleteAllNotifications = async (userId) =>{\r\n-    const query = \"DELETE FROM sendnotification WHERE userId = $1\";\r\n- \r\n-    const result = await pool.query(query, [userId]);\r\n- \r\n-    return result.rowCount;\r\n- \r\n-}\r\n- \r\n- // delete a notification\r\n- \r\n- export const deleteNotificationById = async (notifId) =>{\r\n-    const query = \"DELETE FROM sendnotification WHERE sendnotifid = $1\";\r\n- \r\n-    const result = await pool.query(query, [notifId]);\r\n- \r\n-    return result.rowCount;\r\n- }\r\n- \r\n- // set views a notification\r\n- export const setViewNotification = async (notifId) => {\r\n-    const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n- \r\n-    const result = await pool.query(query, [notifId]);\r\n- \r\n-    return result.rows[0];\r\n- }\r\n-\r\n- // GET count de notif unread\r\n- export const getCountNotifUnread = async () => {\r\n-    const query = \"SELECT \";\r\n- \r\n-    const result = await pool.query(query, [notifId]);\r\n- \r\n-    return result.rows[0];\r\n- }\n-import pool from '../db/connexion.js';\r\n-\r\n-export const allNotifs = async (userId) => {\r\n-\r\n-    const query = \"SELECT *, S.sendnotifid FROM notifications N INNER JOIN sendnotification S ON N.notifid = S.notifid WHERE S.userid = $1 ORDER BY N.notifid DESC\";\r\n-\r\n-    const { rows } = await pool.query(query, [userId]);\r\n-\r\n-    // console.log(rows[0])\r\n-\r\n-    return rows;\r\n-}\r\n-\r\n-export const createNotifs = async (senderId, content) => {\r\n-\r\n-    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n-\r\n-    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) SELECT followerid,$2 FROM follow WHERE followeeid = $1 RETURNING *\";\r\n-\r\n-    const follower = \"SELECT followerid FROM follow WHERE followeeid = $1\";\r\n-\r\n-    const { rows } = await pool.query(query, [senderId, content]);\r\n-\r\n-    const notifid = rows[0].notifid;\r\n-\r\n-    const rows_1 = (await pool.query(sendNotif, [senderId, notifid])).rows;\r\n-\r\n-    const followerId = (await pool.query(follower, [senderId])).rows;\r\n-\r\n-    return {  notification: rows[0], sendNotif: rows_1[0], followerId }\r\n-}\r\n-\r\n-export const createNotifsOne = async (userId, senderId, content) => {\r\n-\r\n-    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n-\r\n-    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) VALUES ($1, $2) RETURNING *\"\r\n-\r\n-    const { rows } = await pool.query(query, [senderId, content]);\r\n-\r\n-    const notifid = await rows[0].notifid;\r\n-\r\n-    const rows_1 = (await pool.query(sendNotif, [userId, notifid])).rows;\r\n-\r\n-    return {  notification: rows[0], sendNotif: rows_1[0] }\r\n-}\r\n-\r\n-\r\n-//delete all notifications\r\n-\r\n-export const deleteAllNotifications = async (userId) =>{\r\n-    const query = \"DELETE FROM sendnotification WHERE userId = $1\";\r\n- \r\n-    const result = await pool.query(query, [userId]);\r\n- \r\n-    return result.rowCount;\r\n- \r\n-}\r\n- \r\n- // delete a notification\r\n- \r\n- export const deleteNotificationById = async (notifId) =>{\r\n-    const query = \"DELETE FROM sendnotification WHERE sendnotifid = $1\";\r\n- \r\n-    const result = await pool.query(query, [notifId]);\r\n- \r\n-    return result.rowCount;\r\n- }\r\n- \r\n- // set views a notification\r\n- export const setViewNotification = async (notifId) => {\r\n-    const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n- \r\n-    const result = await pool.query(query, [notifId]);\r\n- \r\n-    return result.rows[0];\r\n- }\r\n-\r\n- // GET count de notif unread\r\n- export const getCountNotifUnread = async () => {\r\n-    const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n- \r\n-    const result = await pool.query(query, [notifId]);\r\n- \r\n-    return result.rows[0];\r\n  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722270702092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n  }\r\n \r\n  // GET count de notif unread\r\n  export const getCountNotifUnread = async () => {\r\n-    const query = \"SELECT count(sendnotifid) FROM sendnotif WHERE userid = $1 AND viewed = false\";\r\n+    const query = \"SELECT count(sendnotifid) as count FROM sendnotif WHERE userid = $1 AND viewed = false\";\r\n  \r\n     const result = await pool.query(query, [notifId]);\r\n  \r\n     return result.rows[0];\r\n"
                },
                {
                    "date": 1722270708068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n  }\r\n \r\n  // GET count de notif unread\r\n  export const getCountNotifUnread = async () => {\r\n-    const query = \"SELECT count(sendnotifid) as count FROM sendnotif WHERE userid = $1 AND viewed = false\";\r\n+    const query = \"SELECT count(sendnotifid) as count FROM sendnotif WHERE userid = $1 AND viewed = false \";\r\n  \r\n     const result = await pool.query(query, [notifId]);\r\n  \r\n     return result.rows[0];\r\n"
                },
                {
                    "date": 1722270716689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n  }\r\n \r\n  // GET count de notif unread\r\n  export const getCountNotifUnread = async () => {\r\n-    const query = \"SELECT count(sendnotifid) as count FROM sendnotif WHERE userid = $1 AND viewed = false \";\r\n+    const query = \"SELECT count(sendnotifid) as count FROM sendnotif WHERE userid = $1 AND viewed = false\";\r\n  \r\n     const result = await pool.query(query, [notifId]);\r\n  \r\n     return result.rows[0];\r\n"
                },
                {
                    "date": 1722270727758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,8 +79,8 @@\n  // GET count de notif unread\r\n  export const getCountNotifUnread = async () => {\r\n     const query = \"SELECT count(sendnotifid) as count FROM sendnotif WHERE userid = $1 AND viewed = false\";\r\n  \r\n-    const result = await pool.query(query, [notifId]);\r\n+    const result = await pool.query(query, [userId]);\r\n  \r\n     return result.rows[0];\r\n  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722270733039,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+import pool from '../db/connexion.js';\r\n+\r\n+export const allNotifs = async (userId) => {\r\n+\r\n+    const query = \"SELECT *, S.sendnotifid FROM notifications N INNER JOIN sendnotification S ON N.notifid = S.notifid WHERE S.userid = $1 ORDER BY N.notifid DESC\";\r\n+\r\n+    const { rows } = await pool.query(query, [userId]);\r\n+\r\n+    // console.log(rows[0])\r\n+\r\n+    return rows;\r\n+}\r\n+\r\n+export const createNotifs = async (senderId, content) => {\r\n+\r\n+    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n+\r\n+    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) SELECT followerid,$2 FROM follow WHERE followeeid = $1 RETURNING *\";\r\n+\r\n+    const follower = \"SELECT followerid FROM follow WHERE followeeid = $1\";\r\n+\r\n+    const { rows } = await pool.query(query, [senderId, content]);\r\n+\r\n+    const notifid = rows[0].notifid;\r\n+\r\n+    const rows_1 = (await pool.query(sendNotif, [senderId, notifid])).rows;\r\n+\r\n+    const followerId = (await pool.query(follower, [senderId])).rows;\r\n+\r\n+    return {  notification: rows[0], sendNotif: rows_1[0], followerId }\r\n+}\r\n+\r\n+export const createNotifsOne = async (userId, senderId, content) => {\r\n+\r\n+    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n+\r\n+    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) VALUES ($1, $2) RETURNING *\"\r\n+\r\n+    const { rows } = await pool.query(query, [senderId, content]);\r\n+\r\n+    const notifid = await rows[0].notifid;\r\n+\r\n+    const rows_1 = (await pool.query(sendNotif, [userId, notifid])).rows;\r\n+\r\n+    return {  notification: rows[0], sendNotif: rows_1[0] }\r\n+}\r\n+\r\n+\r\n+//delete all notifications\r\n+\r\n+export const deleteAllNotifications = async (userId) =>{\r\n+    const query = \"DELETE FROM sendnotification WHERE userId = $1\";\r\n+ \r\n+    const result = await pool.query(query, [userId]);\r\n+ \r\n+    return result.rowCount;\r\n+ \r\n+}\r\n+ \r\n+ // delete a notification\r\n+ \r\n+ export const deleteNotificationById = async (notifId) =>{\r\n+    const query = \"DELETE FROM sendnotification WHERE sendnotifid = $1\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rowCount;\r\n+ }\r\n+ \r\n+ // set views a notification\r\n+ export const setViewNotification = async (notifId) => {\r\n+    const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rows[0];\r\n+ }\r\n+\r\n+ // GET count de notif unread\r\n+ export const getCountNotifUnread = async (userId) => {\r\n+    const query = \"SELECT count(sendnotifid) as count FROM sendnotif WHERE userid = $1 AND viewed = false\";\r\n+ \r\n+    const result = await pool.query(query, [userId]);\r\n+ \r\n+    return result.rows[0];\r\n+ }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722270742738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+import pool from '../db/connexion.js';\r\n+\r\n+export const allNotifs = async (userId) => {\r\n+\r\n+    const query = \"SELECT *, S.sendnotifid FROM notifications N INNER JOIN sendnotification S ON N.notifid = S.notifid WHERE S.userid = $1 ORDER BY N.notifid DESC\";\r\n+\r\n+    const { rows } = await pool.query(query, [userId]);\r\n+\r\n+    // console.log(rows[0])\r\n+\r\n+    return rows;\r\n+}\r\n+\r\n+export const createNotifs = async (senderId, content) => {\r\n+\r\n+    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n+\r\n+    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) SELECT followerid,$2 FROM follow WHERE followeeid = $1 RETURNING *\";\r\n+\r\n+    const follower = \"SELECT followerid FROM follow WHERE followeeid = $1\";\r\n+\r\n+    const { rows } = await pool.query(query, [senderId, content]);\r\n+\r\n+    const notifid = rows[0].notifid;\r\n+\r\n+    const rows_1 = (await pool.query(sendNotif, [senderId, notifid])).rows;\r\n+\r\n+    const followerId = (await pool.query(follower, [senderId])).rows;\r\n+\r\n+    return {  notification: rows[0], sendNotif: rows_1[0], followerId }\r\n+}\r\n+\r\n+export const createNotifsOne = async (userId, senderId, content) => {\r\n+\r\n+    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n+\r\n+    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) VALUES ($1, $2) RETURNING *\"\r\n+\r\n+    const { rows } = await pool.query(query, [senderId, content]);\r\n+\r\n+    const notifid = await rows[0].notifid;\r\n+\r\n+    const rows_1 = (await pool.query(sendNotif, [userId, notifid])).rows;\r\n+\r\n+    return {  notification: rows[0], sendNotif: rows_1[0] }\r\n+}\r\n+\r\n+\r\n+//delete all notifications\r\n+\r\n+export const deleteAllNotifications = async (userId) =>{\r\n+    const query = \"DELETE FROM sendnotification WHERE userId = $1\";\r\n+ \r\n+    const result = await pool.query(query, [userId]);\r\n+ \r\n+    return result.rowCount;\r\n+ \r\n+}\r\n+ \r\n+ // delete a notification\r\n+ \r\n+ export const deleteNotificationById = async (notifId) =>{\r\n+    const query = \"DELETE FROM sendnotification WHERE sendnotifid = $1\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rowCount;\r\n+ }\r\n+ \r\n+ // set views a notification\r\n+ export const setViewNotification = async (notifId) => {\r\n+    const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rows[0];\r\n+ }\r\n+\r\n+ // GET count de notif unread\r\n+ export const getCountNotifUnread = async (userId) => {\r\n+    const query = \"SELECT count(sendnotifid) as count FROM sendnotif WHERE userid = $1 AND viewed = false\";\r\n+ \r\n+    const result = await pool.query(query, [userId]);\r\n+ \r\n+    return result.rows[0];\r\n+ }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722271171855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+import pool from '../db/connexion.js';\r\n+\r\n+export const allNotifs = async (userId) => {\r\n+\r\n+    const query = \"SELECT *, S.sendnotifid FROM notifications N INNER JOIN sendnotification S ON N.notifid = S.notifid WHERE S.userid = $1 ORDER BY N.notifid DESC\";\r\n+\r\n+    const { rows } = await pool.query(query, [userId]);\r\n+\r\n+    // console.log(rows[0])\r\n+\r\n+    return rows;\r\n+}\r\n+\r\n+export const createNotifs = async (senderId, content) => {\r\n+\r\n+    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n+\r\n+    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) SELECT followerid,$2 FROM follow WHERE followeeid = $1 RETURNING *\";\r\n+\r\n+    const follower = \"SELECT followerid FROM follow WHERE followeeid = $1\";\r\n+\r\n+    const { rows } = await pool.query(query, [senderId, content]);\r\n+\r\n+    const notifid = rows[0].notifid;\r\n+\r\n+    const rows_1 = (await pool.query(sendNotif, [senderId, notifid])).rows;\r\n+\r\n+    const followerId = (await pool.query(follower, [senderId])).rows;\r\n+\r\n+    return {  notification: rows[0], sendNotif: rows_1[0], followerId }\r\n+}\r\n+\r\n+export const createNotifsOne = async (userId, senderId, content) => {\r\n+\r\n+    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n+\r\n+    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) VALUES ($1, $2) RETURNING *\"\r\n+\r\n+    const { rows } = await pool.query(query, [senderId, content]);\r\n+\r\n+    const notifid = await rows[0].notifid;\r\n+\r\n+    const rows_1 = (await pool.query(sendNotif, [userId, notifid])).rows;\r\n+\r\n+    return {  notification: rows[0], sendNotif: rows_1[0] }\r\n+}\r\n+\r\n+\r\n+//delete all notifications\r\n+\r\n+export const deleteAllNotifications = async (userId) =>{\r\n+    const query = \"DELETE FROM sendnotification WHERE userId = $1\";\r\n+ \r\n+    const result = await pool.query(query, [userId]);\r\n+ \r\n+    return result.rowCount;\r\n+ \r\n+}\r\n+ \r\n+ // delete a notification\r\n+ \r\n+ export const deleteNotificationById = async (notifId) =>{\r\n+    const query = \"DELETE FROM sendnotification WHERE sendnotifid = $1\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rowCount;\r\n+ }\r\n+ \r\n+ // set views a notification\r\n+ export const setViewNotification = async (notifId) => {\r\n+    const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n+ \r\n+    const result = await pool.query(query, [notifId]);\r\n+ \r\n+    return result.rows[0];\r\n+ }\r\n+\r\n+ // GET count de notif unread\r\n+ export const getCountNotifUnread = async (userId) => {\r\n+    const query = \"SELECT count(sendnotifid) as count FROM sendnotification WHERE userid = $1 AND viewed = false\";\r\n+ \r\n+    const result = await pool.query(query, [userId]);\r\n+ \r\n+    return result.rows[0];\r\n+ }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1722270576312,
            "name": "Commit-0",
            "content": "import pool from '../db/connexion.js';\r\n\r\nexport const allNotifs = async (userId) => {\r\n\r\n    const query = \"SELECT *, S.sendnotifid FROM notifications N INNER JOIN sendnotification S ON N.notifid = S.notifid WHERE S.userid = $1 ORDER BY N.notifid DESC\";\r\n\r\n    const { rows } = await pool.query(query, [userId]);\r\n\r\n    // console.log(rows[0])\r\n\r\n    return rows;\r\n}\r\n\r\nexport const createNotifs = async (senderId, content) => {\r\n\r\n    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n\r\n    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) SELECT followerid,$2 FROM follow WHERE followeeid = $1 RETURNING *\";\r\n\r\n    const follower = \"SELECT followerid FROM follow WHERE followeeid = $1\";\r\n\r\n    const { rows } = await pool.query(query, [senderId, content]);\r\n\r\n    const notifid = rows[0].notifid;\r\n\r\n    const rows_1 = (await pool.query(sendNotif, [senderId, notifid])).rows;\r\n\r\n    const followerId = (await pool.query(follower, [senderId])).rows;\r\n\r\n    return {  notification: rows[0], sendNotif: rows_1[0], followerId }\r\n}\r\n\r\nexport const createNotifsOne = async (userId, senderId, content) => {\r\n\r\n    const query = \"INSERT INTO notifications(senderId, content) VALUES ($1, $2) RETURNING *\";\r\n\r\n    const sendNotif = \"INSERT INTO sendnotification (userid, notifid) VALUES ($1, $2) RETURNING *\"\r\n\r\n    const { rows } = await pool.query(query, [senderId, content]);\r\n\r\n    const notifid = await rows[0].notifid;\r\n\r\n    const rows_1 = (await pool.query(sendNotif, [userId, notifid])).rows;\r\n\r\n    return {  notification: rows[0], sendNotif: rows_1[0] }\r\n}\r\n\r\n\r\n//delete all notifications\r\n\r\nexport const deleteAllNotifications = async (userId) =>{\r\n    const query = \"DELETE FROM sendnotification WHERE userId = $1\";\r\n \r\n    const result = await pool.query(query, [userId]);\r\n \r\n    return result.rowCount;\r\n \r\n}\r\n \r\n // delete a notification\r\n \r\n export const deleteNotificationById = async (notifId) =>{\r\n    const query = \"DELETE FROM sendnotification WHERE sendnotifid = $1\";\r\n \r\n    const result = await pool.query(query, [notifId]);\r\n \r\n    return result.rowCount;\r\n }\r\n \r\n // set views a notification\r\n export const setViewNotification = async (notifId) => {\r\n    const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n \r\n    const result = await pool.query(query, [notifId]);\r\n \r\n    return result.rows[0];\r\n }\r\n export const setViewNotification = async (notifId) => {\r\n    const query = \"UPDATE sendnotification SET viewed = TRUE WHERE sendnotifid = $1 RETURNING *\";\r\n \r\n    const result = await pool.query(query, [notifId]);\r\n \r\n    return result.rows[0];\r\n }"
        }
    ]
}